// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		2122BBCF16F185120056D11C /* KSCrashReportSinkTakanashi.h in Headers */ = {isa = PBXBuildFile; fileRef = 2122BBCD16F185120056D11C /* KSCrashReportSinkTakanashi.h */; settings = {ATTRIBUTES = (Public, ); }; };
		2122BBD016F185120056D11C /* KSCrashReportSinkTakanashi.h in Headers */ = {isa = PBXBuildFile; fileRef = 2122BBCD16F185120056D11C /* KSCrashReportSinkTakanashi.h */; settings = {ATTRIBUTES = (Public, ); }; };
		2122BBD116F185120056D11C /* KSCrashReportSinkTakanashi.m in Sources */ = {isa = PBXBuildFile; fileRef = 2122BBCE16F185120056D11C /* KSCrashReportSinkTakanashi.m */; };
		2122BBD216F185120056D11C /* KSCrashReportSinkTakanashi.m in Sources */ = {isa = PBXBuildFile; fileRef = 2122BBCE16F185120056D11C /* KSCrashReportSinkTakanashi.m */; };
		2193ACC416F19D690016EA5F /* KSCrashInstallationTakanashi.h in Headers */ = {isa = PBXBuildFile; fileRef = 2193ACC216F19D690016EA5F /* KSCrashInstallationTakanashi.h */; settings = {ATTRIBUTES = (Public, ); }; };
		2193ACC516F19D690016EA5F /* KSCrashInstallationTakanashi.h in Headers */ = {isa = PBXBuildFile; fileRef = 2193ACC216F19D690016EA5F /* KSCrashInstallationTakanashi.h */; settings = {ATTRIBUTES = (Public, ); }; };
		2193ACC616F19D690016EA5F /* KSCrashInstallationTakanashi.m in Sources */ = {isa = PBXBuildFile; fileRef = 2193ACC316F19D690016EA5F /* KSCrashInstallationTakanashi.m */; };
		2193ACC716F19D690016EA5F /* KSCrashInstallationTakanashi.m in Sources */ = {isa = PBXBuildFile; fileRef = 2193ACC316F19D690016EA5F /* KSCrashInstallationTakanashi.m */; };
		21D6639E16F1AD1400654F31 /* KSCrashInstallationTakanashi_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = 21D6639D16F1AD1400654F31 /* KSCrashInstallationTakanashi_Tests.m */; };
		394DCC71164F43C2008A4C50 /* KSCrashDoctor.h in Headers */ = {isa = PBXBuildFile; fileRef = 394DCC6F164F43C2008A4C50 /* KSCrashDoctor.h */; };
		394DCC72164F43C2008A4C50 /* KSCrashDoctor.m in Sources */ = {isa = PBXBuildFile; fileRef = 394DCC70164F43C2008A4C50 /* KSCrashDoctor.m */; };
		394DCC73164F547E008A4C50 /* KSCrashDoctor.h in Headers */ = {isa = PBXBuildFile; fileRef = 394DCC6F164F43C2008A4C50 /* KSCrashDoctor.h */; };
		394DCC74164F547E008A4C50 /* KSCrashDoctor.m in Sources */ = {isa = PBXBuildFile; fileRef = 394DCC70164F43C2008A4C50 /* KSCrashDoctor.m */; };
		397A7C87162266480096E287 /* KSCrashReportFields.h in Headers */ = {isa = PBXBuildFile; fileRef = 397A7C86162266480096E287 /* KSCrashReportFields.h */; };
		397A7C88162266480096E287 /* KSCrashReportFields.h in Headers */ = {isa = PBXBuildFile; fileRef = 397A7C86162266480096E287 /* KSCrashReportFields.h */; };
		39D329DC16765AD500D989DC /* KSCrashSentry_Deadlock.h in Headers */ = {isa = PBXBuildFile; fileRef = 39D329DA16765AD500D989DC /* KSCrashSentry_Deadlock.h */; };
		39D329DD16765AD500D989DC /* KSCrashSentry_Deadlock.h in Headers */ = {isa = PBXBuildFile; fileRef = 39D329DA16765AD500D989DC /* KSCrashSentry_Deadlock.h */; };
		39D329DE16765AD500D989DC /* KSCrashSentry_Deadlock.m in Sources */ = {isa = PBXBuildFile; fileRef = 39D329DB16765AD500D989DC /* KSCrashSentry_Deadlock.m */; };
		39D329DF16765AD500D989DC /* KSCrashSentry_Deadlock.m in Sources */ = {isa = PBXBuildFile; fileRef = 39D329DB16765AD500D989DC /* KSCrashSentry_Deadlock.m */; };
		39DA35BA1618432E009EB332 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 39DA35B81618432E009EB332 /* InfoPlist.strings */; };
		39DA35C716184338009EB332 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 39DA35A01618430C009EB332 /* Foundation.framework */; };
		39DA35D616184338009EB332 /* SenTestingKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 39DA35D516184338009EB332 /* SenTestingKit.framework */; };
		39DA35D816184338009EB332 /* UIKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 39DA35D716184338009EB332 /* UIKit.framework */; };
		39DA35D916184338009EB332 /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 39DA35A01618430C009EB332 /* Foundation.framework */; };
		39DA35E216184338009EB332 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 39DA35E016184338009EB332 /* InfoPlist.strings */; };
		39DA82BE16184456001E7F79 /* KSCrash.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82B916184456001E7F79 /* KSCrash.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA82BF16184456001E7F79 /* KSCrash.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82B916184456001E7F79 /* KSCrash.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA82C016184456001E7F79 /* KSCrash.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82BA16184456001E7F79 /* KSCrash.m */; };
		39DA82C116184456001E7F79 /* KSCrash.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82BA16184456001E7F79 /* KSCrash.m */; };
		39DA82C216184456001E7F79 /* KSCrashAdvanced.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82BB16184456001E7F79 /* KSCrashAdvanced.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA82C316184456001E7F79 /* KSCrashAdvanced.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82BB16184456001E7F79 /* KSCrashAdvanced.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA82C416184456001E7F79 /* KSCrashReportStore.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82BC16184456001E7F79 /* KSCrashReportStore.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA82C516184456001E7F79 /* KSCrashReportStore.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82BC16184456001E7F79 /* KSCrashReportStore.h */; };
		39DA82C616184456001E7F79 /* KSCrashReportStore.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82BD16184456001E7F79 /* KSCrashReportStore.m */; };
		39DA82C716184456001E7F79 /* KSCrashReportStore.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82BD16184456001E7F79 /* KSCrashReportStore.m */; };
		39DA82E116184487001E7F79 /* KSCrashReportFilterSets.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82CB16184487001E7F79 /* KSCrashReportFilterSets.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA82E216184487001E7F79 /* KSCrashReportFilterSets.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82CB16184487001E7F79 /* KSCrashReportFilterSets.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA82E316184487001E7F79 /* KSCrashReportFilterSets.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82CC16184487001E7F79 /* KSCrashReportFilterSets.m */; };
		39DA82E416184487001E7F79 /* KSCrashReportFilterSets.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82CC16184487001E7F79 /* KSCrashReportFilterSets.m */; };
		39DA82E516184487001E7F79 /* KSCrashReportFilter.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82CD16184487001E7F79 /* KSCrashReportFilter.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA82E616184487001E7F79 /* KSCrashReportFilter.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82CD16184487001E7F79 /* KSCrashReportFilter.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA82E716184487001E7F79 /* KSCrashReportFilter.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82CE16184487001E7F79 /* KSCrashReportFilter.m */; };
		39DA82E816184487001E7F79 /* KSCrashReportFilter.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82CE16184487001E7F79 /* KSCrashReportFilter.m */; };
		39DA82E916184487001E7F79 /* KSCrashReportFilterAlert.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82CF16184487001E7F79 /* KSCrashReportFilterAlert.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA82EA16184487001E7F79 /* KSCrashReportFilterAlert.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82CF16184487001E7F79 /* KSCrashReportFilterAlert.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA82EB16184487001E7F79 /* KSCrashReportFilterAlert.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82D016184487001E7F79 /* KSCrashReportFilterAlert.m */; };
		39DA82EC16184487001E7F79 /* KSCrashReportFilterAlert.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82D016184487001E7F79 /* KSCrashReportFilterAlert.m */; };
		39DA82ED16184487001E7F79 /* KSCrashReportFilterAppleFmt.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82D116184487001E7F79 /* KSCrashReportFilterAppleFmt.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA82EE16184487001E7F79 /* KSCrashReportFilterAppleFmt.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82D116184487001E7F79 /* KSCrashReportFilterAppleFmt.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA82EF16184487001E7F79 /* KSCrashReportFilterAppleFmt.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82D216184487001E7F79 /* KSCrashReportFilterAppleFmt.m */; };
		39DA82F016184487001E7F79 /* KSCrashReportFilterAppleFmt.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82D216184487001E7F79 /* KSCrashReportFilterAppleFmt.m */; };
		39DA82F116184487001E7F79 /* KSCrashReportFilterBasic.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82D316184487001E7F79 /* KSCrashReportFilterBasic.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA82F216184487001E7F79 /* KSCrashReportFilterBasic.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82D316184487001E7F79 /* KSCrashReportFilterBasic.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA82F316184487001E7F79 /* KSCrashReportFilterBasic.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82D416184487001E7F79 /* KSCrashReportFilterBasic.m */; };
		39DA82F416184487001E7F79 /* KSCrashReportFilterBasic.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82D416184487001E7F79 /* KSCrashReportFilterBasic.m */; };
		39DA82F516184487001E7F79 /* KSCrashReportFilterGZip.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82D516184487001E7F79 /* KSCrashReportFilterGZip.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA82F616184487001E7F79 /* KSCrashReportFilterGZip.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82D516184487001E7F79 /* KSCrashReportFilterGZip.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA82F716184487001E7F79 /* KSCrashReportFilterGZip.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82D616184487001E7F79 /* KSCrashReportFilterGZip.m */; };
		39DA82F816184487001E7F79 /* KSCrashReportFilterGZip.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82D616184487001E7F79 /* KSCrashReportFilterGZip.m */; };
		39DA82F916184487001E7F79 /* KSCrashReportFilterJSON.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82D716184487001E7F79 /* KSCrashReportFilterJSON.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA82FA16184487001E7F79 /* KSCrashReportFilterJSON.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82D716184487001E7F79 /* KSCrashReportFilterJSON.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA82FB16184487001E7F79 /* KSCrashReportFilterJSON.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82D816184487001E7F79 /* KSCrashReportFilterJSON.m */; };
		39DA82FC16184487001E7F79 /* KSCrashReportFilterJSON.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82D816184487001E7F79 /* KSCrashReportFilterJSON.m */; };
		39DA82FD16184487001E7F79 /* KSCrashReportSinkConsole.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82D916184487001E7F79 /* KSCrashReportSinkConsole.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA82FE16184487001E7F79 /* KSCrashReportSinkConsole.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82D916184487001E7F79 /* KSCrashReportSinkConsole.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA82FF16184487001E7F79 /* KSCrashReportSinkConsole.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82DA16184487001E7F79 /* KSCrashReportSinkConsole.m */; };
		39DA830016184487001E7F79 /* KSCrashReportSinkConsole.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82DA16184487001E7F79 /* KSCrashReportSinkConsole.m */; };
		39DA830116184487001E7F79 /* KSCrashReportSinkEMail.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82DB16184487001E7F79 /* KSCrashReportSinkEMail.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA830216184487001E7F79 /* KSCrashReportSinkEMail.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82DB16184487001E7F79 /* KSCrashReportSinkEMail.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA830316184487001E7F79 /* KSCrashReportSinkEMail.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82DC16184487001E7F79 /* KSCrashReportSinkEMail.m */; };
		39DA830416184487001E7F79 /* KSCrashReportSinkEMail.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82DC16184487001E7F79 /* KSCrashReportSinkEMail.m */; };
		39DA830516184487001E7F79 /* KSCrashReportSinkQuincyHockey.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82DD16184487001E7F79 /* KSCrashReportSinkQuincyHockey.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA830616184487001E7F79 /* KSCrashReportSinkQuincyHockey.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82DD16184487001E7F79 /* KSCrashReportSinkQuincyHockey.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA830716184487001E7F79 /* KSCrashReportSinkQuincyHockey.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82DE16184487001E7F79 /* KSCrashReportSinkQuincyHockey.m */; };
		39DA830816184487001E7F79 /* KSCrashReportSinkQuincyHockey.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82DE16184487001E7F79 /* KSCrashReportSinkQuincyHockey.m */; };
		39DA830916184487001E7F79 /* KSCrashReportSinkStandard.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82DF16184487001E7F79 /* KSCrashReportSinkStandard.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA830A16184487001E7F79 /* KSCrashReportSinkStandard.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82DF16184487001E7F79 /* KSCrashReportSinkStandard.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA830B16184487001E7F79 /* KSCrashReportSinkStandard.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82E016184487001E7F79 /* KSCrashReportSinkStandard.m */; };
		39DA830C16184487001E7F79 /* KSCrashReportSinkStandard.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82E016184487001E7F79 /* KSCrashReportSinkStandard.m */; };
		39DA831A16184492001E7F79 /* Container+DeepSearch.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA830D16184492001E7F79 /* Container+DeepSearch.h */; };
		39DA831B16184492001E7F79 /* Container+DeepSearch.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA830D16184492001E7F79 /* Container+DeepSearch.h */; };
		39DA831C16184492001E7F79 /* Container+DeepSearch.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA830E16184492001E7F79 /* Container+DeepSearch.m */; };
		39DA831D16184492001E7F79 /* Container+DeepSearch.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA830E16184492001E7F79 /* Container+DeepSearch.m */; };
		39DA831E16184492001E7F79 /* KSHTTPMultipartPostBody.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA830F16184492001E7F79 /* KSHTTPMultipartPostBody.h */; };
		39DA831F16184492001E7F79 /* KSHTTPMultipartPostBody.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA830F16184492001E7F79 /* KSHTTPMultipartPostBody.h */; };
		39DA832016184492001E7F79 /* KSHTTPMultipartPostBody.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA831016184492001E7F79 /* KSHTTPMultipartPostBody.m */; };
		39DA832116184492001E7F79 /* KSHTTPMultipartPostBody.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA831016184492001E7F79 /* KSHTTPMultipartPostBody.m */; };
		39DA832216184492001E7F79 /* KSHTTPRequestSender.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA831116184492001E7F79 /* KSHTTPRequestSender.h */; };
		39DA832316184492001E7F79 /* KSHTTPRequestSender.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA831116184492001E7F79 /* KSHTTPRequestSender.h */; };
		39DA832416184492001E7F79 /* KSHTTPRequestSender.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA831216184492001E7F79 /* KSHTTPRequestSender.m */; };
		39DA832516184492001E7F79 /* KSHTTPRequestSender.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA831216184492001E7F79 /* KSHTTPRequestSender.m */; };
		39DA832616184492001E7F79 /* KSReachabilityKSCrash.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA831316184492001E7F79 /* KSReachabilityKSCrash.h */; };
		39DA832716184492001E7F79 /* KSReachabilityKSCrash.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA831316184492001E7F79 /* KSReachabilityKSCrash.h */; };
		39DA832816184492001E7F79 /* KSReachabilityKSCrash.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA831416184492001E7F79 /* KSReachabilityKSCrash.m */; };
		39DA832916184492001E7F79 /* KSReachabilityKSCrash.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA831416184492001E7F79 /* KSReachabilityKSCrash.m */; };
		39DA832A16184492001E7F79 /* KSVarArgs.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA831516184492001E7F79 /* KSVarArgs.h */; };
		39DA832B16184492001E7F79 /* KSVarArgs.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA831516184492001E7F79 /* KSVarArgs.h */; };
		39DA832C16184492001E7F79 /* NSData+GZip.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA831616184492001E7F79 /* NSData+GZip.h */; };
		39DA832D16184492001E7F79 /* NSData+GZip.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA831616184492001E7F79 /* NSData+GZip.h */; };
		39DA832E16184492001E7F79 /* NSData+GZip.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA831716184492001E7F79 /* NSData+GZip.m */; };
		39DA832F16184492001E7F79 /* NSData+GZip.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA831716184492001E7F79 /* NSData+GZip.m */; };
		39DA833016184492001E7F79 /* NSMutableData+AppendUTF8.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA831816184492001E7F79 /* NSMutableData+AppendUTF8.h */; };
		39DA833116184492001E7F79 /* NSMutableData+AppendUTF8.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA831816184492001E7F79 /* NSMutableData+AppendUTF8.h */; };
		39DA833216184492001E7F79 /* NSMutableData+AppendUTF8.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA831916184492001E7F79 /* NSMutableData+AppendUTF8.m */; };
		39DA833316184492001E7F79 /* NSMutableData+AppendUTF8.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA831916184492001E7F79 /* NSMutableData+AppendUTF8.m */; };
		39DA8359161844FF001E7F79 /* ARCSafe_MemMgmt.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8337161844FF001E7F79 /* ARCSafe_MemMgmt.h */; };
		39DA835A161844FF001E7F79 /* ARCSafe_MemMgmt.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8337161844FF001E7F79 /* ARCSafe_MemMgmt.h */; };
		39DA835B161844FF001E7F79 /* KSArchSpecific.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8338161844FF001E7F79 /* KSArchSpecific.h */; };
		39DA835C161844FF001E7F79 /* KSArchSpecific.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8338161844FF001E7F79 /* KSArchSpecific.h */; };
		39DA835D161844FF001E7F79 /* KSBacktrace_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8339161844FF001E7F79 /* KSBacktrace_Private.h */; };
		39DA835E161844FF001E7F79 /* KSBacktrace_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8339161844FF001E7F79 /* KSBacktrace_Private.h */; };
		39DA835F161844FF001E7F79 /* KSBacktrace.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA833A161844FF001E7F79 /* KSBacktrace.c */; };
		39DA8360161844FF001E7F79 /* KSBacktrace.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA833A161844FF001E7F79 /* KSBacktrace.c */; };
		39DA8361161844FF001E7F79 /* KSBacktrace.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA833B161844FF001E7F79 /* KSBacktrace.h */; };
		39DA8362161844FF001E7F79 /* KSBacktrace.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA833B161844FF001E7F79 /* KSBacktrace.h */; };
		39DA8363161844FF001E7F79 /* KSFileUtils.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA833C161844FF001E7F79 /* KSFileUtils.c */; };
		39DA8364161844FF001E7F79 /* KSFileUtils.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA833C161844FF001E7F79 /* KSFileUtils.c */; };
		39DA8365161844FF001E7F79 /* KSFileUtils.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA833D161844FF001E7F79 /* KSFileUtils.h */; };
		39DA8366161844FF001E7F79 /* KSFileUtils.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA833D161844FF001E7F79 /* KSFileUtils.h */; };
		39DA8367161844FF001E7F79 /* KSJSONCodec.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA833E161844FF001E7F79 /* KSJSONCodec.c */; };
		39DA8368161844FF001E7F79 /* KSJSONCodec.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA833E161844FF001E7F79 /* KSJSONCodec.c */; };
		39DA8369161844FF001E7F79 /* KSJSONCodec.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA833F161844FF001E7F79 /* KSJSONCodec.h */; };
		39DA836A161844FF001E7F79 /* KSJSONCodec.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA833F161844FF001E7F79 /* KSJSONCodec.h */; };
		39DA836B161844FF001E7F79 /* KSJSONCodecObjC.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8340161844FF001E7F79 /* KSJSONCodecObjC.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA836C161844FF001E7F79 /* KSJSONCodecObjC.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8340161844FF001E7F79 /* KSJSONCodecObjC.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA836D161844FF001E7F79 /* KSJSONCodecObjC.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8341161844FF001E7F79 /* KSJSONCodecObjC.m */; };
		39DA836E161844FF001E7F79 /* KSJSONCodecObjC.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8341161844FF001E7F79 /* KSJSONCodecObjC.m */; };
		39DA8371161844FF001E7F79 /* KSLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8343161844FF001E7F79 /* KSLogger.h */; };
		39DA8372161844FF001E7F79 /* KSLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8343161844FF001E7F79 /* KSLogger.h */; };
		39DA8373161844FF001E7F79 /* KSLogger.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8344161844FF001E7F79 /* KSLogger.m */; };
		39DA8374161844FF001E7F79 /* KSLogger.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8344161844FF001E7F79 /* KSLogger.m */; };
		39DA8375161844FF001E7F79 /* KSMach_Arm.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8345161844FF001E7F79 /* KSMach_Arm.c */; };
		39DA8376161844FF001E7F79 /* KSMach_Arm.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8345161844FF001E7F79 /* KSMach_Arm.c */; };
		39DA8377161844FF001E7F79 /* KSMach_x86_32.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8346161844FF001E7F79 /* KSMach_x86_32.c */; };
		39DA8378161844FF001E7F79 /* KSMach_x86_32.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8346161844FF001E7F79 /* KSMach_x86_32.c */; };
		39DA8379161844FF001E7F79 /* KSMach_x86_64.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8347161844FF001E7F79 /* KSMach_x86_64.c */; };
		39DA837A161844FF001E7F79 /* KSMach_x86_64.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8347161844FF001E7F79 /* KSMach_x86_64.c */; };
		39DA837B161844FF001E7F79 /* KSMach.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8348161844FF001E7F79 /* KSMach.c */; };
		39DA837C161844FF001E7F79 /* KSMach.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8348161844FF001E7F79 /* KSMach.c */; };
		39DA837D161844FF001E7F79 /* KSMach.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8349161844FF001E7F79 /* KSMach.h */; };
		39DA837E161844FF001E7F79 /* KSMach.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8349161844FF001E7F79 /* KSMach.h */; };
		39DA837F161844FF001E7F79 /* KSObjC.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA834A161844FF001E7F79 /* KSObjC.c */; };
		39DA8380161844FF001E7F79 /* KSObjC.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA834A161844FF001E7F79 /* KSObjC.c */; };
		39DA8381161844FF001E7F79 /* KSObjC.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA834B161844FF001E7F79 /* KSObjC.h */; };
		39DA8382161844FF001E7F79 /* KSObjC.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA834B161844FF001E7F79 /* KSObjC.h */; };
		39DA8383161844FF001E7F79 /* KSSafeCollections.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA834C161844FF001E7F79 /* KSSafeCollections.h */; };
		39DA8384161844FF001E7F79 /* KSSafeCollections.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA834C161844FF001E7F79 /* KSSafeCollections.h */; };
		39DA8385161844FF001E7F79 /* KSSafeCollections.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA834D161844FF001E7F79 /* KSSafeCollections.m */; };
		39DA8386161844FF001E7F79 /* KSSafeCollections.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA834D161844FF001E7F79 /* KSSafeCollections.m */; };
		39DA8387161844FF001E7F79 /* KSSignalInfo.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA834E161844FF001E7F79 /* KSSignalInfo.c */; };
		39DA8388161844FF001E7F79 /* KSSignalInfo.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA834E161844FF001E7F79 /* KSSignalInfo.c */; };
		39DA8389161844FF001E7F79 /* KSSignalInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA834F161844FF001E7F79 /* KSSignalInfo.h */; };
		39DA838A161844FF001E7F79 /* KSSignalInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA834F161844FF001E7F79 /* KSSignalInfo.h */; };
		39DA838B161844FF001E7F79 /* KSString.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8350161844FF001E7F79 /* KSString.c */; };
		39DA838C161844FF001E7F79 /* KSString.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8350161844FF001E7F79 /* KSString.c */; };
		39DA838D161844FF001E7F79 /* KSString.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8351161844FF001E7F79 /* KSString.h */; };
		39DA838E161844FF001E7F79 /* KSString.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8351161844FF001E7F79 /* KSString.h */; };
		39DA838F161844FF001E7F79 /* KSSysCtl.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8352161844FF001E7F79 /* KSSysCtl.c */; };
		39DA8390161844FF001E7F79 /* KSSysCtl.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8352161844FF001E7F79 /* KSSysCtl.c */; };
		39DA8391161844FF001E7F79 /* KSSysCtl.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8353161844FF001E7F79 /* KSSysCtl.h */; };
		39DA8392161844FF001E7F79 /* KSSysCtl.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8353161844FF001E7F79 /* KSSysCtl.h */; };
		39DA8393161844FF001E7F79 /* KSZombie.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8354161844FF001E7F79 /* KSZombie.h */; };
		39DA8394161844FF001E7F79 /* KSZombie.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8354161844FF001E7F79 /* KSZombie.h */; };
		39DA8395161844FF001E7F79 /* KSZombie.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8355161844FF001E7F79 /* KSZombie.m */; };
		39DA8396161844FF001E7F79 /* KSZombie.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8355161844FF001E7F79 /* KSZombie.m */; };
		39DA8399161844FF001E7F79 /* RFC3339DateTool.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8357161844FF001E7F79 /* RFC3339DateTool.h */; };
		39DA839A161844FF001E7F79 /* RFC3339DateTool.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8357161844FF001E7F79 /* RFC3339DateTool.h */; };
		39DA839B161844FF001E7F79 /* RFC3339DateTool.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8358161844FF001E7F79 /* RFC3339DateTool.m */; };
		39DA839C161844FF001E7F79 /* RFC3339DateTool.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8358161844FF001E7F79 /* RFC3339DateTool.m */; };
		39DA83B11618450A001E7F79 /* KSCrashC.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA839D1618450A001E7F79 /* KSCrashC.c */; };
		39DA83B21618450A001E7F79 /* KSCrashC.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA839D1618450A001E7F79 /* KSCrashC.c */; };
		39DA83B31618450A001E7F79 /* KSCrashC.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA839E1618450A001E7F79 /* KSCrashC.h */; };
		39DA83B41618450A001E7F79 /* KSCrashC.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA839E1618450A001E7F79 /* KSCrashC.h */; };
		39DA83B51618450A001E7F79 /* KSCrashContext.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA839F1618450A001E7F79 /* KSCrashContext.h */; };
		39DA83B61618450A001E7F79 /* KSCrashContext.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA839F1618450A001E7F79 /* KSCrashContext.h */; };
		39DA83B71618450A001E7F79 /* KSCrashReport.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA83A01618450A001E7F79 /* KSCrashReport.c */; };
		39DA83B81618450A001E7F79 /* KSCrashReport.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA83A01618450A001E7F79 /* KSCrashReport.c */; };
		39DA83B91618450A001E7F79 /* KSCrashReport.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83A11618450A001E7F79 /* KSCrashReport.h */; };
		39DA83BA1618450A001E7F79 /* KSCrashReport.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83A11618450A001E7F79 /* KSCrashReport.h */; };
		39DA83BB1618450A001E7F79 /* KSCrashReportWriter.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83A21618450A001E7F79 /* KSCrashReportWriter.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA83BC1618450A001E7F79 /* KSCrashReportWriter.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83A21618450A001E7F79 /* KSCrashReportWriter.h */; settings = {ATTRIBUTES = (Public, ); }; };
		39DA83BD1618450A001E7F79 /* KSCrashSentry_MachException.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA83A31618450A001E7F79 /* KSCrashSentry_MachException.c */; };
		39DA83BE1618450A001E7F79 /* KSCrashSentry_MachException.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA83A31618450A001E7F79 /* KSCrashSentry_MachException.c */; };
		39DA83BF1618450A001E7F79 /* KSCrashSentry_MachException.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83A41618450A001E7F79 /* KSCrashSentry_MachException.h */; };
		39DA83C01618450A001E7F79 /* KSCrashSentry_MachException.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83A41618450A001E7F79 /* KSCrashSentry_MachException.h */; };
		39DA83C11618450A001E7F79 /* KSCrashSentry_NSException.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83A51618450A001E7F79 /* KSCrashSentry_NSException.h */; };
		39DA83C21618450A001E7F79 /* KSCrashSentry_NSException.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83A51618450A001E7F79 /* KSCrashSentry_NSException.h */; };
		39DA83C31618450A001E7F79 /* KSCrashSentry_NSException.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA83A61618450A001E7F79 /* KSCrashSentry_NSException.m */; };
		39DA83C41618450A001E7F79 /* KSCrashSentry_NSException.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA83A61618450A001E7F79 /* KSCrashSentry_NSException.m */; };
		39DA83C51618450A001E7F79 /* KSCrashSentry_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83A71618450A001E7F79 /* KSCrashSentry_Private.h */; };
		39DA83C61618450A001E7F79 /* KSCrashSentry_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83A71618450A001E7F79 /* KSCrashSentry_Private.h */; };
		39DA83C71618450A001E7F79 /* KSCrashSentry_Signal.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA83A81618450A001E7F79 /* KSCrashSentry_Signal.c */; };
		39DA83C81618450A001E7F79 /* KSCrashSentry_Signal.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA83A81618450A001E7F79 /* KSCrashSentry_Signal.c */; };
		39DA83C91618450A001E7F79 /* KSCrashSentry_Signal.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83A91618450A001E7F79 /* KSCrashSentry_Signal.h */; };
		39DA83CA1618450A001E7F79 /* KSCrashSentry_Signal.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83A91618450A001E7F79 /* KSCrashSentry_Signal.h */; };
		39DA83CB1618450A001E7F79 /* KSCrashSentry.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA83AA1618450A001E7F79 /* KSCrashSentry.c */; };
		39DA83CC1618450A001E7F79 /* KSCrashSentry.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA83AA1618450A001E7F79 /* KSCrashSentry.c */; };
		39DA83CD1618450A001E7F79 /* KSCrashSentry.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83AB1618450A001E7F79 /* KSCrashSentry.h */; };
		39DA83CE1618450A001E7F79 /* KSCrashSentry.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83AB1618450A001E7F79 /* KSCrashSentry.h */; };
		39DA83CF1618450A001E7F79 /* KSCrashState.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA83AC1618450A001E7F79 /* KSCrashState.c */; };
		39DA83D01618450A001E7F79 /* KSCrashState.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA83AC1618450A001E7F79 /* KSCrashState.c */; };
		39DA83D11618450A001E7F79 /* KSCrashState.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83AD1618450A001E7F79 /* KSCrashState.h */; };
		39DA83D21618450A001E7F79 /* KSCrashState.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83AD1618450A001E7F79 /* KSCrashState.h */; };
		39DA83D31618450A001E7F79 /* KSSystemInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83AE1618450A001E7F79 /* KSSystemInfo.h */; };
		39DA83D41618450A001E7F79 /* KSSystemInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83AE1618450A001E7F79 /* KSSystemInfo.h */; };
		39DA83D51618450A001E7F79 /* KSSystemInfo.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA83AF1618450A001E7F79 /* KSSystemInfo.m */; };
		39DA83D61618450A001E7F79 /* KSSystemInfo.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA83AF1618450A001E7F79 /* KSSystemInfo.m */; };
		39DA83D71618450A001E7F79 /* KSSystemInfoC.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83B01618450A001E7F79 /* KSSystemInfoC.h */; };
		39DA83D81618450A001E7F79 /* KSSystemInfoC.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83B01618450A001E7F79 /* KSSystemInfoC.h */; };
		39DA84331618D02F001E7F79 /* Container+DeepSearch_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA84211618D02F001E7F79 /* Container+DeepSearch_Tests.m */; };
		39DA84351618D02F001E7F79 /* FileBasedTestCase.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA84231618D02F001E7F79 /* FileBasedTestCase.m */; };
		39DA84361618D02F001E7F79 /* KSCrashReportConverter_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA84241618D02F001E7F79 /* KSCrashReportConverter_Tests.m */; };
		39DA84371618D02F001E7F79 /* KSCrashReportFilter_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA84251618D02F001E7F79 /* KSCrashReportFilter_Tests.m */; };
		39DA84381618D02F001E7F79 /* KSCrashReportStore_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA84261618D02F001E7F79 /* KSCrashReportStore_Tests.m */; };
		39DA84391618D02F001E7F79 /* KSCrashState_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA84271618D02F001E7F79 /* KSCrashState_Tests.m */; };
		39DA843A1618D02F001E7F79 /* KSFileUtils_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA84281618D02F001E7F79 /* KSFileUtils_Tests.m */; };
		39DA843B1618D02F001E7F79 /* KSJSONCodec_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA84291618D02F001E7F79 /* KSJSONCodec_Tests.m */; };
		39DA843C1618D02F001E7F79 /* KSMach_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA842A1618D02F001E7F79 /* KSMach_Tests.m */; };
		39DA843E1618D02F001E7F79 /* KSObjC_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA842C1618D02F001E7F79 /* KSObjC_Tests.m */; };
		39DA843F1618D02F001E7F79 /* KSSignalInfo_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA842D1618D02F001E7F79 /* KSSignalInfo_Tests.m */; };
		39DA84401618D02F001E7F79 /* NSData+Gzip_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA842E1618D02F001E7F79 /* NSData+Gzip_Tests.m */; };
		39DA84411618D02F001E7F79 /* NSMutableData+AppendUTF8_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA842F1618D02F001E7F79 /* NSMutableData+AppendUTF8_Tests.m */; };
		39DA84421618D02F001E7F79 /* RFC3339DateTool_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA84301618D02F001E7F79 /* RFC3339DateTool_Tests.m */; };
		39DA84441618D02F001E7F79 /* SenTestCase+KSCrash.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA84321618D02F001E7F79 /* SenTestCase+KSCrash.m */; };
		39DA84461618D201001E7F79 /* MessageUI.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 39DA84451618D201001E7F79 /* MessageUI.framework */; };
		39DA84481618D20E001E7F79 /* libz.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 39DA84471618D20E001E7F79 /* libz.dylib */; };
		39DA844C1618D238001E7F79 /* SystemConfiguration.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 39DA844B1618D238001E7F79 /* SystemConfiguration.framework */; };
		39DA84F6161978D7001E7F79 /* NSDictionary+Merge.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA84F4161978D7001E7F79 /* NSDictionary+Merge.h */; };
		39DA84F7161978D7001E7F79 /* NSDictionary+Merge.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA84F5161978D7001E7F79 /* NSDictionary+Merge.m */; };
		39DA84F9161978DE001E7F79 /* NSDictionary+Merge.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA84F5161978D7001E7F79 /* NSDictionary+Merge.m */; };
		39DA84FD16198753001E7F79 /* NSDictionary+Merge_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA84FB16198753001E7F79 /* NSDictionary+Merge_Tests.m */; };
		CB0AA0F4167EC43E006EAB99 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = CB0AA0F2167EC43E006EAB99 /* InfoPlist.strings */; };
		CB0AA0FD167EC460006EAB99 /* KSCrashC.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA839D1618450A001E7F79 /* KSCrashC.c */; };
		CB0AA0FE167EC460006EAB99 /* KSCrashC.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA839E1618450A001E7F79 /* KSCrashC.h */; };
		CB0AA0FF167EC460006EAB99 /* KSCrashContext.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA839F1618450A001E7F79 /* KSCrashContext.h */; };
		CB0AA100167EC460006EAB99 /* KSCrashReport.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA83A01618450A001E7F79 /* KSCrashReport.c */; };
		CB0AA101167EC460006EAB99 /* KSCrashReport.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83A11618450A001E7F79 /* KSCrashReport.h */; };
		CB0AA102167EC460006EAB99 /* KSCrashReportFields.h in Headers */ = {isa = PBXBuildFile; fileRef = 397A7C86162266480096E287 /* KSCrashReportFields.h */; };
		CB0AA103167EC460006EAB99 /* KSCrashReportWriter.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83A21618450A001E7F79 /* KSCrashReportWriter.h */; settings = {ATTRIBUTES = (Public, ); }; };
		CB0AA104167EC460006EAB99 /* KSCrashState.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA83AC1618450A001E7F79 /* KSCrashState.c */; };
		CB0AA105167EC460006EAB99 /* KSCrashState.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83AD1618450A001E7F79 /* KSCrashState.h */; };
		CB0AA106167EC460006EAB99 /* KSSystemInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83AE1618450A001E7F79 /* KSSystemInfo.h */; };
		CB0AA107167EC460006EAB99 /* KSSystemInfo.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA83AF1618450A001E7F79 /* KSSystemInfo.m */; };
		CB0AA108167EC460006EAB99 /* KSSystemInfoC.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83B01618450A001E7F79 /* KSSystemInfoC.h */; };
		CB0AA109167EC465006EAB99 /* KSCrashSentry.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA83AA1618450A001E7F79 /* KSCrashSentry.c */; };
		CB0AA10A167EC465006EAB99 /* KSCrashSentry.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83AB1618450A001E7F79 /* KSCrashSentry.h */; };
		CB0AA10B167EC465006EAB99 /* KSCrashSentry_Deadlock.h in Headers */ = {isa = PBXBuildFile; fileRef = 39D329DA16765AD500D989DC /* KSCrashSentry_Deadlock.h */; };
		CB0AA10C167EC465006EAB99 /* KSCrashSentry_Deadlock.m in Sources */ = {isa = PBXBuildFile; fileRef = 39D329DB16765AD500D989DC /* KSCrashSentry_Deadlock.m */; };
		CB0AA10D167EC465006EAB99 /* KSCrashSentry_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83A71618450A001E7F79 /* KSCrashSentry_Private.h */; };
		CB0AA10E167EC465006EAB99 /* KSCrashSentry_MachException.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA83A31618450A001E7F79 /* KSCrashSentry_MachException.c */; };
		CB0AA10F167EC465006EAB99 /* KSCrashSentry_MachException.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83A41618450A001E7F79 /* KSCrashSentry_MachException.h */; };
		CB0AA110167EC465006EAB99 /* KSCrashSentry_NSException.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83A51618450A001E7F79 /* KSCrashSentry_NSException.h */; };
		CB0AA111167EC465006EAB99 /* KSCrashSentry_NSException.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA83A61618450A001E7F79 /* KSCrashSentry_NSException.m */; };
		CB0AA112167EC465006EAB99 /* KSCrashSentry_Signal.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA83A81618450A001E7F79 /* KSCrashSentry_Signal.c */; };
		CB0AA113167EC465006EAB99 /* KSCrashSentry_Signal.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA83A91618450A001E7F79 /* KSCrashSentry_Signal.h */; };
		CB0AA114167EC470006EAB99 /* ARCSafe_MemMgmt.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8337161844FF001E7F79 /* ARCSafe_MemMgmt.h */; };
		CB0AA115167EC470006EAB99 /* KSArchSpecific.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8338161844FF001E7F79 /* KSArchSpecific.h */; };
		CB0AA116167EC470006EAB99 /* KSBacktrace_Private.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8339161844FF001E7F79 /* KSBacktrace_Private.h */; };
		CB0AA117167EC470006EAB99 /* KSBacktrace.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA833A161844FF001E7F79 /* KSBacktrace.c */; };
		CB0AA118167EC470006EAB99 /* KSBacktrace.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA833B161844FF001E7F79 /* KSBacktrace.h */; };
		CB0AA119167EC470006EAB99 /* KSFileUtils.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA833C161844FF001E7F79 /* KSFileUtils.c */; };
		CB0AA11A167EC470006EAB99 /* KSFileUtils.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA833D161844FF001E7F79 /* KSFileUtils.h */; };
		CB0AA11B167EC470006EAB99 /* KSJSONCodec.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA833E161844FF001E7F79 /* KSJSONCodec.c */; };
		CB0AA11C167EC470006EAB99 /* KSJSONCodec.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA833F161844FF001E7F79 /* KSJSONCodec.h */; };
		CB0AA11D167EC470006EAB99 /* KSJSONCodecObjC.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8340161844FF001E7F79 /* KSJSONCodecObjC.h */; settings = {ATTRIBUTES = (Public, ); }; };
		CB0AA11E167EC470006EAB99 /* KSJSONCodecObjC.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8341161844FF001E7F79 /* KSJSONCodecObjC.m */; };
		CB0AA11F167EC470006EAB99 /* KSLogger.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8343161844FF001E7F79 /* KSLogger.h */; };
		CB0AA120167EC470006EAB99 /* KSLogger.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8344161844FF001E7F79 /* KSLogger.m */; };
		CB0AA121167EC470006EAB99 /* KSMach_Arm.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8345161844FF001E7F79 /* KSMach_Arm.c */; };
		CB0AA122167EC470006EAB99 /* KSMach_x86_32.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8346161844FF001E7F79 /* KSMach_x86_32.c */; };
		CB0AA123167EC470006EAB99 /* KSMach_x86_64.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8347161844FF001E7F79 /* KSMach_x86_64.c */; };
		CB0AA124167EC470006EAB99 /* KSMach.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8348161844FF001E7F79 /* KSMach.c */; };
		CB0AA125167EC470006EAB99 /* KSMach.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8349161844FF001E7F79 /* KSMach.h */; };
		CB0AA126167EC470006EAB99 /* KSObjC.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA834A161844FF001E7F79 /* KSObjC.c */; };
		CB0AA127167EC470006EAB99 /* KSObjC.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA834B161844FF001E7F79 /* KSObjC.h */; };
		CB0AA128167EC470006EAB99 /* KSSafeCollections.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA834C161844FF001E7F79 /* KSSafeCollections.h */; };
		CB0AA129167EC470006EAB99 /* KSSafeCollections.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA834D161844FF001E7F79 /* KSSafeCollections.m */; };
		CB0AA12A167EC470006EAB99 /* KSSignalInfo.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA834E161844FF001E7F79 /* KSSignalInfo.c */; };
		CB0AA12B167EC470006EAB99 /* KSSignalInfo.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA834F161844FF001E7F79 /* KSSignalInfo.h */; };
		CB0AA12C167EC470006EAB99 /* KSString.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8350161844FF001E7F79 /* KSString.c */; };
		CB0AA12D167EC470006EAB99 /* KSString.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8351161844FF001E7F79 /* KSString.h */; };
		CB0AA12E167EC470006EAB99 /* KSSysCtl.c in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8352161844FF001E7F79 /* KSSysCtl.c */; };
		CB0AA12F167EC470006EAB99 /* KSSysCtl.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8353161844FF001E7F79 /* KSSysCtl.h */; };
		CB0AA130167EC470006EAB99 /* KSZombie.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8354161844FF001E7F79 /* KSZombie.h */; };
		CB0AA131167EC470006EAB99 /* KSZombie.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8355161844FF001E7F79 /* KSZombie.m */; };
		CB0AA133167EC470006EAB99 /* RFC3339DateTool.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA8357161844FF001E7F79 /* RFC3339DateTool.h */; };
		CB0AA134167EC470006EAB99 /* RFC3339DateTool.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA8358161844FF001E7F79 /* RFC3339DateTool.m */; };
		CB0AA135167EC477006EAB99 /* KSCrashDoctor.h in Headers */ = {isa = PBXBuildFile; fileRef = 394DCC6F164F43C2008A4C50 /* KSCrashDoctor.h */; };
		CB0AA136167EC477006EAB99 /* KSCrashDoctor.m in Sources */ = {isa = PBXBuildFile; fileRef = 394DCC70164F43C2008A4C50 /* KSCrashDoctor.m */; };
		CB0AA137167EC477006EAB99 /* KSCrashReportStore.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82BC16184456001E7F79 /* KSCrashReportStore.h */; };
		CB0AA138167EC477006EAB99 /* KSCrashReportStore.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82BD16184456001E7F79 /* KSCrashReportStore.m */; };
		CB0AA139167EC480006EAB99 /* KSCrashReportFilter.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82CD16184487001E7F79 /* KSCrashReportFilter.h */; settings = {ATTRIBUTES = (Public, ); }; };
		CB0AA13A167EC480006EAB99 /* KSCrashReportFilter.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82CE16184487001E7F79 /* KSCrashReportFilter.m */; };
		CB0AA13D167EC480006EAB99 /* KSCrashReportFilterAlert.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82CF16184487001E7F79 /* KSCrashReportFilterAlert.h */; settings = {ATTRIBUTES = (Public, ); }; };
		CB0AA13E167EC480006EAB99 /* KSCrashReportFilterAlert.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82D016184487001E7F79 /* KSCrashReportFilterAlert.m */; };
		CB0AA13F167EC480006EAB99 /* KSCrashReportFilterAppleFmt.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82D116184487001E7F79 /* KSCrashReportFilterAppleFmt.h */; settings = {ATTRIBUTES = (Public, ); }; };
		CB0AA140167EC480006EAB99 /* KSCrashReportFilterAppleFmt.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82D216184487001E7F79 /* KSCrashReportFilterAppleFmt.m */; };
		CB0AA141167EC480006EAB99 /* KSCrashReportFilterBasic.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82D316184487001E7F79 /* KSCrashReportFilterBasic.h */; settings = {ATTRIBUTES = (Public, ); }; };
		CB0AA142167EC480006EAB99 /* KSCrashReportFilterBasic.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82D416184487001E7F79 /* KSCrashReportFilterBasic.m */; };
		CB0AA143167EC485006EAB99 /* KSCrashReportFilterJSON.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82D716184487001E7F79 /* KSCrashReportFilterJSON.h */; settings = {ATTRIBUTES = (Public, ); }; };
		CB0AA144167EC485006EAB99 /* KSCrashReportFilterJSON.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82D816184487001E7F79 /* KSCrashReportFilterJSON.m */; };
		CB0AA145167EC485006EAB99 /* KSCrashReportSinkConsole.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82D916184487001E7F79 /* KSCrashReportSinkConsole.h */; settings = {ATTRIBUTES = (Public, ); }; };
		CB0AA146167EC485006EAB99 /* KSCrashReportSinkConsole.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82DA16184487001E7F79 /* KSCrashReportSinkConsole.m */; };
		CB0AA149167EC4AD006EAB99 /* Container+DeepSearch.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA830D16184492001E7F79 /* Container+DeepSearch.h */; };
		CB0AA14A167EC4AD006EAB99 /* Container+DeepSearch.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA830E16184492001E7F79 /* Container+DeepSearch.m */; };
		CB0AA14B167EC4AD006EAB99 /* KSHTTPMultipartPostBody.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA830F16184492001E7F79 /* KSHTTPMultipartPostBody.h */; };
		CB0AA14C167EC4AD006EAB99 /* KSHTTPMultipartPostBody.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA831016184492001E7F79 /* KSHTTPMultipartPostBody.m */; };
		CB0AA14D167EC4AD006EAB99 /* KSHTTPRequestSender.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA831116184492001E7F79 /* KSHTTPRequestSender.h */; };
		CB0AA14E167EC4AD006EAB99 /* KSHTTPRequestSender.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA831216184492001E7F79 /* KSHTTPRequestSender.m */; };
		CB0AA14F167EC4AD006EAB99 /* KSReachabilityKSCrash.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA831316184492001E7F79 /* KSReachabilityKSCrash.h */; };
		CB0AA150167EC4AD006EAB99 /* KSReachabilityKSCrash.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA831416184492001E7F79 /* KSReachabilityKSCrash.m */; };
		CB0AA151167EC4AD006EAB99 /* KSVarArgs.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA831516184492001E7F79 /* KSVarArgs.h */; };
		CB0AA152167EC4B1006EAB99 /* NSDictionary+Merge.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA84F4161978D7001E7F79 /* NSDictionary+Merge.h */; };
		CB0AA153167EC4B1006EAB99 /* NSDictionary+Merge.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA84F5161978D7001E7F79 /* NSDictionary+Merge.m */; };
		CB0AA154167EC4B1006EAB99 /* NSMutableData+AppendUTF8.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA831816184492001E7F79 /* NSMutableData+AppendUTF8.h */; };
		CB0AA155167EC4B1006EAB99 /* NSMutableData+AppendUTF8.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA831916184492001E7F79 /* NSMutableData+AppendUTF8.m */; };
		CB0AA156167EC4B5006EAB99 /* KSCrash.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82B916184456001E7F79 /* KSCrash.h */; settings = {ATTRIBUTES = (Public, ); }; };
		CB0AA157167EC4B5006EAB99 /* KSCrash.m in Sources */ = {isa = PBXBuildFile; fileRef = 39DA82BA16184456001E7F79 /* KSCrash.m */; };
		CB0AA158167EC4B5006EAB99 /* KSCrashAdvanced.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA82BB16184456001E7F79 /* KSCrashAdvanced.h */; settings = {ATTRIBUTES = (Public, ); }; };
		CB117DBF16B4402B00FA3F2A /* KSZombie_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = CB117DBE16B4402B00FA3F2A /* KSZombie_Tests.m */; };
		CB117DC216B4465500FA3F2A /* KSSystemInfo_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = CB117DC116B4465500FA3F2A /* KSSystemInfo_Tests.m */; };
		CB117DC516B4488400FA3F2A /* KSSysCtl_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = CB117DC416B4488400FA3F2A /* KSSysCtl_Tests.m */; };
		CB117DC816B44FC600FA3F2A /* KSString_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = CB117DC716B44FC600FA3F2A /* KSString_Tests.m */; };
		CB117DCB16B458FC00FA3F2A /* KSSafeCollections_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = CB117DCA16B458FC00FA3F2A /* KSSafeCollections_Tests.m */; };
		CB117DCF16B4990B00FA3F2A /* KSLogger_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = CB117DCE16B4990B00FA3F2A /* KSLogger_Tests.m */; };
		CB117DD516B4C4C500FA3F2A /* KSCrashSentry_Deadlock_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = CB117DD416B4C4C500FA3F2A /* KSCrashSentry_Deadlock_Tests.m */; };
		CB117DD816B4C62000FA3F2A /* KSCrashSentry_NSException_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = CB117DD716B4C62000FA3F2A /* KSCrashSentry_NSException_Tests.m */; };
		CB117DDB16B4C75E00FA3F2A /* KSCrashSentry_Signal_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = CB117DDA16B4C75E00FA3F2A /* KSCrashSentry_Signal_Tests.m */; };
		CB1B376F16D74F3C00FFFCEA /* KSCString.h in Headers */ = {isa = PBXBuildFile; fileRef = CB1B376D16D74F3C00FFFCEA /* KSCString.h */; };
		CB1B377016D74F3C00FFFCEA /* KSCString.h in Headers */ = {isa = PBXBuildFile; fileRef = CB1B376D16D74F3C00FFFCEA /* KSCString.h */; };
		CB1B377116D74F3C00FFFCEA /* KSCString.h in Headers */ = {isa = PBXBuildFile; fileRef = CB1B376D16D74F3C00FFFCEA /* KSCString.h */; };
		CB1B377216D74F3C00FFFCEA /* KSCString.m in Sources */ = {isa = PBXBuildFile; fileRef = CB1B376E16D74F3C00FFFCEA /* KSCString.m */; };
		CB1B377316D74F3C00FFFCEA /* KSCString.m in Sources */ = {isa = PBXBuildFile; fileRef = CB1B376E16D74F3C00FFFCEA /* KSCString.m */; };
		CB1B377416D74F3C00FFFCEA /* KSCString.m in Sources */ = {isa = PBXBuildFile; fileRef = CB1B376E16D74F3C00FFFCEA /* KSCString.m */; };
		CB1B378616D820AE00FFFCEA /* KSSingleton.h in Headers */ = {isa = PBXBuildFile; fileRef = CB1B378516D820AE00FFFCEA /* KSSingleton.h */; };
		CB1B378716D820AE00FFFCEA /* KSSingleton.h in Headers */ = {isa = PBXBuildFile; fileRef = CB1B378516D820AE00FFFCEA /* KSSingleton.h */; };
		CB1B378816D820AE00FFFCEA /* KSSingleton.h in Headers */ = {isa = PBXBuildFile; fileRef = CB1B378516D820AE00FFFCEA /* KSSingleton.h */; };
		CB5A5B3B16C6650E00DC1D2D /* NSError+SimpleConstructor.h in Headers */ = {isa = PBXBuildFile; fileRef = CB5A5B3916C6650E00DC1D2D /* NSError+SimpleConstructor.h */; };
		CB5A5B3C16C6650E00DC1D2D /* NSError+SimpleConstructor.h in Headers */ = {isa = PBXBuildFile; fileRef = CB5A5B3916C6650E00DC1D2D /* NSError+SimpleConstructor.h */; };
		CB5A5B3D16C6650E00DC1D2D /* NSError+SimpleConstructor.h in Headers */ = {isa = PBXBuildFile; fileRef = CB5A5B3916C6650E00DC1D2D /* NSError+SimpleConstructor.h */; };
		CB5A5B3E16C6650E00DC1D2D /* NSError+SimpleConstructor.m in Sources */ = {isa = PBXBuildFile; fileRef = CB5A5B3A16C6650E00DC1D2D /* NSError+SimpleConstructor.m */; };
		CB5A5B3F16C6650E00DC1D2D /* NSError+SimpleConstructor.m in Sources */ = {isa = PBXBuildFile; fileRef = CB5A5B3A16C6650E00DC1D2D /* NSError+SimpleConstructor.m */; };
		CB5A5B4016C6650E00DC1D2D /* NSError+SimpleConstructor.m in Sources */ = {isa = PBXBuildFile; fileRef = CB5A5B3A16C6650E00DC1D2D /* NSError+SimpleConstructor.m */; };
		CB5A5B4316C718C500DC1D2D /* KSCrashCallCompletion.h in Headers */ = {isa = PBXBuildFile; fileRef = CB5A5B4116C718C400DC1D2D /* KSCrashCallCompletion.h */; };
		CB5A5B4416C718C500DC1D2D /* KSCrashCallCompletion.h in Headers */ = {isa = PBXBuildFile; fileRef = CB5A5B4116C718C400DC1D2D /* KSCrashCallCompletion.h */; };
		CB5A5B4516C718C500DC1D2D /* KSCrashCallCompletion.h in Headers */ = {isa = PBXBuildFile; fileRef = CB5A5B4116C718C400DC1D2D /* KSCrashCallCompletion.h */; };
		CB5A5B4616C718C500DC1D2D /* KSCrashCallCompletion.m in Sources */ = {isa = PBXBuildFile; fileRef = CB5A5B4216C718C400DC1D2D /* KSCrashCallCompletion.m */; };
		CB5A5B4716C718C500DC1D2D /* KSCrashCallCompletion.m in Sources */ = {isa = PBXBuildFile; fileRef = CB5A5B4216C718C400DC1D2D /* KSCrashCallCompletion.m */; };
		CB5A5B4816C718C500DC1D2D /* KSCrashCallCompletion.m in Sources */ = {isa = PBXBuildFile; fileRef = CB5A5B4216C718C400DC1D2D /* KSCrashCallCompletion.m */; };
		CB5A5B4916C7589400DC1D2D /* NSDictionary+Merge.h in Headers */ = {isa = PBXBuildFile; fileRef = 39DA84F4161978D7001E7F79 /* NSDictionary+Merge.h */; };
		CB775560169F402700EA90A5 /* libKSCrashLib.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 39DA35C616184338009EB332 /* libKSCrashLib.a */; };
		CB78E8B5169C934100C39B02 /* KSObjCApple.h in Headers */ = {isa = PBXBuildFile; fileRef = CB78E8B4169C934100C39B02 /* KSObjCApple.h */; };
		CB78E8B6169C934100C39B02 /* KSObjCApple.h in Headers */ = {isa = PBXBuildFile; fileRef = CB78E8B4169C934100C39B02 /* KSObjCApple.h */; };
		CB78E8B7169C934100C39B02 /* KSObjCApple.h in Headers */ = {isa = PBXBuildFile; fileRef = CB78E8B4169C934100C39B02 /* KSObjCApple.h */; };
		CB78E8BA169C94DB00C39B02 /* KSMachApple.h in Headers */ = {isa = PBXBuildFile; fileRef = CB78E8B9169C94DA00C39B02 /* KSMachApple.h */; };
		CB78E8BB169C94DB00C39B02 /* KSMachApple.h in Headers */ = {isa = PBXBuildFile; fileRef = CB78E8B9169C94DA00C39B02 /* KSMachApple.h */; };
		CB78E8BC169C94DB00C39B02 /* KSMachApple.h in Headers */ = {isa = PBXBuildFile; fileRef = CB78E8B9169C94DA00C39B02 /* KSMachApple.h */; };
		CB7C753E16CD5DA200227870 /* KSCrashInstallation+Private.h in Headers */ = {isa = PBXBuildFile; fileRef = CB7C753D16CD5DA200227870 /* KSCrashInstallation+Private.h */; };
		CB7C753F16CD5DA200227870 /* KSCrashInstallation+Private.h in Headers */ = {isa = PBXBuildFile; fileRef = CB7C753D16CD5DA200227870 /* KSCrashInstallation+Private.h */; };
		CB7C754016CD5DA200227870 /* KSCrashInstallation+Private.h in Headers */ = {isa = PBXBuildFile; fileRef = CB7C753D16CD5DA200227870 /* KSCrashInstallation+Private.h */; };
		CB7C754316CD5F5F00227870 /* KSCrashInstallation.h in Headers */ = {isa = PBXBuildFile; fileRef = CB7C754116CD5F5E00227870 /* KSCrashInstallation.h */; settings = {ATTRIBUTES = (Public, ); }; };
		CB7C754416CD5F5F00227870 /* KSCrashInstallation.h in Headers */ = {isa = PBXBuildFile; fileRef = CB7C754116CD5F5E00227870 /* KSCrashInstallation.h */; settings = {ATTRIBUTES = (Public, ); }; };
		CB7C754516CD5F5F00227870 /* KSCrashInstallation.h in Headers */ = {isa = PBXBuildFile; fileRef = CB7C754116CD5F5E00227870 /* KSCrashInstallation.h */; settings = {ATTRIBUTES = (Public, ); }; };
		CB7C754616CD5F5F00227870 /* KSCrashInstallation.m in Sources */ = {isa = PBXBuildFile; fileRef = CB7C754216CD5F5F00227870 /* KSCrashInstallation.m */; };
		CB7C754716CD5F5F00227870 /* KSCrashInstallation.m in Sources */ = {isa = PBXBuildFile; fileRef = CB7C754216CD5F5F00227870 /* KSCrashInstallation.m */; };
		CB7C754816CD5F5F00227870 /* KSCrashInstallation.m in Sources */ = {isa = PBXBuildFile; fileRef = CB7C754216CD5F5F00227870 /* KSCrashInstallation.m */; };
		CBC74E9E169FD6FC001A688D /* GCDAProfiling.c in Sources */ = {isa = PBXBuildFile; fileRef = CBC74E9D169FD6FC001A688D /* GCDAProfiling.c */; };
		CBCED885175E565B00BF56F0 /* KSCrashSentry_User.h in Headers */ = {isa = PBXBuildFile; fileRef = CBCED884175E565B00BF56F0 /* KSCrashSentry_User.h */; };
		CBCED886175E565B00BF56F0 /* KSCrashSentry_User.h in Headers */ = {isa = PBXBuildFile; fileRef = CBCED884175E565B00BF56F0 /* KSCrashSentry_User.h */; };
		CBCED887175E565B00BF56F0 /* KSCrashSentry_User.h in Headers */ = {isa = PBXBuildFile; fileRef = CBCED884175E565B00BF56F0 /* KSCrashSentry_User.h */; };
		CBCED88D175E567F00BF56F0 /* KSCrashSentry_User.c in Sources */ = {isa = PBXBuildFile; fileRef = CBCED88C175E567F00BF56F0 /* KSCrashSentry_User.c */; };
		CBCED88E175E567F00BF56F0 /* KSCrashSentry_User.c in Sources */ = {isa = PBXBuildFile; fileRef = CBCED88C175E567F00BF56F0 /* KSCrashSentry_User.c */; };
		CBCED88F175E567F00BF56F0 /* KSCrashSentry_User.c in Sources */ = {isa = PBXBuildFile; fileRef = CBCED88C175E567F00BF56F0 /* KSCrashSentry_User.c */; };
		CBD9A64416E3E875007142EE /* KSCrashInstallationEmail_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = CBD9A64316E3E875007142EE /* KSCrashInstallationEmail_Tests.m */; };
		CBD9A64716E3EC02007142EE /* KSCrashInstallationQuincyHockey_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = CBD9A64616E3EC02007142EE /* KSCrashInstallationQuincyHockey_Tests.m */; };
		CBD9A64A16E3F424007142EE /* KSCrashInstallationStandard_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = CBD9A64916E3F424007142EE /* KSCrashInstallationStandard_Tests.m */; };
		CBE3D8E616C7A61400C4105E /* KSCrashInstallationQuincyHockey.h in Headers */ = {isa = PBXBuildFile; fileRef = CBE3D8E416C7A61300C4105E /* KSCrashInstallationQuincyHockey.h */; settings = {ATTRIBUTES = (Public, ); }; };
		CBE3D8E716C7A61400C4105E /* KSCrashInstallationQuincyHockey.h in Headers */ = {isa = PBXBuildFile; fileRef = CBE3D8E416C7A61300C4105E /* KSCrashInstallationQuincyHockey.h */; settings = {ATTRIBUTES = (Public, ); }; };
		CBE3D8E816C7A61400C4105E /* KSCrashInstallationQuincyHockey.m in Sources */ = {isa = PBXBuildFile; fileRef = CBE3D8E516C7A61400C4105E /* KSCrashInstallationQuincyHockey.m */; };
		CBE3D8E916C7A61400C4105E /* KSCrashInstallationQuincyHockey.m in Sources */ = {isa = PBXBuildFile; fileRef = CBE3D8E516C7A61400C4105E /* KSCrashInstallationQuincyHockey.m */; };
		CBF2D93A16DE86B00003AD7E /* KSCrashInstallationEmail.h in Headers */ = {isa = PBXBuildFile; fileRef = CBF2D93816DE86B00003AD7E /* KSCrashInstallationEmail.h */; settings = {ATTRIBUTES = (Public, ); }; };
		CBF2D93B16DE86B00003AD7E /* KSCrashInstallationEmail.h in Headers */ = {isa = PBXBuildFile; fileRef = CBF2D93816DE86B00003AD7E /* KSCrashInstallationEmail.h */; settings = {ATTRIBUTES = (Public, ); }; };
		CBF2D93C16DE86B00003AD7E /* KSCrashInstallationEmail.m in Sources */ = {isa = PBXBuildFile; fileRef = CBF2D93916DE86B00003AD7E /* KSCrashInstallationEmail.m */; };
		CBF2D93D16DE86B00003AD7E /* KSCrashInstallationEmail.m in Sources */ = {isa = PBXBuildFile; fileRef = CBF2D93916DE86B00003AD7E /* KSCrashInstallationEmail.m */; };
		CBF2D94016DEDCC10003AD7E /* KSCrashInstallationStandard.h in Headers */ = {isa = PBXBuildFile; fileRef = CBF2D93E16DEDCC10003AD7E /* KSCrashInstallationStandard.h */; settings = {ATTRIBUTES = (Public, ); }; };
		CBF2D94116DEDCC10003AD7E /* KSCrashInstallationStandard.h in Headers */ = {isa = PBXBuildFile; fileRef = CBF2D93E16DEDCC10003AD7E /* KSCrashInstallationStandard.h */; settings = {ATTRIBUTES = (Public, ); }; };
		CBF2D94216DEDCC10003AD7E /* KSCrashInstallationStandard.m in Sources */ = {isa = PBXBuildFile; fileRef = CBF2D93F16DEDCC10003AD7E /* KSCrashInstallationStandard.m */; };
		CBF2D94316DEDCC10003AD7E /* KSCrashInstallationStandard.m in Sources */ = {isa = PBXBuildFile; fileRef = CBF2D93F16DEDCC10003AD7E /* KSCrashInstallationStandard.m */; };
		CBF2D94616E256270003AD7E /* KSCString_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = CBF2D94516E256270003AD7E /* KSCString_Tests.m */; };
		CBF2D94916E25E520003AD7E /* NSError+SimpleConstructor_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = CBF2D94816E25E520003AD7E /* NSError+SimpleConstructor_Tests.m */; };
		CBF2D94C16E260AB0003AD7E /* KSCrashSentry_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = CBF2D94B16E260AB0003AD7E /* KSCrashSentry_Tests.m */; };
		CBF2D94F16E27AD90003AD7E /* KSCrashReportFilterJSON_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = CBF2D94E16E27AD90003AD7E /* KSCrashReportFilterJSON_Tests.m */; };
		CBF2D95216E27B300003AD7E /* KSCrashReportFilterGZip_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = CBF2D95116E27B300003AD7E /* KSCrashReportFilterGZip_Tests.m */; };
		CBF2D95516E27BF60003AD7E /* KSCrashReportFilterAlert_Tests.m in Sources */ = {isa = PBXBuildFile; fileRef = CBF2D95416E27BF60003AD7E /* KSCrashReportFilterAlert_Tests.m */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		39DA35DA16184338009EB332 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 39DA35941618430C009EB332 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 39DA35C516184338009EB332;
			remoteInfo = KSCrashLib;
		};
		39DA844D1618D2F5001E7F79 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 39DA35941618430C009EB332 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 39DA35B31618432E009EB332;
			remoteInfo = KSCrash;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXCopyFilesBuildPhase section */
		39DA35C416184338009EB332 /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = "include/${PRODUCT_NAME}";
			dstSubfolderSpec = 16;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		2122BBCD16F185120056D11C /* KSCrashReportSinkTakanashi.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = KSCrashReportSinkTakanashi.h; sourceTree = "<group>"; };
		2122BBCE16F185120056D11C /* KSCrashReportSinkTakanashi.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashReportSinkTakanashi.m; sourceTree = "<group>"; };
		2193ACC216F19D690016EA5F /* KSCrashInstallationTakanashi.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = KSCrashInstallationTakanashi.h; sourceTree = "<group>"; };
		2193ACC316F19D690016EA5F /* KSCrashInstallationTakanashi.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashInstallationTakanashi.m; sourceTree = "<group>"; };
		21D6639D16F1AD1400654F31 /* KSCrashInstallationTakanashi_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashInstallationTakanashi_Tests.m; sourceTree = "<group>"; };
		394DCC6F164F43C2008A4C50 /* KSCrashDoctor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = KSCrashDoctor.h; sourceTree = "<group>"; };
		394DCC70164F43C2008A4C50 /* KSCrashDoctor.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashDoctor.m; sourceTree = "<group>"; };
		397A7C86162266480096E287 /* KSCrashReportFields.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrashReportFields.h; sourceTree = "<group>"; };
		39D329DA16765AD500D989DC /* KSCrashSentry_Deadlock.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrashSentry_Deadlock.h; sourceTree = "<group>"; };
		39D329DB16765AD500D989DC /* KSCrashSentry_Deadlock.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashSentry_Deadlock.m; sourceTree = "<group>"; };
		39DA35A01618430C009EB332 /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = System/Library/Frameworks/Foundation.framework; sourceTree = SDKROOT; };
		39DA35B41618432E009EB332 /* KSCrash.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = KSCrash.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		39DA35B71618432E009EB332 /* KSCrash-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "KSCrash-Info.plist"; sourceTree = "<group>"; };
		39DA35B91618432E009EB332 /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		39DA35BB1618432E009EB332 /* KSCrash-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "KSCrash-Prefix.pch"; sourceTree = "<group>"; };
		39DA35C616184338009EB332 /* libKSCrashLib.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = libKSCrashLib.a; sourceTree = BUILT_PRODUCTS_DIR; };
		39DA35CA16184338009EB332 /* KSCrashLib-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "KSCrashLib-Prefix.pch"; sourceTree = "<group>"; };
		39DA35D416184338009EB332 /* KSCrashTests.octest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = KSCrashTests.octest; sourceTree = BUILT_PRODUCTS_DIR; };
		39DA35D516184338009EB332 /* SenTestingKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = SenTestingKit.framework; path = Library/Frameworks/SenTestingKit.framework; sourceTree = DEVELOPER_DIR; };
		39DA35D716184338009EB332 /* UIKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = UIKit.framework; path = Library/Frameworks/UIKit.framework; sourceTree = DEVELOPER_DIR; };
		39DA35DF16184338009EB332 /* KSCrashTests-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "KSCrashTests-Info.plist"; sourceTree = "<group>"; };
		39DA35E116184338009EB332 /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		39DA82B916184456001E7F79 /* KSCrash.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrash.h; sourceTree = "<group>"; };
		39DA82BA16184456001E7F79 /* KSCrash.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrash.m; sourceTree = "<group>"; };
		39DA82BB16184456001E7F79 /* KSCrashAdvanced.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrashAdvanced.h; sourceTree = "<group>"; };
		39DA82BC16184456001E7F79 /* KSCrashReportStore.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrashReportStore.h; sourceTree = "<group>"; };
		39DA82BD16184456001E7F79 /* KSCrashReportStore.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashReportStore.m; sourceTree = "<group>"; };
		39DA82CB16184487001E7F79 /* KSCrashReportFilterSets.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrashReportFilterSets.h; sourceTree = "<group>"; };
		39DA82CC16184487001E7F79 /* KSCrashReportFilterSets.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashReportFilterSets.m; sourceTree = "<group>"; };
		39DA82CD16184487001E7F79 /* KSCrashReportFilter.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrashReportFilter.h; sourceTree = "<group>"; };
		39DA82CE16184487001E7F79 /* KSCrashReportFilter.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashReportFilter.m; sourceTree = "<group>"; };
		39DA82CF16184487001E7F79 /* KSCrashReportFilterAlert.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrashReportFilterAlert.h; sourceTree = "<group>"; };
		39DA82D016184487001E7F79 /* KSCrashReportFilterAlert.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashReportFilterAlert.m; sourceTree = "<group>"; };
		39DA82D116184487001E7F79 /* KSCrashReportFilterAppleFmt.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrashReportFilterAppleFmt.h; sourceTree = "<group>"; };
		39DA82D216184487001E7F79 /* KSCrashReportFilterAppleFmt.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashReportFilterAppleFmt.m; sourceTree = "<group>"; };
		39DA82D316184487001E7F79 /* KSCrashReportFilterBasic.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrashReportFilterBasic.h; sourceTree = "<group>"; };
		39DA82D416184487001E7F79 /* KSCrashReportFilterBasic.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashReportFilterBasic.m; sourceTree = "<group>"; };
		39DA82D516184487001E7F79 /* KSCrashReportFilterGZip.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrashReportFilterGZip.h; sourceTree = "<group>"; };
		39DA82D616184487001E7F79 /* KSCrashReportFilterGZip.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashReportFilterGZip.m; sourceTree = "<group>"; };
		39DA82D716184487001E7F79 /* KSCrashReportFilterJSON.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrashReportFilterJSON.h; sourceTree = "<group>"; };
		39DA82D816184487001E7F79 /* KSCrashReportFilterJSON.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashReportFilterJSON.m; sourceTree = "<group>"; };
		39DA82D916184487001E7F79 /* KSCrashReportSinkConsole.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrashReportSinkConsole.h; sourceTree = "<group>"; };
		39DA82DA16184487001E7F79 /* KSCrashReportSinkConsole.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashReportSinkConsole.m; sourceTree = "<group>"; };
		39DA82DB16184487001E7F79 /* KSCrashReportSinkEMail.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrashReportSinkEMail.h; sourceTree = "<group>"; };
		39DA82DC16184487001E7F79 /* KSCrashReportSinkEMail.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashReportSinkEMail.m; sourceTree = "<group>"; };
		39DA82DD16184487001E7F79 /* KSCrashReportSinkQuincyHockey.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = KSCrashReportSinkQuincyHockey.h; sourceTree = "<group>"; };
		39DA82DE16184487001E7F79 /* KSCrashReportSinkQuincyHockey.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashReportSinkQuincyHockey.m; sourceTree = "<group>"; };
		39DA82DF16184487001E7F79 /* KSCrashReportSinkStandard.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrashReportSinkStandard.h; sourceTree = "<group>"; };
		39DA82E016184487001E7F79 /* KSCrashReportSinkStandard.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashReportSinkStandard.m; sourceTree = "<group>"; };
		39DA830D16184492001E7F79 /* Container+DeepSearch.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = "Container+DeepSearch.h"; sourceTree = "<group>"; };
		39DA830E16184492001E7F79 /* Container+DeepSearch.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "Container+DeepSearch.m"; sourceTree = "<group>"; };
		39DA830F16184492001E7F79 /* KSHTTPMultipartPostBody.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSHTTPMultipartPostBody.h; sourceTree = "<group>"; };
		39DA831016184492001E7F79 /* KSHTTPMultipartPostBody.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSHTTPMultipartPostBody.m; sourceTree = "<group>"; };
		39DA831116184492001E7F79 /* KSHTTPRequestSender.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSHTTPRequestSender.h; sourceTree = "<group>"; };
		39DA831216184492001E7F79 /* KSHTTPRequestSender.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSHTTPRequestSender.m; sourceTree = "<group>"; };
		39DA831316184492001E7F79 /* KSReachabilityKSCrash.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = KSReachabilityKSCrash.h; sourceTree = "<group>"; };
		39DA831416184492001E7F79 /* KSReachabilityKSCrash.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSReachabilityKSCrash.m; sourceTree = "<group>"; };
		39DA831516184492001E7F79 /* KSVarArgs.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSVarArgs.h; sourceTree = "<group>"; };
		39DA831616184492001E7F79 /* NSData+GZip.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = "NSData+GZip.h"; sourceTree = "<group>"; };
		39DA831716184492001E7F79 /* NSData+GZip.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "NSData+GZip.m"; sourceTree = "<group>"; };
		39DA831816184492001E7F79 /* NSMutableData+AppendUTF8.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = "NSMutableData+AppendUTF8.h"; sourceTree = "<group>"; };
		39DA831916184492001E7F79 /* NSMutableData+AppendUTF8.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "NSMutableData+AppendUTF8.m"; sourceTree = "<group>"; };
		39DA8337161844FF001E7F79 /* ARCSafe_MemMgmt.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = ARCSafe_MemMgmt.h; sourceTree = "<group>"; };
		39DA8338161844FF001E7F79 /* KSArchSpecific.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSArchSpecific.h; sourceTree = "<group>"; };
		39DA8339161844FF001E7F79 /* KSBacktrace_Private.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSBacktrace_Private.h; sourceTree = "<group>"; };
		39DA833A161844FF001E7F79 /* KSBacktrace.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = KSBacktrace.c; sourceTree = "<group>"; };
		39DA833B161844FF001E7F79 /* KSBacktrace.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSBacktrace.h; sourceTree = "<group>"; };
		39DA833C161844FF001E7F79 /* KSFileUtils.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = KSFileUtils.c; sourceTree = "<group>"; };
		39DA833D161844FF001E7F79 /* KSFileUtils.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSFileUtils.h; sourceTree = "<group>"; };
		39DA833E161844FF001E7F79 /* KSJSONCodec.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = KSJSONCodec.c; sourceTree = "<group>"; };
		39DA833F161844FF001E7F79 /* KSJSONCodec.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSJSONCodec.h; sourceTree = "<group>"; };
		39DA8340161844FF001E7F79 /* KSJSONCodecObjC.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSJSONCodecObjC.h; sourceTree = "<group>"; };
		39DA8341161844FF001E7F79 /* KSJSONCodecObjC.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSJSONCodecObjC.m; sourceTree = "<group>"; };
		39DA8343161844FF001E7F79 /* KSLogger.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSLogger.h; sourceTree = "<group>"; };
		39DA8344161844FF001E7F79 /* KSLogger.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSLogger.m; sourceTree = "<group>"; };
		39DA8345161844FF001E7F79 /* KSMach_Arm.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = KSMach_Arm.c; sourceTree = "<group>"; };
		39DA8346161844FF001E7F79 /* KSMach_x86_32.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = KSMach_x86_32.c; sourceTree = "<group>"; };
		39DA8347161844FF001E7F79 /* KSMach_x86_64.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = KSMach_x86_64.c; sourceTree = "<group>"; };
		39DA8348161844FF001E7F79 /* KSMach.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = KSMach.c; sourceTree = "<group>"; };
		39DA8349161844FF001E7F79 /* KSMach.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSMach.h; sourceTree = "<group>"; };
		39DA834A161844FF001E7F79 /* KSObjC.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = KSObjC.c; sourceTree = "<group>"; };
		39DA834B161844FF001E7F79 /* KSObjC.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSObjC.h; sourceTree = "<group>"; };
		39DA834C161844FF001E7F79 /* KSSafeCollections.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSSafeCollections.h; sourceTree = "<group>"; };
		39DA834D161844FF001E7F79 /* KSSafeCollections.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSSafeCollections.m; sourceTree = "<group>"; };
		39DA834E161844FF001E7F79 /* KSSignalInfo.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = KSSignalInfo.c; sourceTree = "<group>"; };
		39DA834F161844FF001E7F79 /* KSSignalInfo.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSSignalInfo.h; sourceTree = "<group>"; };
		39DA8350161844FF001E7F79 /* KSString.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = KSString.c; sourceTree = "<group>"; };
		39DA8351161844FF001E7F79 /* KSString.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSString.h; sourceTree = "<group>"; };
		39DA8352161844FF001E7F79 /* KSSysCtl.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = KSSysCtl.c; sourceTree = "<group>"; };
		39DA8353161844FF001E7F79 /* KSSysCtl.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSSysCtl.h; sourceTree = "<group>"; };
		39DA8354161844FF001E7F79 /* KSZombie.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSZombie.h; sourceTree = "<group>"; };
		39DA8355161844FF001E7F79 /* KSZombie.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSZombie.m; sourceTree = "<group>"; };
		39DA8357161844FF001E7F79 /* RFC3339DateTool.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = RFC3339DateTool.h; sourceTree = "<group>"; };
		39DA8358161844FF001E7F79 /* RFC3339DateTool.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = RFC3339DateTool.m; sourceTree = "<group>"; };
		39DA839D1618450A001E7F79 /* KSCrashC.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = KSCrashC.c; sourceTree = "<group>"; };
		39DA839E1618450A001E7F79 /* KSCrashC.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrashC.h; sourceTree = "<group>"; };
		39DA839F1618450A001E7F79 /* KSCrashContext.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrashContext.h; sourceTree = "<group>"; };
		39DA83A01618450A001E7F79 /* KSCrashReport.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = KSCrashReport.c; sourceTree = "<group>"; };
		39DA83A11618450A001E7F79 /* KSCrashReport.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrashReport.h; sourceTree = "<group>"; };
		39DA83A21618450A001E7F79 /* KSCrashReportWriter.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrashReportWriter.h; sourceTree = "<group>"; };
		39DA83A31618450A001E7F79 /* KSCrashSentry_MachException.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = KSCrashSentry_MachException.c; sourceTree = "<group>"; };
		39DA83A41618450A001E7F79 /* KSCrashSentry_MachException.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrashSentry_MachException.h; sourceTree = "<group>"; };
		39DA83A51618450A001E7F79 /* KSCrashSentry_NSException.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrashSentry_NSException.h; sourceTree = "<group>"; };
		39DA83A61618450A001E7F79 /* KSCrashSentry_NSException.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashSentry_NSException.m; sourceTree = "<group>"; };
		39DA83A71618450A001E7F79 /* KSCrashSentry_Private.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrashSentry_Private.h; sourceTree = "<group>"; };
		39DA83A81618450A001E7F79 /* KSCrashSentry_Signal.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = KSCrashSentry_Signal.c; sourceTree = "<group>"; };
		39DA83A91618450A001E7F79 /* KSCrashSentry_Signal.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrashSentry_Signal.h; sourceTree = "<group>"; };
		39DA83AA1618450A001E7F79 /* KSCrashSentry.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = KSCrashSentry.c; sourceTree = "<group>"; };
		39DA83AB1618450A001E7F79 /* KSCrashSentry.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrashSentry.h; sourceTree = "<group>"; };
		39DA83AC1618450A001E7F79 /* KSCrashState.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = KSCrashState.c; sourceTree = "<group>"; };
		39DA83AD1618450A001E7F79 /* KSCrashState.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSCrashState.h; sourceTree = "<group>"; };
		39DA83AE1618450A001E7F79 /* KSSystemInfo.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSSystemInfo.h; sourceTree = "<group>"; };
		39DA83AF1618450A001E7F79 /* KSSystemInfo.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSSystemInfo.m; sourceTree = "<group>"; };
		39DA83B01618450A001E7F79 /* KSSystemInfoC.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = KSSystemInfoC.h; sourceTree = "<group>"; };
		39DA84211618D02F001E7F79 /* Container+DeepSearch_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "Container+DeepSearch_Tests.m"; sourceTree = "<group>"; };
		39DA84221618D02F001E7F79 /* FileBasedTestCase.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = FileBasedTestCase.h; sourceTree = "<group>"; };
		39DA84231618D02F001E7F79 /* FileBasedTestCase.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = FileBasedTestCase.m; sourceTree = "<group>"; };
		39DA84241618D02F001E7F79 /* KSCrashReportConverter_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashReportConverter_Tests.m; sourceTree = "<group>"; };
		39DA84251618D02F001E7F79 /* KSCrashReportFilter_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashReportFilter_Tests.m; sourceTree = "<group>"; };
		39DA84261618D02F001E7F79 /* KSCrashReportStore_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashReportStore_Tests.m; sourceTree = "<group>"; };
		39DA84271618D02F001E7F79 /* KSCrashState_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashState_Tests.m; sourceTree = "<group>"; };
		39DA84281618D02F001E7F79 /* KSFileUtils_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSFileUtils_Tests.m; sourceTree = "<group>"; };
		39DA84291618D02F001E7F79 /* KSJSONCodec_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSJSONCodec_Tests.m; sourceTree = "<group>"; };
		39DA842A1618D02F001E7F79 /* KSMach_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSMach_Tests.m; sourceTree = "<group>"; };
		39DA842C1618D02F001E7F79 /* KSObjC_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSObjC_Tests.m; sourceTree = "<group>"; };
		39DA842D1618D02F001E7F79 /* KSSignalInfo_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSSignalInfo_Tests.m; sourceTree = "<group>"; };
		39DA842E1618D02F001E7F79 /* NSData+Gzip_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "NSData+Gzip_Tests.m"; sourceTree = "<group>"; };
		39DA842F1618D02F001E7F79 /* NSMutableData+AppendUTF8_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "NSMutableData+AppendUTF8_Tests.m"; sourceTree = "<group>"; };
		39DA84301618D02F001E7F79 /* RFC3339DateTool_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = RFC3339DateTool_Tests.m; sourceTree = "<group>"; };
		39DA84311618D02F001E7F79 /* SenTestCase+KSCrash.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = "SenTestCase+KSCrash.h"; sourceTree = "<group>"; };
		39DA84321618D02F001E7F79 /* SenTestCase+KSCrash.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "SenTestCase+KSCrash.m"; sourceTree = "<group>"; };
		39DA84451618D201001E7F79 /* MessageUI.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = MessageUI.framework; path = System/Library/Frameworks/MessageUI.framework; sourceTree = SDKROOT; };
		39DA84471618D20E001E7F79 /* libz.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = libz.dylib; path = usr/lib/libz.dylib; sourceTree = SDKROOT; };
		39DA84491618D223001E7F79 /* CFNetwork.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CFNetwork.framework; path = System/Library/Frameworks/CFNetwork.framework; sourceTree = SDKROOT; };
		39DA844B1618D238001E7F79 /* SystemConfiguration.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = SystemConfiguration.framework; path = System/Library/Frameworks/SystemConfiguration.framework; sourceTree = SDKROOT; };
		39DA84F4161978D7001E7F79 /* NSDictionary+Merge.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.objj.h; path = "NSDictionary+Merge.h"; sourceTree = "<group>"; };
		39DA84F5161978D7001E7F79 /* NSDictionary+Merge.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "NSDictionary+Merge.m"; sourceTree = "<group>"; };
		39DA84FB16198753001E7F79 /* NSDictionary+Merge_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "NSDictionary+Merge_Tests.m"; sourceTree = "<group>"; };
		CB0AA0EE167EC43E006EAB99 /* KSCrashLite.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = KSCrashLite.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		CB0AA0F1167EC43E006EAB99 /* KSCrashLite-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "KSCrashLite-Info.plist"; sourceTree = "<group>"; };
		CB0AA0F3167EC43E006EAB99 /* en */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = en; path = en.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		CB0AA0F5167EC43E006EAB99 /* KSCrashLite-Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "KSCrashLite-Prefix.pch"; sourceTree = "<group>"; };
		CB117DBE16B4402B00FA3F2A /* KSZombie_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSZombie_Tests.m; sourceTree = "<group>"; };
		CB117DC116B4465500FA3F2A /* KSSystemInfo_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSSystemInfo_Tests.m; sourceTree = "<group>"; };
		CB117DC416B4488400FA3F2A /* KSSysCtl_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSSysCtl_Tests.m; sourceTree = "<group>"; };
		CB117DC716B44FC600FA3F2A /* KSString_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSString_Tests.m; sourceTree = "<group>"; };
		CB117DCA16B458FC00FA3F2A /* KSSafeCollections_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSSafeCollections_Tests.m; sourceTree = "<group>"; };
		CB117DCE16B4990B00FA3F2A /* KSLogger_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSLogger_Tests.m; sourceTree = "<group>"; };
		CB117DD416B4C4C500FA3F2A /* KSCrashSentry_Deadlock_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashSentry_Deadlock_Tests.m; sourceTree = "<group>"; };
		CB117DD716B4C62000FA3F2A /* KSCrashSentry_NSException_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashSentry_NSException_Tests.m; sourceTree = "<group>"; };
		CB117DDA16B4C75E00FA3F2A /* KSCrashSentry_Signal_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashSentry_Signal_Tests.m; sourceTree = "<group>"; };
		CB1B376D16D74F3C00FFFCEA /* KSCString.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = KSCString.h; sourceTree = "<group>"; };
		CB1B376E16D74F3C00FFFCEA /* KSCString.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCString.m; sourceTree = "<group>"; };
		CB1B378516D820AE00FFFCEA /* KSSingleton.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = KSSingleton.h; sourceTree = "<group>"; };
		CB5A5B3916C6650E00DC1D2D /* NSError+SimpleConstructor.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "NSError+SimpleConstructor.h"; sourceTree = "<group>"; };
		CB5A5B3A16C6650E00DC1D2D /* NSError+SimpleConstructor.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "NSError+SimpleConstructor.m"; sourceTree = "<group>"; };
		CB5A5B4116C718C400DC1D2D /* KSCrashCallCompletion.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = KSCrashCallCompletion.h; sourceTree = "<group>"; };
		CB5A5B4216C718C400DC1D2D /* KSCrashCallCompletion.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashCallCompletion.m; sourceTree = "<group>"; };
		CB78E8B4169C934100C39B02 /* KSObjCApple.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = KSObjCApple.h; sourceTree = "<group>"; };
		CB78E8B9169C94DA00C39B02 /* KSMachApple.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = KSMachApple.h; sourceTree = "<group>"; };
		CB7C753D16CD5DA200227870 /* KSCrashInstallation+Private.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "KSCrashInstallation+Private.h"; sourceTree = "<group>"; };
		CB7C754116CD5F5E00227870 /* KSCrashInstallation.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = KSCrashInstallation.h; sourceTree = "<group>"; };
		CB7C754216CD5F5F00227870 /* KSCrashInstallation.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashInstallation.m; sourceTree = "<group>"; };
		CBC74E9D169FD6FC001A688D /* GCDAProfiling.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; name = GCDAProfiling.c; path = XcodeCoverage/GCDAProfiling.c; sourceTree = SOURCE_ROOT; };
		CBCED884175E565B00BF56F0 /* KSCrashSentry_User.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = KSCrashSentry_User.h; sourceTree = "<group>"; };
		CBCED88C175E567F00BF56F0 /* KSCrashSentry_User.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = KSCrashSentry_User.c; sourceTree = "<group>"; };
		CBD9A64316E3E875007142EE /* KSCrashInstallationEmail_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashInstallationEmail_Tests.m; sourceTree = "<group>"; };
		CBD9A64616E3EC02007142EE /* KSCrashInstallationQuincyHockey_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashInstallationQuincyHockey_Tests.m; sourceTree = "<group>"; };
		CBD9A64916E3F424007142EE /* KSCrashInstallationStandard_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashInstallationStandard_Tests.m; sourceTree = "<group>"; };
		CBE3D8E416C7A61300C4105E /* KSCrashInstallationQuincyHockey.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = KSCrashInstallationQuincyHockey.h; sourceTree = "<group>"; };
		CBE3D8E516C7A61400C4105E /* KSCrashInstallationQuincyHockey.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashInstallationQuincyHockey.m; sourceTree = "<group>"; };
		CBF2D93816DE86B00003AD7E /* KSCrashInstallationEmail.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = KSCrashInstallationEmail.h; sourceTree = "<group>"; };
		CBF2D93916DE86B00003AD7E /* KSCrashInstallationEmail.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashInstallationEmail.m; sourceTree = "<group>"; };
		CBF2D93E16DEDCC10003AD7E /* KSCrashInstallationStandard.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = KSCrashInstallationStandard.h; sourceTree = "<group>"; };
		CBF2D93F16DEDCC10003AD7E /* KSCrashInstallationStandard.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashInstallationStandard.m; sourceTree = "<group>"; };
		CBF2D94516E256270003AD7E /* KSCString_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCString_Tests.m; sourceTree = "<group>"; };
		CBF2D94816E25E520003AD7E /* NSError+SimpleConstructor_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = "NSError+SimpleConstructor_Tests.m"; sourceTree = "<group>"; };
		CBF2D94B16E260AB0003AD7E /* KSCrashSentry_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashSentry_Tests.m; sourceTree = "<group>"; };
		CBF2D94E16E27AD90003AD7E /* KSCrashReportFilterJSON_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashReportFilterJSON_Tests.m; sourceTree = "<group>"; };
		CBF2D95116E27B300003AD7E /* KSCrashReportFilterGZip_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashReportFilterGZip_Tests.m; sourceTree = "<group>"; };
		CBF2D95416E27BF60003AD7E /* KSCrashReportFilterAlert_Tests.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = KSCrashReportFilterAlert_Tests.m; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		39DA35AF1618432E009EB332 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		39DA35C316184338009EB332 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				39DA35C716184338009EB332 /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		39DA35D016184338009EB332 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				39DA35D916184338009EB332 /* Foundation.framework in Frameworks */,
				39DA84481618D20E001E7F79 /* libz.dylib in Frameworks */,
				39DA84461618D201001E7F79 /* MessageUI.framework in Frameworks */,
				39DA35D616184338009EB332 /* SenTestingKit.framework in Frameworks */,
				39DA844C1618D238001E7F79 /* SystemConfiguration.framework in Frameworks */,
				39DA35D816184338009EB332 /* UIKit.framework in Frameworks */,
				CB775560169F402700EA90A5 /* libKSCrashLib.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		CB0AA0E9167EC43E006EAB99 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		39DA35921618430C009EB332 = {
			isa = PBXGroup;
			children = (
				39DA35B51618432E009EB332 /* KSCrash */,
				CB0AA0EF167EC43E006EAB99 /* KSCrashLite */,
				39DA35C816184338009EB332 /* KSCrashLib */,
				39DA35DD16184338009EB332 /* KSCrashTests */,
				39DA359F1618430C009EB332 /* Frameworks */,
				39DA359E1618430C009EB332 /* Products */,
			);
			sourceTree = "<group>";
		};
		39DA359E1618430C009EB332 /* Products */ = {
			isa = PBXGroup;
			children = (
				39DA35B41618432E009EB332 /* KSCrash.framework */,
				39DA35C616184338009EB332 /* libKSCrashLib.a */,
				39DA35D416184338009EB332 /* KSCrashTests.octest */,
				CB0AA0EE167EC43E006EAB99 /* KSCrashLite.framework */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		39DA359F1618430C009EB332 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				39DA84491618D223001E7F79 /* CFNetwork.framework */,
				39DA35A01618430C009EB332 /* Foundation.framework */,
				39DA84471618D20E001E7F79 /* libz.dylib */,
				39DA84451618D201001E7F79 /* MessageUI.framework */,
				39DA35D516184338009EB332 /* SenTestingKit.framework */,
				39DA844B1618D238001E7F79 /* SystemConfiguration.framework */,
				39DA35D716184338009EB332 /* UIKit.framework */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		39DA35B51618432E009EB332 /* KSCrash */ = {
			isa = PBXGroup;
			children = (
				39DA8335161844E6001E7F79 /* Crash Recording */,
				39DA82C816184469001E7F79 /* Crash Reporting */,
				CB7C754916CD776000227870 /* Installation */,
				39DA82B916184456001E7F79 /* KSCrash.h */,
				39DA82BA16184456001E7F79 /* KSCrash.m */,
				39DA82BB16184456001E7F79 /* KSCrashAdvanced.h */,
				39DA35B61618432E009EB332 /* Supporting Files */,
			);
			path = KSCrash;
			sourceTree = "<group>";
		};
		39DA35B61618432E009EB332 /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				CBC74E9D169FD6FC001A688D /* GCDAProfiling.c */,
				39DA35B71618432E009EB332 /* KSCrash-Info.plist */,
				39DA35B81618432E009EB332 /* InfoPlist.strings */,
				39DA35BB1618432E009EB332 /* KSCrash-Prefix.pch */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		39DA35C816184338009EB332 /* KSCrashLib */ = {
			isa = PBXGroup;
			children = (
				39DA35C916184338009EB332 /* Supporting Files */,
			);
			path = KSCrashLib;
			sourceTree = "<group>";
		};
		39DA35C916184338009EB332 /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				39DA35CA16184338009EB332 /* KSCrashLib-Prefix.pch */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		39DA35DD16184338009EB332 /* KSCrashTests */ = {
			isa = PBXGroup;
			children = (
				39DA84211618D02F001E7F79 /* Container+DeepSearch_Tests.m */,
				39DA84221618D02F001E7F79 /* FileBasedTestCase.h */,
				39DA84231618D02F001E7F79 /* FileBasedTestCase.m */,
				CBD9A64316E3E875007142EE /* KSCrashInstallationEmail_Tests.m */,
				CBD9A64616E3EC02007142EE /* KSCrashInstallationQuincyHockey_Tests.m */,
				CBD9A64916E3F424007142EE /* KSCrashInstallationStandard_Tests.m */,
				21D6639D16F1AD1400654F31 /* KSCrashInstallationTakanashi_Tests.m */,
				39DA84241618D02F001E7F79 /* KSCrashReportConverter_Tests.m */,
				39DA84251618D02F001E7F79 /* KSCrashReportFilter_Tests.m */,
				CBF2D95416E27BF60003AD7E /* KSCrashReportFilterAlert_Tests.m */,
				CBF2D95116E27B300003AD7E /* KSCrashReportFilterGZip_Tests.m */,
				CBF2D94E16E27AD90003AD7E /* KSCrashReportFilterJSON_Tests.m */,
				39DA84261618D02F001E7F79 /* KSCrashReportStore_Tests.m */,
				CB117DD416B4C4C500FA3F2A /* KSCrashSentry_Deadlock_Tests.m */,
				CB117DD716B4C62000FA3F2A /* KSCrashSentry_NSException_Tests.m */,
				CB117DDA16B4C75E00FA3F2A /* KSCrashSentry_Signal_Tests.m */,
				CBF2D94B16E260AB0003AD7E /* KSCrashSentry_Tests.m */,
				39DA84271618D02F001E7F79 /* KSCrashState_Tests.m */,
				CBF2D94516E256270003AD7E /* KSCString_Tests.m */,
				39DA84281618D02F001E7F79 /* KSFileUtils_Tests.m */,
				39DA84291618D02F001E7F79 /* KSJSONCodec_Tests.m */,
				CB117DCE16B4990B00FA3F2A /* KSLogger_Tests.m */,
				39DA842A1618D02F001E7F79 /* KSMach_Tests.m */,
				39DA842C1618D02F001E7F79 /* KSObjC_Tests.m */,
				CB117DCA16B458FC00FA3F2A /* KSSafeCollections_Tests.m */,
				39DA842D1618D02F001E7F79 /* KSSignalInfo_Tests.m */,
				CB117DC716B44FC600FA3F2A /* KSString_Tests.m */,
				CB117DC416B4488400FA3F2A /* KSSysCtl_Tests.m */,
				CB117DC116B4465500FA3F2A /* KSSystemInfo_Tests.m */,
				CB117DBE16B4402B00FA3F2A /* KSZombie_Tests.m */,
				39DA842E1618D02F001E7F79 /* NSData+Gzip_Tests.m */,
				39DA84FB16198753001E7F79 /* NSDictionary+Merge_Tests.m */,
				CBF2D94816E25E520003AD7E /* NSError+SimpleConstructor_Tests.m */,
				39DA842F1618D02F001E7F79 /* NSMutableData+AppendUTF8_Tests.m */,
				39DA84301618D02F001E7F79 /* RFC3339DateTool_Tests.m */,
				39DA84311618D02F001E7F79 /* SenTestCase+KSCrash.h */,
				39DA84321618D02F001E7F79 /* SenTestCase+KSCrash.m */,
				39DA35DE16184338009EB332 /* Supporting Files */,
			);
			path = KSCrashTests;
			sourceTree = "<group>";
		};
		39DA35DE16184338009EB332 /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				39DA35DF16184338009EB332 /* KSCrashTests-Info.plist */,
				39DA35E016184338009EB332 /* InfoPlist.strings */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		39DA82C816184469001E7F79 /* Crash Reporting */ = {
			isa = PBXGroup;
			children = (
				39DA82CA1618447B001E7F79 /* Filters */,
				394DCC6F164F43C2008A4C50 /* KSCrashDoctor.h */,
				394DCC70164F43C2008A4C50 /* KSCrashDoctor.m */,
				39DA82BC16184456001E7F79 /* KSCrashReportStore.h */,
				39DA82BD16184456001E7F79 /* KSCrashReportStore.m */,
				39DA82C916184476001E7F79 /* Tools */,
			);
			name = "Crash Reporting";
			sourceTree = "<group>";
		};
		39DA82C916184476001E7F79 /* Tools */ = {
			isa = PBXGroup;
			children = (
				39DA830D16184492001E7F79 /* Container+DeepSearch.h */,
				39DA830E16184492001E7F79 /* Container+DeepSearch.m */,
				CB5A5B4116C718C400DC1D2D /* KSCrashCallCompletion.h */,
				CB5A5B4216C718C400DC1D2D /* KSCrashCallCompletion.m */,
				CB1B376D16D74F3C00FFFCEA /* KSCString.h */,
				CB1B376E16D74F3C00FFFCEA /* KSCString.m */,
				39DA830F16184492001E7F79 /* KSHTTPMultipartPostBody.h */,
				39DA831016184492001E7F79 /* KSHTTPMultipartPostBody.m */,
				39DA831116184492001E7F79 /* KSHTTPRequestSender.h */,
				39DA831216184492001E7F79 /* KSHTTPRequestSender.m */,
				39DA831316184492001E7F79 /* KSReachabilityKSCrash.h */,
				39DA831416184492001E7F79 /* KSReachabilityKSCrash.m */,
				CB1B378516D820AE00FFFCEA /* KSSingleton.h */,
				39DA831516184492001E7F79 /* KSVarArgs.h */,
				39DA831616184492001E7F79 /* NSData+GZip.h */,
				39DA831716184492001E7F79 /* NSData+GZip.m */,
				39DA84F4161978D7001E7F79 /* NSDictionary+Merge.h */,
				39DA84F5161978D7001E7F79 /* NSDictionary+Merge.m */,
				CB5A5B3916C6650E00DC1D2D /* NSError+SimpleConstructor.h */,
				CB5A5B3A16C6650E00DC1D2D /* NSError+SimpleConstructor.m */,
				39DA831816184492001E7F79 /* NSMutableData+AppendUTF8.h */,
				39DA831916184492001E7F79 /* NSMutableData+AppendUTF8.m */,
			);
			name = Tools;
			sourceTree = "<group>";
		};
		39DA82CA1618447B001E7F79 /* Filters */ = {
			isa = PBXGroup;
			children = (
				39DA82CD16184487001E7F79 /* KSCrashReportFilter.h */,
				39DA82CE16184487001E7F79 /* KSCrashReportFilter.m */,
				39DA82CF16184487001E7F79 /* KSCrashReportFilterAlert.h */,
				39DA82D016184487001E7F79 /* KSCrashReportFilterAlert.m */,
				39DA82D116184487001E7F79 /* KSCrashReportFilterAppleFmt.h */,
				39DA82D216184487001E7F79 /* KSCrashReportFilterAppleFmt.m */,
				39DA82D316184487001E7F79 /* KSCrashReportFilterBasic.h */,
				39DA82D416184487001E7F79 /* KSCrashReportFilterBasic.m */,
				39DA82D516184487001E7F79 /* KSCrashReportFilterGZip.h */,
				39DA82D616184487001E7F79 /* KSCrashReportFilterGZip.m */,
				39DA82D716184487001E7F79 /* KSCrashReportFilterJSON.h */,
				39DA82D816184487001E7F79 /* KSCrashReportFilterJSON.m */,
				39DA82CB16184487001E7F79 /* KSCrashReportFilterSets.h */,
				39DA82CC16184487001E7F79 /* KSCrashReportFilterSets.m */,
				39DA82D916184487001E7F79 /* KSCrashReportSinkConsole.h */,
				39DA82DA16184487001E7F79 /* KSCrashReportSinkConsole.m */,
				39DA82DB16184487001E7F79 /* KSCrashReportSinkEMail.h */,
				39DA82DC16184487001E7F79 /* KSCrashReportSinkEMail.m */,
				39DA82DD16184487001E7F79 /* KSCrashReportSinkQuincyHockey.h */,
				39DA82DE16184487001E7F79 /* KSCrashReportSinkQuincyHockey.m */,
				39DA82DF16184487001E7F79 /* KSCrashReportSinkStandard.h */,
				39DA82E016184487001E7F79 /* KSCrashReportSinkStandard.m */,
				2122BBCD16F185120056D11C /* KSCrashReportSinkTakanashi.h */,
				2122BBCE16F185120056D11C /* KSCrashReportSinkTakanashi.m */,
			);
			name = Filters;
			sourceTree = "<group>";
		};
		39DA8334161844B9001E7F79 /* Sentry */ = {
			isa = PBXGroup;
			children = (
				39DA83AA1618450A001E7F79 /* KSCrashSentry.c */,
				39DA83AB1618450A001E7F79 /* KSCrashSentry.h */,
				39D329DA16765AD500D989DC /* KSCrashSentry_Deadlock.h */,
				39D329DB16765AD500D989DC /* KSCrashSentry_Deadlock.m */,
				39DA83A31618450A001E7F79 /* KSCrashSentry_MachException.c */,
				39DA83A41618450A001E7F79 /* KSCrashSentry_MachException.h */,
				39DA83A51618450A001E7F79 /* KSCrashSentry_NSException.h */,
				39DA83A61618450A001E7F79 /* KSCrashSentry_NSException.m */,
				39DA83A71618450A001E7F79 /* KSCrashSentry_Private.h */,
				39DA83A81618450A001E7F79 /* KSCrashSentry_Signal.c */,
				39DA83A91618450A001E7F79 /* KSCrashSentry_Signal.h */,
				CBCED884175E565B00BF56F0 /* KSCrashSentry_User.h */,
				CBCED88C175E567F00BF56F0 /* KSCrashSentry_User.c */,
			);
			name = Sentry;
			sourceTree = "<group>";
		};
		39DA8335161844E6001E7F79 /* Crash Recording */ = {
			isa = PBXGroup;
			children = (
				39DA839D1618450A001E7F79 /* KSCrashC.c */,
				39DA839E1618450A001E7F79 /* KSCrashC.h */,
				39DA839F1618450A001E7F79 /* KSCrashContext.h */,
				39DA83A01618450A001E7F79 /* KSCrashReport.c */,
				39DA83A11618450A001E7F79 /* KSCrashReport.h */,
				397A7C86162266480096E287 /* KSCrashReportFields.h */,
				39DA83A21618450A001E7F79 /* KSCrashReportWriter.h */,
				39DA83AC1618450A001E7F79 /* KSCrashState.c */,
				39DA83AD1618450A001E7F79 /* KSCrashState.h */,
				39DA83AE1618450A001E7F79 /* KSSystemInfo.h */,
				39DA83AF1618450A001E7F79 /* KSSystemInfo.m */,
				39DA83B01618450A001E7F79 /* KSSystemInfoC.h */,
				39DA8334161844B9001E7F79 /* Sentry */,
				39DA8336161844F1001E7F79 /* Tools */,
			);
			name = "Crash Recording";
			sourceTree = "<group>";
		};
		39DA8336161844F1001E7F79 /* Tools */ = {
			isa = PBXGroup;
			children = (
				39DA8337161844FF001E7F79 /* ARCSafe_MemMgmt.h */,
				39DA8338161844FF001E7F79 /* KSArchSpecific.h */,
				39DA833A161844FF001E7F79 /* KSBacktrace.c */,
				39DA833B161844FF001E7F79 /* KSBacktrace.h */,
				39DA8339161844FF001E7F79 /* KSBacktrace_Private.h */,
				39DA833C161844FF001E7F79 /* KSFileUtils.c */,
				39DA833D161844FF001E7F79 /* KSFileUtils.h */,
				39DA833E161844FF001E7F79 /* KSJSONCodec.c */,
				39DA833F161844FF001E7F79 /* KSJSONCodec.h */,
				39DA8340161844FF001E7F79 /* KSJSONCodecObjC.h */,
				39DA8341161844FF001E7F79 /* KSJSONCodecObjC.m */,
				39DA8343161844FF001E7F79 /* KSLogger.h */,
				39DA8344161844FF001E7F79 /* KSLogger.m */,
				39DA8348161844FF001E7F79 /* KSMach.c */,
				39DA8349161844FF001E7F79 /* KSMach.h */,
				39DA8345161844FF001E7F79 /* KSMach_Arm.c */,
				39DA8346161844FF001E7F79 /* KSMach_x86_32.c */,
				39DA8347161844FF001E7F79 /* KSMach_x86_64.c */,
				CB78E8B9169C94DA00C39B02 /* KSMachApple.h */,
				39DA834A161844FF001E7F79 /* KSObjC.c */,
				39DA834B161844FF001E7F79 /* KSObjC.h */,
				CB78E8B4169C934100C39B02 /* KSObjCApple.h */,
				39DA834C161844FF001E7F79 /* KSSafeCollections.h */,
				39DA834D161844FF001E7F79 /* KSSafeCollections.m */,
				39DA834E161844FF001E7F79 /* KSSignalInfo.c */,
				39DA834F161844FF001E7F79 /* KSSignalInfo.h */,
				39DA8350161844FF001E7F79 /* KSString.c */,
				39DA8351161844FF001E7F79 /* KSString.h */,
				39DA8352161844FF001E7F79 /* KSSysCtl.c */,
				39DA8353161844FF001E7F79 /* KSSysCtl.h */,
				39DA8354161844FF001E7F79 /* KSZombie.h */,
				39DA8355161844FF001E7F79 /* KSZombie.m */,
				39DA8357161844FF001E7F79 /* RFC3339DateTool.h */,
				39DA8358161844FF001E7F79 /* RFC3339DateTool.m */,
			);
			name = Tools;
			sourceTree = "<group>";
		};
		CB0AA0EF167EC43E006EAB99 /* KSCrashLite */ = {
			isa = PBXGroup;
			children = (
				CB0AA0F0167EC43E006EAB99 /* Supporting Files */,
			);
			path = KSCrashLite;
			sourceTree = "<group>";
		};
		CB0AA0F0167EC43E006EAB99 /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				CB0AA0F1167EC43E006EAB99 /* KSCrashLite-Info.plist */,
				CB0AA0F2167EC43E006EAB99 /* InfoPlist.strings */,
				CB0AA0F5167EC43E006EAB99 /* KSCrashLite-Prefix.pch */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		CB7C754916CD776000227870 /* Installation */ = {
			isa = PBXGroup;
			children = (
				CB7C753D16CD5DA200227870 /* KSCrashInstallation+Private.h */,
				CB7C754116CD5F5E00227870 /* KSCrashInstallation.h */,
				CB7C754216CD5F5F00227870 /* KSCrashInstallation.m */,
				CBF2D93816DE86B00003AD7E /* KSCrashInstallationEmail.h */,
				CBF2D93916DE86B00003AD7E /* KSCrashInstallationEmail.m */,
				CBE3D8E416C7A61300C4105E /* KSCrashInstallationQuincyHockey.h */,
				CBE3D8E516C7A61400C4105E /* KSCrashInstallationQuincyHockey.m */,
				CBF2D93E16DEDCC10003AD7E /* KSCrashInstallationStandard.h */,
				CBF2D93F16DEDCC10003AD7E /* KSCrashInstallationStandard.m */,
				2193ACC216F19D690016EA5F /* KSCrashInstallationTakanashi.h */,
				2193ACC316F19D690016EA5F /* KSCrashInstallationTakanashi.m */,
			);
			name = Installation;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXHeadersBuildPhase section */
		39DA35B01618432E009EB332 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				39DA82BE16184456001E7F79 /* KSCrash.h in Headers */,
				39DA82C216184456001E7F79 /* KSCrashAdvanced.h in Headers */,
				39DA83BB1618450A001E7F79 /* KSCrashReportWriter.h in Headers */,
				39DA82E516184487001E7F79 /* KSCrashReportFilter.h in Headers */,
				2193ACC416F19D690016EA5F /* KSCrashInstallationTakanashi.h in Headers */,
				39DA82E916184487001E7F79 /* KSCrashReportFilterAlert.h in Headers */,
				39DA82ED16184487001E7F79 /* KSCrashReportFilterAppleFmt.h in Headers */,
				39DA82F116184487001E7F79 /* KSCrashReportFilterBasic.h in Headers */,
				39DA82F516184487001E7F79 /* KSCrashReportFilterGZip.h in Headers */,
				39DA82F916184487001E7F79 /* KSCrashReportFilterJSON.h in Headers */,
				39DA82E116184487001E7F79 /* KSCrashReportFilterSets.h in Headers */,
				39DA82FD16184487001E7F79 /* KSCrashReportSinkConsole.h in Headers */,
				39DA830116184487001E7F79 /* KSCrashReportSinkEMail.h in Headers */,
				39DA830516184487001E7F79 /* KSCrashReportSinkQuincyHockey.h in Headers */,
				39DA830916184487001E7F79 /* KSCrashReportSinkStandard.h in Headers */,
				2122BBCF16F185120056D11C /* KSCrashReportSinkTakanashi.h in Headers */,
				39DA82C416184456001E7F79 /* KSCrashReportStore.h in Headers */,
				39DA836B161844FF001E7F79 /* KSJSONCodecObjC.h in Headers */,
				397A7C87162266480096E287 /* KSCrashReportFields.h in Headers */,
				39DA84F6161978D7001E7F79 /* NSDictionary+Merge.h in Headers */,
				39DA8359161844FF001E7F79 /* ARCSafe_MemMgmt.h in Headers */,
				39DA831A16184492001E7F79 /* Container+DeepSearch.h in Headers */,
				39DA835B161844FF001E7F79 /* KSArchSpecific.h in Headers */,
				39DA8361161844FF001E7F79 /* KSBacktrace.h in Headers */,
				39DA835D161844FF001E7F79 /* KSBacktrace_Private.h in Headers */,
				39DA83B31618450A001E7F79 /* KSCrashC.h in Headers */,
				39DA83B51618450A001E7F79 /* KSCrashContext.h in Headers */,
				39DA83B91618450A001E7F79 /* KSCrashReport.h in Headers */,
				39D329DC16765AD500D989DC /* KSCrashSentry_Deadlock.h in Headers */,
				39DA83BF1618450A001E7F79 /* KSCrashSentry_MachException.h in Headers */,
				39DA83C11618450A001E7F79 /* KSCrashSentry_NSException.h in Headers */,
				39DA83C51618450A001E7F79 /* KSCrashSentry_Private.h in Headers */,
				39DA83C91618450A001E7F79 /* KSCrashSentry_Signal.h in Headers */,
				39DA83CD1618450A001E7F79 /* KSCrashSentry.h in Headers */,
				39DA83D11618450A001E7F79 /* KSCrashState.h in Headers */,
				39DA8365161844FF001E7F79 /* KSFileUtils.h in Headers */,
				39DA8369161844FF001E7F79 /* KSJSONCodec.h in Headers */,
				39DA831E16184492001E7F79 /* KSHTTPMultipartPostBody.h in Headers */,
				39DA832216184492001E7F79 /* KSHTTPRequestSender.h in Headers */,
				39DA8371161844FF001E7F79 /* KSLogger.h in Headers */,
				39DA837D161844FF001E7F79 /* KSMach.h in Headers */,
				39DA8381161844FF001E7F79 /* KSObjC.h in Headers */,
				39DA832616184492001E7F79 /* KSReachabilityKSCrash.h in Headers */,
				39DA8383161844FF001E7F79 /* KSSafeCollections.h in Headers */,
				39DA8389161844FF001E7F79 /* KSSignalInfo.h in Headers */,
				39DA838D161844FF001E7F79 /* KSString.h in Headers */,
				39DA8391161844FF001E7F79 /* KSSysCtl.h in Headers */,
				39DA83D31618450A001E7F79 /* KSSystemInfo.h in Headers */,
				39DA83D71618450A001E7F79 /* KSSystemInfoC.h in Headers */,
				39DA832A16184492001E7F79 /* KSVarArgs.h in Headers */,
				39DA8393161844FF001E7F79 /* KSZombie.h in Headers */,
				39DA832C16184492001E7F79 /* NSData+GZip.h in Headers */,
				39DA833016184492001E7F79 /* NSMutableData+AppendUTF8.h in Headers */,
				39DA8399161844FF001E7F79 /* RFC3339DateTool.h in Headers */,
				394DCC71164F43C2008A4C50 /* KSCrashDoctor.h in Headers */,
				CB78E8B5169C934100C39B02 /* KSObjCApple.h in Headers */,
				CB78E8BA169C94DB00C39B02 /* KSMachApple.h in Headers */,
				CB5A5B3B16C6650E00DC1D2D /* NSError+SimpleConstructor.h in Headers */,
				CB5A5B4316C718C500DC1D2D /* KSCrashCallCompletion.h in Headers */,
				CBE3D8E616C7A61400C4105E /* KSCrashInstallationQuincyHockey.h in Headers */,
				CB7C753E16CD5DA200227870 /* KSCrashInstallation+Private.h in Headers */,
				CB7C754316CD5F5F00227870 /* KSCrashInstallation.h in Headers */,
				CB1B376F16D74F3C00FFFCEA /* KSCString.h in Headers */,
				CB1B378616D820AE00FFFCEA /* KSSingleton.h in Headers */,
				CBF2D93A16DE86B00003AD7E /* KSCrashInstallationEmail.h in Headers */,
				CBF2D94016DEDCC10003AD7E /* KSCrashInstallationStandard.h in Headers */,
				CBCED885175E565B00BF56F0 /* KSCrashSentry_User.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		39DA841F1618CCEC001E7F79 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				39DA82BF16184456001E7F79 /* KSCrash.h in Headers */,
				2193ACC516F19D690016EA5F /* KSCrashInstallationTakanashi.h in Headers */,
				39DA82C316184456001E7F79 /* KSCrashAdvanced.h in Headers */,
				39DA83BC1618450A001E7F79 /* KSCrashReportWriter.h in Headers */,
				39DA82E616184487001E7F79 /* KSCrashReportFilter.h in Headers */,
				39DA82EA16184487001E7F79 /* KSCrashReportFilterAlert.h in Headers */,
				39DA82EE16184487001E7F79 /* KSCrashReportFilterAppleFmt.h in Headers */,
				39DA82F216184487001E7F79 /* KSCrashReportFilterBasic.h in Headers */,
				39DA82F616184487001E7F79 /* KSCrashReportFilterGZip.h in Headers */,
				39DA82FA16184487001E7F79 /* KSCrashReportFilterJSON.h in Headers */,
				39DA82E216184487001E7F79 /* KSCrashReportFilterSets.h in Headers */,
				39DA82FE16184487001E7F79 /* KSCrashReportSinkConsole.h in Headers */,
				39DA830216184487001E7F79 /* KSCrashReportSinkEMail.h in Headers */,
				39DA830616184487001E7F79 /* KSCrashReportSinkQuincyHockey.h in Headers */,
				39DA830A16184487001E7F79 /* KSCrashReportSinkStandard.h in Headers */,
				2122BBD016F185120056D11C /* KSCrashReportSinkTakanashi.h in Headers */,
				39DA836C161844FF001E7F79 /* KSJSONCodecObjC.h in Headers */,
				397A7C88162266480096E287 /* KSCrashReportFields.h in Headers */,
				39DA835A161844FF001E7F79 /* ARCSafe_MemMgmt.h in Headers */,
				39DA831B16184492001E7F79 /* Container+DeepSearch.h in Headers */,
				39DA835C161844FF001E7F79 /* KSArchSpecific.h in Headers */,
				39DA8362161844FF001E7F79 /* KSBacktrace.h in Headers */,
				39DA835E161844FF001E7F79 /* KSBacktrace_Private.h in Headers */,
				39DA83B41618450A001E7F79 /* KSCrashC.h in Headers */,
				39DA83B61618450A001E7F79 /* KSCrashContext.h in Headers */,
				39DA83BA1618450A001E7F79 /* KSCrashReport.h in Headers */,
				39DA82C516184456001E7F79 /* KSCrashReportStore.h in Headers */,
				39D329DD16765AD500D989DC /* KSCrashSentry_Deadlock.h in Headers */,
				39DA83C01618450A001E7F79 /* KSCrashSentry_MachException.h in Headers */,
				39DA83C21618450A001E7F79 /* KSCrashSentry_NSException.h in Headers */,
				39DA83C61618450A001E7F79 /* KSCrashSentry_Private.h in Headers */,
				39DA83CA1618450A001E7F79 /* KSCrashSentry_Signal.h in Headers */,
				39DA83CE1618450A001E7F79 /* KSCrashSentry.h in Headers */,
				39DA83D21618450A001E7F79 /* KSCrashState.h in Headers */,
				39DA8366161844FF001E7F79 /* KSFileUtils.h in Headers */,
				39DA831F16184492001E7F79 /* KSHTTPMultipartPostBody.h in Headers */,
				39DA832316184492001E7F79 /* KSHTTPRequestSender.h in Headers */,
				39DA836A161844FF001E7F79 /* KSJSONCodec.h in Headers */,
				39DA8372161844FF001E7F79 /* KSLogger.h in Headers */,
				39DA837E161844FF001E7F79 /* KSMach.h in Headers */,
				39DA8382161844FF001E7F79 /* KSObjC.h in Headers */,
				39DA832716184492001E7F79 /* KSReachabilityKSCrash.h in Headers */,
				39DA8384161844FF001E7F79 /* KSSafeCollections.h in Headers */,
				39DA838A161844FF001E7F79 /* KSSignalInfo.h in Headers */,
				39DA838E161844FF001E7F79 /* KSString.h in Headers */,
				39DA8392161844FF001E7F79 /* KSSysCtl.h in Headers */,
				39DA83D41618450A001E7F79 /* KSSystemInfo.h in Headers */,
				39DA83D81618450A001E7F79 /* KSSystemInfoC.h in Headers */,
				39DA832B16184492001E7F79 /* KSVarArgs.h in Headers */,
				39DA8394161844FF001E7F79 /* KSZombie.h in Headers */,
				39DA832D16184492001E7F79 /* NSData+GZip.h in Headers */,
				39DA833116184492001E7F79 /* NSMutableData+AppendUTF8.h in Headers */,
				39DA839A161844FF001E7F79 /* RFC3339DateTool.h in Headers */,
				394DCC73164F547E008A4C50 /* KSCrashDoctor.h in Headers */,
				CB78E8B7169C934100C39B02 /* KSObjCApple.h in Headers */,
				CB78E8BC169C94DB00C39B02 /* KSMachApple.h in Headers */,
				CB5A5B3D16C6650E00DC1D2D /* NSError+SimpleConstructor.h in Headers */,
				CB5A5B4516C718C500DC1D2D /* KSCrashCallCompletion.h in Headers */,
				CB5A5B4916C7589400DC1D2D /* NSDictionary+Merge.h in Headers */,
				CBE3D8E716C7A61400C4105E /* KSCrashInstallationQuincyHockey.h in Headers */,
				CB7C754016CD5DA200227870 /* KSCrashInstallation+Private.h in Headers */,
				CB7C754516CD5F5F00227870 /* KSCrashInstallation.h in Headers */,
				CB1B377116D74F3C00FFFCEA /* KSCString.h in Headers */,
				CB1B378816D820AE00FFFCEA /* KSSingleton.h in Headers */,
				CBF2D93B16DE86B00003AD7E /* KSCrashInstallationEmail.h in Headers */,
				CBF2D94116DEDCC10003AD7E /* KSCrashInstallationStandard.h in Headers */,
				CBCED887175E565B00BF56F0 /* KSCrashSentry_User.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		CB0AA0EA167EC43E006EAB99 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				CB0AA156167EC4B5006EAB99 /* KSCrash.h in Headers */,
				CB0AA158167EC4B5006EAB99 /* KSCrashAdvanced.h in Headers */,
				CB0AA103167EC460006EAB99 /* KSCrashReportWriter.h in Headers */,
				CB0AA139167EC480006EAB99 /* KSCrashReportFilter.h in Headers */,
				CB0AA13D167EC480006EAB99 /* KSCrashReportFilterAlert.h in Headers */,
				CB0AA13F167EC480006EAB99 /* KSCrashReportFilterAppleFmt.h in Headers */,
				CB0AA141167EC480006EAB99 /* KSCrashReportFilterBasic.h in Headers */,
				CB0AA143167EC485006EAB99 /* KSCrashReportFilterJSON.h in Headers */,
				CB0AA145167EC485006EAB99 /* KSCrashReportSinkConsole.h in Headers */,
				CB0AA11D167EC470006EAB99 /* KSJSONCodecObjC.h in Headers */,
				CB0AA0FE167EC460006EAB99 /* KSCrashC.h in Headers */,
				CB0AA0FF167EC460006EAB99 /* KSCrashContext.h in Headers */,
				CB0AA101167EC460006EAB99 /* KSCrashReport.h in Headers */,
				CB0AA102167EC460006EAB99 /* KSCrashReportFields.h in Headers */,
				CB0AA105167EC460006EAB99 /* KSCrashState.h in Headers */,
				CB0AA106167EC460006EAB99 /* KSSystemInfo.h in Headers */,
				CB0AA108167EC460006EAB99 /* KSSystemInfoC.h in Headers */,
				CB0AA10A167EC465006EAB99 /* KSCrashSentry.h in Headers */,
				CB0AA10B167EC465006EAB99 /* KSCrashSentry_Deadlock.h in Headers */,
				CB0AA10D167EC465006EAB99 /* KSCrashSentry_Private.h in Headers */,
				CB0AA10F167EC465006EAB99 /* KSCrashSentry_MachException.h in Headers */,
				CB0AA110167EC465006EAB99 /* KSCrashSentry_NSException.h in Headers */,
				CB0AA113167EC465006EAB99 /* KSCrashSentry_Signal.h in Headers */,
				CB0AA114167EC470006EAB99 /* ARCSafe_MemMgmt.h in Headers */,
				CB0AA115167EC470006EAB99 /* KSArchSpecific.h in Headers */,
				CB0AA116167EC470006EAB99 /* KSBacktrace_Private.h in Headers */,
				CB0AA118167EC470006EAB99 /* KSBacktrace.h in Headers */,
				CB0AA11A167EC470006EAB99 /* KSFileUtils.h in Headers */,
				CB0AA11C167EC470006EAB99 /* KSJSONCodec.h in Headers */,
				CB0AA11F167EC470006EAB99 /* KSLogger.h in Headers */,
				CB0AA125167EC470006EAB99 /* KSMach.h in Headers */,
				CB0AA127167EC470006EAB99 /* KSObjC.h in Headers */,
				CB0AA128167EC470006EAB99 /* KSSafeCollections.h in Headers */,
				CB0AA12B167EC470006EAB99 /* KSSignalInfo.h in Headers */,
				CB0AA12D167EC470006EAB99 /* KSString.h in Headers */,
				CB0AA12F167EC470006EAB99 /* KSSysCtl.h in Headers */,
				CB0AA130167EC470006EAB99 /* KSZombie.h in Headers */,
				CB0AA133167EC470006EAB99 /* RFC3339DateTool.h in Headers */,
				CB0AA135167EC477006EAB99 /* KSCrashDoctor.h in Headers */,
				CB0AA137167EC477006EAB99 /* KSCrashReportStore.h in Headers */,
				CB0AA149167EC4AD006EAB99 /* Container+DeepSearch.h in Headers */,
				CB0AA14B167EC4AD006EAB99 /* KSHTTPMultipartPostBody.h in Headers */,
				CB0AA14D167EC4AD006EAB99 /* KSHTTPRequestSender.h in Headers */,
				CB0AA14F167EC4AD006EAB99 /* KSReachabilityKSCrash.h in Headers */,
				CB0AA151167EC4AD006EAB99 /* KSVarArgs.h in Headers */,
				CB0AA152167EC4B1006EAB99 /* NSDictionary+Merge.h in Headers */,
				CB0AA154167EC4B1006EAB99 /* NSMutableData+AppendUTF8.h in Headers */,
				CB78E8B6169C934100C39B02 /* KSObjCApple.h in Headers */,
				CB78E8BB169C94DB00C39B02 /* KSMachApple.h in Headers */,
				CB5A5B3C16C6650E00DC1D2D /* NSError+SimpleConstructor.h in Headers */,
				CB5A5B4416C718C500DC1D2D /* KSCrashCallCompletion.h in Headers */,
				CB7C753F16CD5DA200227870 /* KSCrashInstallation+Private.h in Headers */,
				CB7C754416CD5F5F00227870 /* KSCrashInstallation.h in Headers */,
				CB1B377016D74F3C00FFFCEA /* KSCString.h in Headers */,
				CB1B378716D820AE00FFFCEA /* KSSingleton.h in Headers */,
				CBCED886175E565B00BF56F0 /* KSCrashSentry_User.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXHeadersBuildPhase section */

/* Begin PBXNativeTarget section */
		39DA35B31618432E009EB332 /* KSCrash */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 39DA35BF1618432E009EB332 /* Build configuration list for PBXNativeTarget "KSCrash" */;
			buildPhases = (
				39DA35AE1618432E009EB332 /* Sources */,
				39DA35AF1618432E009EB332 /* Frameworks */,
				39DA35B01618432E009EB332 /* Headers */,
				39DA35B11618432E009EB332 /* Resources */,
				39DA35B21618432E009EB332 /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = KSCrash;
			productName = KSCrash;
			productReference = 39DA35B41618432E009EB332 /* KSCrash.framework */;
			productType = "com.apple.product-type.bundle";
		};
		39DA35C516184338009EB332 /* KSCrashLib */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 39DA35E616184338009EB332 /* Build configuration list for PBXNativeTarget "KSCrashLib" */;
			buildPhases = (
				39DA35C216184338009EB332 /* Sources */,
				39DA35C316184338009EB332 /* Frameworks */,
				39DA841F1618CCEC001E7F79 /* Headers */,
				39DA35C416184338009EB332 /* CopyFiles */,
				CB775561169F40BD00EA90A5 /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = KSCrashLib;
			productName = KSCrashLib;
			productReference = 39DA35C616184338009EB332 /* libKSCrashLib.a */;
			productType = "com.apple.product-type.library.static";
		};
		39DA35D316184338009EB332 /* KSCrashTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 39DA35E916184338009EB332 /* Build configuration list for PBXNativeTarget "KSCrashTests" */;
			buildPhases = (
				39DA35CF16184338009EB332 /* Sources */,
				39DA35D016184338009EB332 /* Frameworks */,
				39DA35D116184338009EB332 /* Resources */,
				39DA35D216184338009EB332 /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
				39DA844E1618D2F5001E7F79 /* PBXTargetDependency */,
				39DA35DB16184338009EB332 /* PBXTargetDependency */,
			);
			name = KSCrashTests;
			productName = KSCrashLibTests;
			productReference = 39DA35D416184338009EB332 /* KSCrashTests.octest */;
			productType = "com.apple.product-type.bundle";
		};
		CB0AA0ED167EC43E006EAB99 /* KSCrashLite */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = CB0AA0FB167EC43E006EAB99 /* Build configuration list for PBXNativeTarget "KSCrashLite" */;
			buildPhases = (
				CB0AA0E8167EC43E006EAB99 /* Sources */,
				CB0AA0E9167EC43E006EAB99 /* Frameworks */,
				CB0AA0EA167EC43E006EAB99 /* Headers */,
				CB0AA0EB167EC43E006EAB99 /* Resources */,
				CB0AA0EC167EC43E006EAB99 /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = KSCrashLite;
			productName = KSCrashLite;
			productReference = CB0AA0EE167EC43E006EAB99 /* KSCrashLite.framework */;
			productType = "com.apple.product-type.bundle";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		39DA35941618430C009EB332 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 0460;
				ORGANIZATIONNAME = "Karl Stenerud";
			};
			buildConfigurationList = 39DA35971618430C009EB332 /* Build configuration list for PBXProject "KSCrash" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = 39DA35921618430C009EB332;
			productRefGroup = 39DA359E1618430C009EB332 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				39DA35B31618432E009EB332 /* KSCrash */,
				CB0AA0ED167EC43E006EAB99 /* KSCrashLite */,
				39DA35C516184338009EB332 /* KSCrashLib */,
				39DA35D316184338009EB332 /* KSCrashTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		39DA35B11618432E009EB332 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				39DA35BA1618432E009EB332 /* InfoPlist.strings in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		39DA35D116184338009EB332 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				39DA35E216184338009EB332 /* InfoPlist.strings in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		CB0AA0EB167EC43E006EAB99 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				CB0AA0F4167EC43E006EAB99 /* InfoPlist.strings in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		39DA35B21618432E009EB332 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /usr/bin/python;
			shellScript = "# TAG: BUILD SCRIPT (do not remove this comment)\n# Build script generated using https://github.com/kstenerud/iOS-Universal-Framework Mk 8 (beta 2012-06-16)\nimport logging\n\n\n##############################################################################\n#\n# Configuration\n#\n##############################################################################\n\n# Select which kind of framework to build.\n#\n# Note: Due to issues with Xcode's build process, if you select\n#       'embeddedframework', it will still show the regular framework\n#       (as a symlink) along side of the embedded framework. Be sure to\n#       instruct your users to copy/move the embedded framework in this case!\n#\n# If your framework contains resources such as images, nibs, momds, plists,\n# zipfiles and such, choose 'embeddedframework'.\n#\n# If your framework contains no resources, choose 'framework'.\n#\nconfig_framework_type = 'framework'\n#config_framework_type = 'embeddedframework'\n\n# Open the build directory in Finder when the universal framework is\n# successfully built.\n#\n# This value can be overridden by setting the UFW_OPEN_BUILD_DIR env variable\n# to True or False.\n#\n# Recommended setting: True\n#\nconfig_open_build_dir = True\n\n# If true, ensures that all public headers are stored in the framework under\n# the same directory hierarchy as they were in the source tree.\n#\n# Xcode by default places all headers at the same top level, but every other\n# build tool in the known universe preserves directory structure. For simple\n# libraries it doesn't really matter much, but for ports of existing software\n# packages or for bigger libraries, it makes sense to have more structure.\n#\n# The default is set to \"False\" since that's what most Xcode users are used to.\n#\n# Recommended setting: True for deep hierarchy projects, False otherwise.\n#\nconfig_deep_header_hierarchy = False\n\n# Specify where the top of the public header hierarchy is. This path is\n# relative to the project's dir (PROJECT_DIR). You can reference environment\n# variables using templating syntax (e.g. \"${TARGET_NAME}/Some/Subdir\")\n#\n# NOTE: Only used if config_deep_header_hierarchy is True.\n#\n# If this is set to None, the script will attempt to figure out for itself\n# where the top of the header hierarchy is by looking for common path prefixes\n# in the public header files. This process can fail if:\n# - You only have one public header file.\n# - Your source header files don't all have a common root.\n#\n# A common approach is to use \"${TARGET_NAME}\", working under the assumption\n# that all of your header files share the common root of a directory under\n# your project with the same name as your target (which is the Xcode default).\n#\n# Recommended setting: \"${TARGET_NAME}\"\n#\nconfig_deep_header_top = \"${TARGET_NAME}\"\n\n# Warn when \"DerivedData\" is detected in any of the header, library, or\n# framework search paths. In almost all cases, references to directories under\n# DerivedData are added as a result of an Xcode bug and must be manually\n# removed.\n#\n# Recommended setting: True\n#\nconfig_warn_derived_data = True\n\n# Warn if no headers were marked public in this framework.\n#\n# Recommended setting: True\n#\nconfig_warn_no_public_headers = True\n\n# Cause the build to fail if any warnings are issued.\n#\n# Recommended setting: True\n#\nconfig_fail_on_warnings = True\n\n# Minimum log level\n#\n# Recommended setting: logging.INFO\n#\nconfig_log_level = logging.INFO\n\n\n##############################################################################\n#\n# Don't touch anything below here unless you know what you're doing.\n#\n##############################################################################\n\nimport collections\nimport json\nimport os\nimport re\nimport shlex\nimport shutil\nimport string\nimport subprocess\nimport sys\nimport time\nimport traceback\n\n\n##############################################################################\n#\n# Globals\n#\n##############################################################################\n\nlog = logging.getLogger('UFW')\n\nissued_warnings = False\n\n\n##############################################################################\n#\n# Classes\n#\n##############################################################################\n\n# Allows the slave build to communicate with the master build.\n#\nclass BuildState:\n\n    def __init__(self):\n        self.reload()\n\n    def reset(self):\n        self.slave_platform = None\n        self.slave_architectures = []\n        self.slave_linked_archive_paths = []\n        self.slave_built_fw_path = None\n        self.slave_built_embedded_fw_path = None\n\n    def set_slave_properties(self, architectures,\n                             linked_archive_paths,\n                             built_fw_path,\n                             built_embedded_fw_path):\n        self.slave_platform = os.environ['PLATFORM_NAME']\n        self.slave_architectures = architectures\n        self.slave_linked_archive_paths = linked_archive_paths\n        self.slave_built_fw_path = built_fw_path\n        self.slave_built_embedded_fw_path = built_embedded_fw_path\n\n    def get_save_path(self):\n        return os.path.join(os.environ['PROJECT_TEMP_DIR'], \"ufw_build_state.json\")\n\n    def persist(self):\n        filename = self.get_save_path()\n        parent = os.path.dirname(filename)\n        if not os.path.isdir(parent):\n            os.makedirs(parent)\n        with open(filename, \"w\") as f:\n            f.write(json.dumps(self.__dict__))\n\n    def reload(self):\n        self.reset()\n        filename = self.get_save_path()\n        if os.path.exists(filename):\n            with open(filename, \"r\") as f:\n                new_dict = json.loads(f.read())\n                if new_dict is not None:\n                    self.__dict__ = dict(self.__dict__.items() + new_dict.items())\n\n\n# Holds information about the current project and build environment.\n#\nclass Project:\n\n    def __init__(self, filename):\n        sourcecode_types = ['sourcecode.c.c',\n                            'sourcecode.c.objc',\n                            'sourcecode.cpp.cpp',\n                            'sourcecode.cpp.objcpp',\n                            'sourcecode.asm.asm',\n                            'sourcecode.asm.llvm',\n                            'sourcecode.nasm']\n\n        self.build_state = BuildState()\n        self.project_data = self.load_from_file(filename)\n        self.target = filter(lambda x: x['name'] == os.environ['TARGET_NAME'], self.project_data['targets'])[0]\n        self.public_headers = self.get_build_phase_files('PBXHeadersBuildPhase', lambda x: x.get('settings', False) and x['settings'].get('ATTRIBUTES', False) and 'Public' in x['settings']['ATTRIBUTES'])\n        self.static_libraries = self.get_build_phase_files('PBXFrameworksBuildPhase', lambda x: x['fileRef']['fileType'] == 'archive.ar' and x['fileRef']['sourceTree'] not in ['DEVELOPER_DIR', 'SDKROOT'])\n        self.static_frameworks = self.get_build_phase_files('PBXFrameworksBuildPhase', lambda x: x['fileRef']['fileType'] == 'wrapper.framework' and x['fileRef']['sourceTree'] not in ['DEVELOPER_DIR', 'SDKROOT'])\n        self.compilable_sources = self.get_build_phase_files('PBXSourcesBuildPhase', lambda x: x['fileRef']['fileType'] in sourcecode_types)\n        self.header_paths = [os.path.join(*x['pathComponents']) for x in self.public_headers]\n\n        self.headers_dir = os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['CONTENTS_FOLDER_PATH'], 'Headers')\n        self.libtool_path = os.path.join(os.environ['DT_TOOLCHAIN_DIR'], 'usr', 'bin', 'libtool')\n        self.project_filename = os.path.join(os.environ['PROJECT_FILE_PATH'], \"project.pbxproj\")\n        self.local_exe_path = os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['EXECUTABLE_PATH'])\n        self.local_architectures = os.environ['ARCHS'].split(' ')\n        self.local_built_fw_path = os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['WRAPPER_NAME'])\n        self.local_built_embedded_fw_path = os.path.splitext(self.local_built_fw_path)[0] + \".embeddedframework\"\n        self.local_linked_archive_paths = [self.get_linked_ufw_archive_path(arch) for arch in self.local_architectures]\n        self.local_platform = os.environ['PLATFORM_NAME']\n        other_platforms = os.environ['SUPPORTED_PLATFORMS'].split(' ')\n        other_platforms.remove(self.local_platform)\n        self.other_platform = other_platforms[0]\n\n        sdk_name = os.environ['SDK_NAME']\n        if not sdk_name.startswith(self.local_platform):\n            raise Exception(\"%s didn't start with %s\" % (sdk_name, self.local_platform))\n        self.sdk_version = sdk_name[len(self.local_platform):]\n\n    # Load an Xcode project file.\n    #\n    def load_from_file(self, filename):\n        project_file = json.loads(subprocess.check_output([\"plutil\", \"-convert\", \"json\", \"-o\", \"-\", filename]))\n        all_objects = project_file['objects']\n        del project_file['objects']\n        for obj in all_objects.values():\n            self.fix_keys(obj)\n        self.unpack_objects(self.build_dereference_list(all_objects, None, None, project_file))\n        self.unpack_objects(self.build_dereference_list(all_objects, None, None, all_objects.values()))\n        project_data = project_file['rootObject']\n        self.build_full_paths(project_data, splitpath(os.environ['SOURCE_ROOT']))\n        return project_data\n\n    def is_key(self, obj):        \n        return isinstance(obj, basestring) and len(obj) == 24 and re.search('^[0-9a-fA-F]+$', obj) is not None\n    \n    def build_dereference_list(self, all_objects, parent, key, obj):\n        deref_list = []\n        if self.is_key(obj):\n            dereferenced = all_objects.get(obj, obj)\n            if dereferenced is not obj:\n                deref_list.append((parent, key, obj, dereferenced))\n        elif isinstance(obj, collections.Mapping):\n            for k, v in obj.iteritems():\n                deref_list += self.build_dereference_list(all_objects, obj, k, v)\n        elif isinstance(obj, collections.Iterable) and not isinstance(obj, basestring):\n            for item in obj:\n                deref_list += self.build_dereference_list(all_objects, obj, None, item)\n        return deref_list\n    \n    def unpack_objects(self, deref_list):\n        for parent, key, orig, obj in deref_list:\n            if key is None:\n                parent.remove(orig)\n                parent.append(obj)\n            else:\n                parent[key] = obj\n\n    # Store the full path, separated into components, to a node inside the node\n    # as \"pathComponents\". Also recurse into that node if it's a group.\n    #\n    def build_full_paths(self, node, base_path):\n        # Some nodes are relative to a different source tree, specified as an\n        # env variable.\n        if node.get('sourceTree', '<group>') != '<group>':\n            new_base_path = os.environ.get(node['sourceTree'], None)\n            if new_base_path:\n                base_path = splitpath(new_base_path)\n        # Add the current node's path, if any.\n        if node.get('path', False):\n            base_path = base_path + splitpath(node['path'])\n        node['pathComponents'] = base_path\n        # Recurse if this is a group.\n        if node['isa'] == 'PBXGroup':\n            for child in node['children']:\n                self.build_full_paths(child, base_path)\n        elif node['isa'] == 'PBXProject':\n            self.build_full_paths(node['mainGroup'], base_path)\n            self.build_full_paths(node['productRefGroup'], base_path)\n            for child in node['targets']:\n                self.build_full_paths(child, base_path)\n            projectRefs = node.get('projectReferences', None)\n            if projectRefs is not None:\n                for child in projectRefs[0].values():\n                    self.build_full_paths(child, base_path)\n\n    # Fix up any inconvenient keys.\n    #\n    def fix_keys(self, obj):\n        key_remappings = {'lastKnownFileType': 'fileType', 'explicitFileType': 'fileType'}\n        for key in list(set(key_remappings.keys()) & set(obj.keys())):\n            obj[key_remappings[key]] = obj[key]\n            del obj[key]\n\n    # Get the files from a build phase.\n    #\n    def get_build_phase_files(self, build_phase_name, filter_func):\n        build_phase = filter(lambda x: x['isa'] == build_phase_name, self.target['buildPhases'])[0]\n        build_files = filter(filter_func, build_phase['files'])\n        return [x['fileRef'] for x in build_files]\n\n    # Get the truncated paths of all headers that start with the specified\n    # relative path. Paths are read and returned as fully separated lists.\n    # e.g. ['Some', 'Path', 'To', 'A', 'Header'] with relative_path of\n    # ['Some', 'Path'] gets truncated to ['To', 'A', 'Header']\n    #\n    def movable_headers_relative_to(self, relative_path):\n        rel_path_length = len(relative_path)\n        result = filter(lambda path: len(path) >= rel_path_length and\n                                     path[:rel_path_length] == relative_path, self.header_paths)\n        return [path[rel_path_length:] for path in result]\n\n    # Get the full path to where a linkable archive (library or framework)\n    # is supposed to be.\n    #\n    def get_linked_archive_path(self, architecture):\n        return os.path.join(os.environ['OBJECT_FILE_DIR_%s' % os.environ['CURRENT_VARIANT']],\n                            architecture,\n                            os.environ['EXECUTABLE_NAME'])\n\n    # Get the full path to our custom linked archive of the project.\n    #\n    def get_linked_ufw_archive_path(self, architecture):\n        return self.get_linked_archive_path(architecture) + \".ufwbuild\"\n\n    # Get the full path to the executable of an archive.\n    #\n    def get_exe_path(self, node):\n        path = os.path.join(*node['pathComponents'])\n        if node['fileType'] == 'wrapper.framework':\n            # Frameworks are directories, so go one deeper\n            path = os.path.join(path, os.path.splitext(node['pathComponents'][-1])[0])\n        return path\n\n    # Get the path to the directory containing the archive.\n    #\n    def get_containing_path(self, node):\n        return os.path.join(*node['pathComponents'])\n    \n    def get_archive_search_paths(self):\n        log.info(\"Search paths = %s\" % set([self.get_containing_path(fw) for fw in self.static_frameworks] + [self.get_containing_path(fw) for fw in self.static_libraries]))\n        return set([self.get_containing_path(fw) for fw in self.static_frameworks] + [self.get_containing_path(fw) for fw in self.static_libraries])\n\n    # Command to link all objects of a single architecture.\n    #\n    def get_single_arch_link_command(self, architecture):\n        cmd = [self.libtool_path,\n               \"-static\",\n               \"-arch_only\", architecture,\n               \"-syslibroot\", os.environ['SDKROOT'],\n               \"-L%s\" % os.environ['TARGET_BUILD_DIR'],\n               \"-filelist\", os.environ['LINK_FILE_LIST_%s_%s' % (os.environ['CURRENT_VARIANT'], architecture)]]\n        if os.environ.get('OTHER_LDFLAGS', False):\n            cmd += [os.environ['OTHER_LDFLAGS']]\n        if os.environ.get('WARNING_LDFLAGS', False):\n            cmd += [os.environ['WARNING_LDFLAGS']]\n#        cmd += [\"-L%s\" % libpath for libpath in self.get_archive_search_paths()]\n        cmd += [self.get_exe_path(fw) for fw in self.static_frameworks]\n        cmd += [self.get_exe_path(lib) for lib in self.static_libraries]\n        cmd += [\"-o\", self.get_linked_ufw_archive_path(architecture)]\n        return cmd\n\n    # Command to link all local architectures for the current configuration\n    # into an archive. This reads all libraries + the UFW-built archives and\n    # overwrites the final product.\n    #\n    def get_local_archs_link_command(self):\n        cmd = [self.libtool_path,\n               \"-static\"]\n        cmd += self.local_linked_archive_paths\n        cmd += [self.get_exe_path(fw) for fw in self.static_frameworks]\n        cmd += [self.get_exe_path(lib) for lib in self.static_libraries]\n        cmd += [\"-o\", os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['EXECUTABLE_PATH'])]\n        return cmd\n\n    # Command to link all architectures into a universal archive.\n    # This reads all UFW-built archives and overwrites the final product.\n    #\n    def get_all_archs_link_command(self):\n        cmd = [self.libtool_path,\n               \"-static\"]\n        cmd += self.local_linked_archive_paths + self.build_state.slave_linked_archive_paths\n        cmd += [\"-o\", os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['EXECUTABLE_PATH'])]\n        return cmd\n\n    # Build up an environment for the slave process. This uses BUILD_ROOT\n    # and TEMP_ROOT to convert all environment variables to values suitable\n    # for the slave build environment so that xcodebuild doesn't try to build\n    # in the project directory under \"build\".\n    #\n    def get_slave_environment(self):\n        ignored = ['LD_MAP_FILE_PATH',\n        'HEADER_SEARCH_PATHS',\n        'LIBRARY_SEARCH_PATHS',\n        'FRAMEWORK_SEARCH_PATHS']\n        build_root = os.environ['BUILD_ROOT']\n        temp_root = os.environ['TEMP_ROOT']\n        newenv = {}\n        for key, value in os.environ.items():\n            if key not in ignored and not key.startswith('LINK_FILE_LIST_'):\n                if build_root in value or temp_root in value:\n                    newenv[key] = value.replace(self.local_platform, self.other_platform)\n        return newenv\n\n    # Command to invoke xcodebuild on the slave platform.\n    #\n    def get_slave_project_build_command(self):\n        cmd = [\"xcodebuild\",\n               \"-project\",\n               os.environ['PROJECT_FILE_PATH'],\n               \"-target\",\n               os.environ['TARGET_NAME'],\n               \"-configuration\",\n               os.environ['CONFIGURATION'],\n               \"-sdk\",\n               self.other_platform + self.sdk_version]\n        cmd += [\"%s=%s\" % (key, value) for key, value in self.get_slave_environment().items()]\n        cmd += [\"UFW_MASTER_PLATFORM=\" + os.environ['PLATFORM_NAME']]\n        cmd += [os.environ['ACTION']]\n        return cmd\n\n\n\n##############################################################################\n#\n# Utility Functions\n#\n##############################################################################\n\n# Split a path into a list of path components.\n#\ndef splitpath(path, maxdepth=20):\n     (head, tail) = os.path.split(path)\n     return splitpath(head, maxdepth - 1) + [tail] if maxdepth and head and head != path else [ head or tail ]\n\n# Remove all subdirectories under a path.\n#\ndef remove_subdirs(path, ignore_files):\n    if os.path.exists(path):\n        for filename in filter(lambda x: x not in ignore_files, os.listdir(path)):\n            fullpath = os.path.join(path, filename)\n            if os.path.isdir(fullpath):\n                log.info(\"Remove %s\" % fullpath)\n                shutil.rmtree(fullpath)\n\n# Make whatever parent paths are necessary for a path to exist.\n#\ndef ensure_path_exists(path):\n    if not os.path.isdir(path):\n        os.makedirs(path)\n\n# Make whatever parent paths are necessary for a path's parent to exist.\n#\ndef ensure_parent_exists(path):\n    parent = os.path.dirname(path)\n    if not os.path.isdir(parent):\n        os.makedirs(parent)\n\n# Remove a file or dir if it exists.\n#\ndef remove_path(path):\n    if os.path.exists(path):\n        if os.path.isdir(path):\n            shutil.rmtree(path)\n        else:\n            os.remove(path)\n\n# Move a file or dir, replacing the destination if it exists.\n#\ndef move_file(src, dst):\n    if src == dst or not os.path.isfile(src):\n        return\n    log.info(\"Move %s to %s\" % (src, dst))\n    ensure_parent_exists(dst)\n    remove_path(dst)\n    shutil.move(src, dst)\n\n# Copy a file or dir, replacing the destination if it exists already.\n#\ndef copy_overwrite(src, dst):\n    if src != dst:\n        remove_path(dst)\n        ensure_parent_exists(dst)\n        shutil.copytree(src, dst, symlinks=True)\n\n# Attempt to symlink link_path -> link_to.\n# link_to must be a path relative to link_path's parent and must exist.\n# If link_path already exists, do nothing.\n#\ndef attempt_symlink(link_path, link_to):\n    # Only allow linking to an existing file\n    os.stat(os.path.abspath(os.path.join(link_path, \"..\", link_to)))\n\n    # Only make the link if it hasn't already been made\n    if not os.path.exists(link_path):\n        log.info(\"Symlink %s -> %s\" % (link_path, link_to))\n        os.symlink(link_to, link_path)\n\n# Takes the last entry in an array-based path and returns a normal path\n# relative to base_path.\n#\ndef top_level_file_path(base_path, path_list):\n    return os.path.join(base_path, os.path.split(path_list[-1])[-1])\n\n# Takes all entries in an array-based path and returns a normal path\n# relative to base_path.\n#\ndef full_file_path(base_path, path_list):\n    return os.path.join(*([base_path] + path_list))\n\n# Print a command before executing it.\n# Also print out all output from the command to STDOUT.\n#\ndef print_and_call(cmd):\n    log.info(\"Cmd \" + \" \".join(cmd))\n    p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\n    result = p.communicate()[0]\n    if len(result) > 0:\n        log.info(result)\n    if p.returncode != 0:\n        raise subprocess.CalledProcessError(p.returncode, cmd)\n\n# Special print-and-call command for the slave build that strips out\n# xcodebuild's spammy list of environment variables.\n#\ndef print_and_call_slave_build(cmd, other_platform):\n    separator = '=== BUILD NATIVE TARGET '\n    p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\n    result = p.communicate()[0].split(separator)\n    if len(result) == 1:\n        result = result[0]\n    else:\n        result = separator + result[1]\n    log.info(\"Cmd \" + \" \".join(cmd) + \"\\n\" + result)\n    if p.returncode != 0:\n        raise subprocess.CalledProcessError(p.returncode, cmd)\n\n# Issue a warning and record that a warning has been issued.\n#\ndef issue_warning(msg, *args, **kwargs):\n    global issued_warnings\n    issued_warnings = True\n    log.warn(msg, *args, **kwargs)\n\n\n\n##############################################################################\n#\n# Main Application\n#\n##############################################################################\n\n# Check if we are running as master.\n#\ndef is_master():\n    return os.environ.get('UFW_MASTER_PLATFORM', os.environ['PLATFORM_NAME']) == os.environ['PLATFORM_NAME']\n\n# DerivedData should almost never appear in any framework, library, or header\n# search paths. However, Xcode will sometimes add them in, so we check to make\n# sure.\n#\ndef check_for_derived_data_in_search_paths(project):\n    search_path_keys = [\"FRAMEWORK_SEARCH_PATHS\", \"LIBRARY_SEARCH_PATHS\", \"HEADER_SEARCH_PATHS\"]\n    build_configs = project.target['buildConfigurationList']['buildConfigurations']\n    build_settings = filter(lambda x: x['name'] == os.environ['CONFIGURATION'], build_configs)[0]['buildSettings']\n    \n    found_something = False\n    for path_key in filter(lambda x: x in build_settings, search_path_keys):\n        path = build_settings[path_key]\n        if \"DerivedData\" in path:\n            found_something = True\n            log.warn(\"Derived data in %s\" % path)\n            issue_warning(\"'%s' contains reference to 'DerivedData'.\" % path_key)\n    if found_something:\n        log.warn(\"Check your build settings and remove any entries that contain paths inside the DerivedData folder.\")\n        log.warn(\"Otherwise you can disable this warning by changing 'config_warn_derived_data' in this script.\")\n\n# Link local architectures into their respective archives.\n#\ndef link_local_archs(project):\n    for arch in project.local_architectures:\n        print_and_call(project.get_single_arch_link_command(arch))\n\n# Link only the local architectures into the final product, not the slave\n# architectures. For iphoneos, this will be armv6, armv7. For simulator, this\n# will be i386.\n#\ndef link_combine_local_archs(project):\n    print_and_call(project.get_local_archs_link_command())\n\n# Link all architectures into the final product.\n#\ndef link_combine_all_archs(project):\n    print_and_call(project.get_all_archs_link_command())\n\n# Check if we should open the build directory after a successful build.\n#\ndef should_open_build_dir():\n    env_setting = os.environ.get('UFW_OPEN_BUILD_DIR', None)\n    if env_setting is not None:\n        return env_setting\n\n    return config_open_build_dir\n\n# Open the build dir in Finder.\n#\ndef open_build_dir():\n    print_and_call(['open', os.environ['TARGET_BUILD_DIR']])\n\n# Check if the build was started by selecting \"Archive\" under \"Product\" in\n# Xcode.\n#\ndef is_archive_build():\n    # ACTION is always 'build', but perhaps Apple will fix this someday?\n    archive_build = os.environ['ACTION'] == 'archive'\n\n    if not archive_build:\n        # This can be passed in as an env variable when building from command line.\n        archive_build = os.environ.get('UFW_ACTION', None) == 'archive'\n\n    build_dir = splitpath(os.environ['BUILD_DIR'])\n    if not archive_build:\n        # This partial path is used when you select \"archive\" from within Xcode.\n        archive_build = 'ArchiveIntermediates' in build_dir\n\n    # It only counts as a full archive build if this target is being built into\n    # its own build dir (not being built as a dependency of another target)\n    if archive_build:\n        archive_build = os.environ['TARGET_NAME'] in build_dir\n    \n    return archive_build\n\n# Xcode by default throws all public headers into the top level directory.\n# This function moves them to their expected deep hierarchy.\n#\ndef build_deep_header_hierarchy(project):\n    header_path_top = config_deep_header_top\n    if not header_path_top:\n        header_path_top = os.path.commonprefix(project.header_paths)\n    else:\n        header_path_top = splitpath(header_path_top)\n\n    built_headers_path = os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['PUBLIC_HEADERS_FOLDER_PATH'])\n    movable_headers = project.movable_headers_relative_to(header_path_top)\n\n    # Remove subdirs if they only contain files that have been rebuilt\n    ignore_headers = filter(lambda x: not os.path.isfile(top_level_file_path(built_headers_path, x)), movable_headers)\n    remove_subdirs(built_headers_path, [file[0] for file in ignore_headers])\n\n    # Move rebuilt headers into their proper subdirs\n    for header in movable_headers:\n        move_file(top_level_file_path(built_headers_path, header), full_file_path(built_headers_path, header))\n\n# Add all symlinks needed to make a full framework structure:\n#\n# MyFramework.framework\n# |-- MyFramework -> Versions/Current/MyFramework\n# |-- Headers -> Versions/Current/Headers\n# |-- Resources -> Versions/Current/Resources\n# `-- Versions\n#     |-- A\n#     |   |-- MyFramework\n#     |   |-- Headers\n#     |   |   `-- MyFramework.h\n#     |   `-- Resources\n#     |       |-- Info.plist\n#     |       |-- MyViewController.nib\n#     |       `-- en.lproj\n#     |           `-- InfoPlist.strings\n#     `-- Current -> A\n#\ndef add_symlinks_to_framework(project):\n    base_dir = project.local_built_fw_path\n    attempt_symlink(os.path.join(base_dir, \"Versions\", \"Current\"), os.environ['FRAMEWORK_VERSION'])\n    if os.path.isdir(os.path.join(base_dir, \"Versions\", \"Current\", \"Headers\")):\n        attempt_symlink(os.path.join(base_dir, \"Headers\"), os.path.join(\"Versions\", \"Current\", \"Headers\"))\n    if os.path.isdir(os.path.join(base_dir, \"Versions\", \"Current\", \"Resources\")):\n        attempt_symlink(os.path.join(base_dir, \"Resources\"), os.path.join(\"Versions\", \"Current\", \"Resources\"))\n    attempt_symlink(os.path.join(base_dir, os.environ['EXECUTABLE_NAME']), os.path.join(\"Versions\", \"Current\", os.environ['EXECUTABLE_NAME']))\n\n# Build an embedded framework structure.\n# An embedded framework contains the actual framework, plus a \"Resources\"\n# directory containing symlinks to all resources found in the actual framework,\n# with the exception of \"Info.plist\" and anything ending in \".lproj\":\n#\n# MyFramework.embeddedframework\n# |-- MyFramework.framework\n# |   |-- MyFramework -> Versions/Current/MyFramework\n# |   |-- Headers -> Versions/Current/Headers\n# |   |-- Resources -> Versions/Current/Resources\n# |   `-- Versions\n# |       |-- A\n# |       |   |-- MyFramework\n# |       |   |-- Headers\n# |       |   |   `-- MyFramework.h\n# |       |   `-- Resources\n# |       |       |-- Info.plist\n# |       |       |-- MyViewController.nib\n# |       |       `-- en.lproj\n# |       |           `-- InfoPlist.strings\n# |       `-- Current -> A\n# `-- Resources\n#     `-- MyViewController.nib -> ../MyFramework.framework/Resources/MyViewController.nib\n#\ndef build_embedded_framework(project):\n    fw_path = project.local_built_fw_path\n    embedded_path = project.local_built_embedded_fw_path\n    fw_name = os.environ['WRAPPER_NAME']\n    remove_path(embedded_path)\n    ensure_path_exists(embedded_path)\n    copy_overwrite(fw_path, os.path.join(embedded_path, fw_name))\n    ensure_path_exists(os.path.join(embedded_path, \"Resources\"))\n    symlink_source = os.path.join(\"..\", fw_name, \"Resources\")\n    symlink_path = os.path.join(embedded_path, \"Resources\")\n    if os.path.isdir(os.path.join(fw_path, \"Resources\")):\n        for file in filter(lambda x: x != \"Info.plist\" and not x.endswith(\".lproj\"), os.listdir(os.path.join(fw_path, \"Resources\"))):\n            attempt_symlink(os.path.join(symlink_path, file), os.path.join(symlink_source, file))\n\n    # Remove the normal framework and replace it with a symlink to the copy\n    # in the embedded framework. This is needed because Xcode runs its strip\n    # phase AFTER the script runs.\n    embed_fw_wrapper = os.path.splitext(os.environ['WRAPPER_NAME'])[0] + \".embeddedframework\"\n    remove_path(fw_path)\n    attempt_symlink(fw_path, os.path.join(embed_fw_wrapper, os.environ['WRAPPER_NAME']))\n\n\n# Run the build process in slave mode to build the other configuration\n# (device/simulator).\n#\ndef run_slave_build(project):\n    print_and_call_slave_build(project.get_slave_project_build_command(), project.other_platform)\n\n# Run the build process.\n#\ndef run_build():\n    project = Project(os.path.join(os.environ['PROJECT_FILE_PATH'], \"project.pbxproj\"))\n\n    # Issue warnings only if we're master.\n    if is_master():\n        if len(project.compilable_sources) == 0:\n            raise Exception(\"No compilable sources found. Please add at least one source file to build target %s.\" % os.environ['TARGET_NAME'])\n\n        if config_warn_derived_data:\n            check_for_derived_data_in_search_paths(project)\n        if config_warn_no_public_headers and len(project.public_headers) == 0:\n            issue_warning('No headers in build target %s were marked public. Please move at least one header to \"Public\" in the \"Copy Headers\" build phase.' % os.environ['TARGET_NAME'])\n\n    # Only build slave if this is an archive build.\n    if is_archive_build():\n        if is_master():\n            log.debug(\"Building as MASTER\")\n            # The slave-side linker tries to include this (nonexistent) path as\n            # a library path.\n            ensure_path_exists(project.get_slave_environment()['BUILT_PRODUCTS_DIR'])\n            project.build_state.persist()\n            run_slave_build(project)\n            project.build_state.reload()\n        else:\n            log.debug(\"Building as SLAVE\")\n            project.build_state.reload()\n            project.build_state.set_slave_properties(project.local_architectures,\n                                                     project.local_linked_archive_paths,\n                                                     project.local_built_fw_path,\n                                                     project.local_built_embedded_fw_path)\n            project.build_state.persist()\n\n    link_local_archs(project)\n    \n    # Only do a universal binary when building an archive.\n    if is_archive_build() and is_master():\n        link_combine_all_archs(project)\n    else:\n        link_combine_local_archs(project)\n\n    if config_deep_header_hierarchy:\n        build_deep_header_hierarchy(project)\n\n    add_symlinks_to_framework(project)\n    \n    if is_master():\n        if config_framework_type == 'embeddedframework':\n            build_embedded_framework(project)\n        elif config_framework_type != 'framework':\n            raise Exception(\"%s: Unknown framework type for config_framework_type\" % config_framework_type)\n\n\nif __name__ == \"__main__\":\n    log_handler = logging.StreamHandler()\n    log_handler.setFormatter(logging.Formatter(\"%(name)s (\" + os.environ['PLATFORM_NAME'] + \"): %(levelname)s: %(message)s\"))\n    log.addHandler(log_handler)\n    log.setLevel(config_log_level)\n\n    error_code = 0\n    prefix = \"M\" if is_master() else \"S\"\n    log_handler.setFormatter(logging.Formatter(\"%(name)s (\" + prefix + \" \" + os.environ['PLATFORM_NAME'] + \"): %(levelname)s: %(message)s\"))\n\n    log.debug(\"Begin build process\")\n\n    if config_deep_header_top:\n        config_deep_header_top = string.Template(config_deep_header_top).substitute(os.environ)\n\n    try:\n        run_build()\n        if issued_warnings:\n            if config_fail_on_warnings:\n                error_code = 1\n            log.warn(\"Build completed with warnings\")\n        else:\n            log.info(\"Build completed\")\n        if not is_archive_build():\n            log.info(\"Note: This is *NOT* a universal framework build. To build as a universal framework, do an archive build.\")\n            log.info(\"To do an archive build from command line, use \\\"xcodebuild -configuration Release UFW_ACTION=archive clean build\\\"\")\n    except Exception:\n        traceback.print_exc(file=sys.stdout)\n        error_code = 1\n        log.error(\"Build failed\")\n    finally:\n        if error_code == 0 and is_archive_build() and is_master():\n            log.info(\"Built framework is in \" + os.environ['TARGET_BUILD_DIR'])\n            if should_open_build_dir():\n                open_build_dir()\n        sys.exit(error_code)\n";
		};
		39DA35D216184338009EB332 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "# Run the unit tests in this test bundle.\n\"${SYSTEM_DEVELOPER_DIR}/Tools/RunUnitTests\"\n";
		};
		CB0AA0EC167EC43E006EAB99 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /usr/bin/python;
			shellScript = "# TAG: BUILD SCRIPT (do not remove this comment)\n# Build script generated using https://github.com/kstenerud/iOS-Universal-Framework Mk 8 (beta 2012-06-16)\nimport logging\n\n\n##############################################################################\n#\n# Configuration\n#\n##############################################################################\n\n# Select which kind of framework to build.\n#\n# Note: Due to issues with Xcode's build process, if you select\n#       'embeddedframework', it will still show the regular framework\n#       (as a symlink) along side of the embedded framework. Be sure to\n#       instruct your users to copy/move the embedded framework in this case!\n#\n# If your framework contains resources such as images, nibs, momds, plists,\n# zipfiles and such, choose 'embeddedframework'.\n#\n# If your framework contains no resources, choose 'framework'.\n#\nconfig_framework_type = 'framework'\n#config_framework_type = 'embeddedframework'\n\n# Open the build directory in Finder when the universal framework is\n# successfully built.\n#\n# This value can be overridden by setting the UFW_OPEN_BUILD_DIR env variable\n# to True or False.\n#\n# Recommended setting: True\n#\nconfig_open_build_dir = True\n\n# If true, ensures that all public headers are stored in the framework under\n# the same directory hierarchy as they were in the source tree.\n#\n# Xcode by default places all headers at the same top level, but every other\n# build tool in the known universe preserves directory structure. For simple\n# libraries it doesn't really matter much, but for ports of existing software\n# packages or for bigger libraries, it makes sense to have more structure.\n#\n# The default is set to \"False\" since that's what most Xcode users are used to.\n#\n# Recommended setting: True for deep hierarchy projects, False otherwise.\n#\nconfig_deep_header_hierarchy = False\n\n# Specify where the top of the public header hierarchy is. This path is\n# relative to the project's dir (PROJECT_DIR). You can reference environment\n# variables using templating syntax (e.g. \"${TARGET_NAME}/Some/Subdir\")\n#\n# NOTE: Only used if config_deep_header_hierarchy is True.\n#\n# If this is set to None, the script will attempt to figure out for itself\n# where the top of the header hierarchy is by looking for common path prefixes\n# in the public header files. This process can fail if:\n# - You only have one public header file.\n# - Your source header files don't all have a common root.\n#\n# A common approach is to use \"${TARGET_NAME}\", working under the assumption\n# that all of your header files share the common root of a directory under\n# your project with the same name as your target (which is the Xcode default).\n#\n# Recommended setting: \"${TARGET_NAME}\"\n#\nconfig_deep_header_top = \"${TARGET_NAME}\"\n\n# Warn when \"DerivedData\" is detected in any of the header, library, or\n# framework search paths. In almost all cases, references to directories under\n# DerivedData are added as a result of an Xcode bug and must be manually\n# removed.\n#\n# Recommended setting: True\n#\nconfig_warn_derived_data = True\n\n# Warn if no headers were marked public in this framework.\n#\n# Recommended setting: True\n#\nconfig_warn_no_public_headers = True\n\n# Cause the build to fail if any warnings are issued.\n#\n# Recommended setting: True\n#\nconfig_fail_on_warnings = True\n\n# Minimum log level\n#\n# Recommended setting: logging.INFO\n#\nconfig_log_level = logging.INFO\n\n\n##############################################################################\n#\n# Don't touch anything below here unless you know what you're doing.\n#\n##############################################################################\n\nimport collections\nimport json\nimport os\nimport re\nimport shlex\nimport shutil\nimport string\nimport subprocess\nimport sys\nimport time\nimport traceback\n\n\n##############################################################################\n#\n# Globals\n#\n##############################################################################\n\nlog = logging.getLogger('UFW')\n\nissued_warnings = False\n\n\n##############################################################################\n#\n# Classes\n#\n##############################################################################\n\n# Allows the slave build to communicate with the master build.\n#\nclass BuildState:\n\n    def __init__(self):\n        self.reload()\n\n    def reset(self):\n        self.slave_platform = None\n        self.slave_architectures = []\n        self.slave_linked_archive_paths = []\n        self.slave_built_fw_path = None\n        self.slave_built_embedded_fw_path = None\n\n    def set_slave_properties(self, architectures,\n                             linked_archive_paths,\n                             built_fw_path,\n                             built_embedded_fw_path):\n        self.slave_platform = os.environ['PLATFORM_NAME']\n        self.slave_architectures = architectures\n        self.slave_linked_archive_paths = linked_archive_paths\n        self.slave_built_fw_path = built_fw_path\n        self.slave_built_embedded_fw_path = built_embedded_fw_path\n\n    def get_save_path(self):\n        return os.path.join(os.environ['PROJECT_TEMP_DIR'], \"ufw_build_state.json\")\n\n    def persist(self):\n        filename = self.get_save_path()\n        parent = os.path.dirname(filename)\n        if not os.path.isdir(parent):\n            os.makedirs(parent)\n        with open(filename, \"w\") as f:\n            f.write(json.dumps(self.__dict__))\n\n    def reload(self):\n        self.reset()\n        filename = self.get_save_path()\n        if os.path.exists(filename):\n            with open(filename, \"r\") as f:\n                new_dict = json.loads(f.read())\n                if new_dict is not None:\n                    self.__dict__ = dict(self.__dict__.items() + new_dict.items())\n\n\n# Holds information about the current project and build environment.\n#\nclass Project:\n\n    def __init__(self, filename):\n        sourcecode_types = ['sourcecode.c.c',\n                            'sourcecode.c.objc',\n                            'sourcecode.cpp.cpp',\n                            'sourcecode.cpp.objcpp',\n                            'sourcecode.asm.asm',\n                            'sourcecode.asm.llvm',\n                            'sourcecode.nasm']\n\n        self.build_state = BuildState()\n        self.project_data = self.load_from_file(filename)\n        self.target = filter(lambda x: x['name'] == os.environ['TARGET_NAME'], self.project_data['targets'])[0]\n        self.public_headers = self.get_build_phase_files('PBXHeadersBuildPhase', lambda x: x.get('settings', False) and x['settings'].get('ATTRIBUTES', False) and 'Public' in x['settings']['ATTRIBUTES'])\n        self.static_libraries = self.get_build_phase_files('PBXFrameworksBuildPhase', lambda x: x['fileRef']['fileType'] == 'archive.ar' and x['fileRef']['sourceTree'] not in ['DEVELOPER_DIR', 'SDKROOT'])\n        self.static_frameworks = self.get_build_phase_files('PBXFrameworksBuildPhase', lambda x: x['fileRef']['fileType'] == 'wrapper.framework' and x['fileRef']['sourceTree'] not in ['DEVELOPER_DIR', 'SDKROOT'])\n        self.compilable_sources = self.get_build_phase_files('PBXSourcesBuildPhase', lambda x: x['fileRef']['fileType'] in sourcecode_types)\n        self.header_paths = [os.path.join(*x['pathComponents']) for x in self.public_headers]\n\n        self.headers_dir = os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['CONTENTS_FOLDER_PATH'], 'Headers')\n        self.libtool_path = os.path.join(os.environ['DT_TOOLCHAIN_DIR'], 'usr', 'bin', 'libtool')\n        self.project_filename = os.path.join(os.environ['PROJECT_FILE_PATH'], \"project.pbxproj\")\n        self.local_exe_path = os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['EXECUTABLE_PATH'])\n        self.local_architectures = os.environ['ARCHS'].split(' ')\n        self.local_built_fw_path = os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['WRAPPER_NAME'])\n        self.local_built_embedded_fw_path = os.path.splitext(self.local_built_fw_path)[0] + \".embeddedframework\"\n        self.local_linked_archive_paths = [self.get_linked_ufw_archive_path(arch) for arch in self.local_architectures]\n        self.local_platform = os.environ['PLATFORM_NAME']\n        other_platforms = os.environ['SUPPORTED_PLATFORMS'].split(' ')\n        other_platforms.remove(self.local_platform)\n        self.other_platform = other_platforms[0]\n\n        sdk_name = os.environ['SDK_NAME']\n        if not sdk_name.startswith(self.local_platform):\n            raise Exception(\"%s didn't start with %s\" % (sdk_name, self.local_platform))\n        self.sdk_version = sdk_name[len(self.local_platform):]\n\n    # Load an Xcode project file.\n    #\n    def load_from_file(self, filename):\n        project_file = json.loads(subprocess.check_output([\"plutil\", \"-convert\", \"json\", \"-o\", \"-\", filename]))\n        all_objects = project_file['objects']\n        del project_file['objects']\n        for obj in all_objects.values():\n            self.fix_keys(obj)\n        self.unpack_objects(self.build_dereference_list(all_objects, None, None, project_file))\n        self.unpack_objects(self.build_dereference_list(all_objects, None, None, all_objects.values()))\n        project_data = project_file['rootObject']\n        self.build_full_paths(project_data, splitpath(os.environ['SOURCE_ROOT']))\n        return project_data\n\n    def is_key(self, obj):        \n        return isinstance(obj, basestring) and len(obj) == 24 and re.search('^[0-9a-fA-F]+$', obj) is not None\n    \n    def build_dereference_list(self, all_objects, parent, key, obj):\n        deref_list = []\n        if self.is_key(obj):\n            dereferenced = all_objects.get(obj, obj)\n            if dereferenced is not obj:\n                deref_list.append((parent, key, obj, dereferenced))\n        elif isinstance(obj, collections.Mapping):\n            for k, v in obj.iteritems():\n                deref_list += self.build_dereference_list(all_objects, obj, k, v)\n        elif isinstance(obj, collections.Iterable) and not isinstance(obj, basestring):\n            for item in obj:\n                deref_list += self.build_dereference_list(all_objects, obj, None, item)\n        return deref_list\n    \n    def unpack_objects(self, deref_list):\n        for parent, key, orig, obj in deref_list:\n            if key is None:\n                parent.remove(orig)\n                parent.append(obj)\n            else:\n                parent[key] = obj\n\n    # Store the full path, separated into components, to a node inside the node\n    # as \"pathComponents\". Also recurse into that node if it's a group.\n    #\n    def build_full_paths(self, node, base_path):\n        # Some nodes are relative to a different source tree, specified as an\n        # env variable.\n        if node.get('sourceTree', '<group>') != '<group>':\n            new_base_path = os.environ.get(node['sourceTree'], None)\n            if new_base_path:\n                base_path = splitpath(new_base_path)\n        # Add the current node's path, if any.\n        if node.get('path', False):\n            base_path = base_path + splitpath(node['path'])\n        node['pathComponents'] = base_path\n        # Recurse if this is a group.\n        if node['isa'] == 'PBXGroup':\n            for child in node['children']:\n                self.build_full_paths(child, base_path)\n        elif node['isa'] == 'PBXProject':\n            self.build_full_paths(node['mainGroup'], base_path)\n            self.build_full_paths(node['productRefGroup'], base_path)\n            for child in node['targets']:\n                self.build_full_paths(child, base_path)\n            projectRefs = node.get('projectReferences', None)\n            if projectRefs is not None:\n                for child in projectRefs[0].values():\n                    self.build_full_paths(child, base_path)\n\n    # Fix up any inconvenient keys.\n    #\n    def fix_keys(self, obj):\n        key_remappings = {'lastKnownFileType': 'fileType', 'explicitFileType': 'fileType'}\n        for key in list(set(key_remappings.keys()) & set(obj.keys())):\n            obj[key_remappings[key]] = obj[key]\n            del obj[key]\n\n    # Get the files from a build phase.\n    #\n    def get_build_phase_files(self, build_phase_name, filter_func):\n        build_phase = filter(lambda x: x['isa'] == build_phase_name, self.target['buildPhases'])[0]\n        build_files = filter(filter_func, build_phase['files'])\n        return [x['fileRef'] for x in build_files]\n\n    # Get the truncated paths of all headers that start with the specified\n    # relative path. Paths are read and returned as fully separated lists.\n    # e.g. ['Some', 'Path', 'To', 'A', 'Header'] with relative_path of\n    # ['Some', 'Path'] gets truncated to ['To', 'A', 'Header']\n    #\n    def movable_headers_relative_to(self, relative_path):\n        rel_path_length = len(relative_path)\n        result = filter(lambda path: len(path) >= rel_path_length and\n                                     path[:rel_path_length] == relative_path, self.header_paths)\n        return [path[rel_path_length:] for path in result]\n\n    # Get the full path to where a linkable archive (library or framework)\n    # is supposed to be.\n    #\n    def get_linked_archive_path(self, architecture):\n        return os.path.join(os.environ['OBJECT_FILE_DIR_%s' % os.environ['CURRENT_VARIANT']],\n                            architecture,\n                            os.environ['EXECUTABLE_NAME'])\n\n    # Get the full path to our custom linked archive of the project.\n    #\n    def get_linked_ufw_archive_path(self, architecture):\n        return self.get_linked_archive_path(architecture) + \".ufwbuild\"\n\n    # Get the full path to the executable of an archive.\n    #\n    def get_exe_path(self, node):\n        path = os.path.join(*node['pathComponents'])\n        if node['fileType'] == 'wrapper.framework':\n            # Frameworks are directories, so go one deeper\n            path = os.path.join(path, os.path.splitext(node['pathComponents'][-1])[0])\n        return path\n\n    # Get the path to the directory containing the archive.\n    #\n    def get_containing_path(self, node):\n        return os.path.join(*node['pathComponents'])\n    \n    def get_archive_search_paths(self):\n        log.info(\"Search paths = %s\" % set([self.get_containing_path(fw) for fw in self.static_frameworks] + [self.get_containing_path(fw) for fw in self.static_libraries]))\n        return set([self.get_containing_path(fw) for fw in self.static_frameworks] + [self.get_containing_path(fw) for fw in self.static_libraries])\n\n    # Command to link all objects of a single architecture.\n    #\n    def get_single_arch_link_command(self, architecture):\n        cmd = [self.libtool_path,\n               \"-static\",\n               \"-arch_only\", architecture,\n               \"-syslibroot\", os.environ['SDKROOT'],\n               \"-L%s\" % os.environ['TARGET_BUILD_DIR'],\n               \"-filelist\", os.environ['LINK_FILE_LIST_%s_%s' % (os.environ['CURRENT_VARIANT'], architecture)]]\n        if os.environ.get('OTHER_LDFLAGS', False):\n            cmd += [os.environ['OTHER_LDFLAGS']]\n        if os.environ.get('WARNING_LDFLAGS', False):\n            cmd += [os.environ['WARNING_LDFLAGS']]\n#        cmd += [\"-L%s\" % libpath for libpath in self.get_archive_search_paths()]\n        cmd += [self.get_exe_path(fw) for fw in self.static_frameworks]\n        cmd += [self.get_exe_path(lib) for lib in self.static_libraries]\n        cmd += [\"-o\", self.get_linked_ufw_archive_path(architecture)]\n        return cmd\n\n    # Command to link all local architectures for the current configuration\n    # into an archive. This reads all libraries + the UFW-built archives and\n    # overwrites the final product.\n    #\n    def get_local_archs_link_command(self):\n        cmd = [self.libtool_path,\n               \"-static\"]\n        cmd += self.local_linked_archive_paths\n        cmd += [self.get_exe_path(fw) for fw in self.static_frameworks]\n        cmd += [self.get_exe_path(lib) for lib in self.static_libraries]\n        cmd += [\"-o\", os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['EXECUTABLE_PATH'])]\n        return cmd\n\n    # Command to link all architectures into a universal archive.\n    # This reads all UFW-built archives and overwrites the final product.\n    #\n    def get_all_archs_link_command(self):\n        cmd = [self.libtool_path,\n               \"-static\"]\n        cmd += self.local_linked_archive_paths + self.build_state.slave_linked_archive_paths\n        cmd += [\"-o\", os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['EXECUTABLE_PATH'])]\n        return cmd\n\n    # Build up an environment for the slave process. This uses BUILD_ROOT\n    # and TEMP_ROOT to convert all environment variables to values suitable\n    # for the slave build environment so that xcodebuild doesn't try to build\n    # in the project directory under \"build\".\n    #\n    def get_slave_environment(self):\n        ignored = ['LD_MAP_FILE_PATH',\n        'HEADER_SEARCH_PATHS',\n        'LIBRARY_SEARCH_PATHS',\n        'FRAMEWORK_SEARCH_PATHS']\n        build_root = os.environ['BUILD_ROOT']\n        temp_root = os.environ['TEMP_ROOT']\n        newenv = {}\n        for key, value in os.environ.items():\n            if key not in ignored and not key.startswith('LINK_FILE_LIST_'):\n                if build_root in value or temp_root in value:\n                    newenv[key] = value.replace(self.local_platform, self.other_platform)\n        return newenv\n\n    # Command to invoke xcodebuild on the slave platform.\n    #\n    def get_slave_project_build_command(self):\n        cmd = [\"xcodebuild\",\n               \"-project\",\n               os.environ['PROJECT_FILE_PATH'],\n               \"-target\",\n               os.environ['TARGET_NAME'],\n               \"-configuration\",\n               os.environ['CONFIGURATION'],\n               \"-sdk\",\n               self.other_platform + self.sdk_version]\n        cmd += [\"%s=%s\" % (key, value) for key, value in self.get_slave_environment().items()]\n        cmd += [\"UFW_MASTER_PLATFORM=\" + os.environ['PLATFORM_NAME']]\n        cmd += [os.environ['ACTION']]\n        return cmd\n\n\n\n##############################################################################\n#\n# Utility Functions\n#\n##############################################################################\n\n# Split a path into a list of path components.\n#\ndef splitpath(path, maxdepth=20):\n     (head, tail) = os.path.split(path)\n     return splitpath(head, maxdepth - 1) + [tail] if maxdepth and head and head != path else [ head or tail ]\n\n# Remove all subdirectories under a path.\n#\ndef remove_subdirs(path, ignore_files):\n    if os.path.exists(path):\n        for filename in filter(lambda x: x not in ignore_files, os.listdir(path)):\n            fullpath = os.path.join(path, filename)\n            if os.path.isdir(fullpath):\n                log.info(\"Remove %s\" % fullpath)\n                shutil.rmtree(fullpath)\n\n# Make whatever parent paths are necessary for a path to exist.\n#\ndef ensure_path_exists(path):\n    if not os.path.isdir(path):\n        os.makedirs(path)\n\n# Make whatever parent paths are necessary for a path's parent to exist.\n#\ndef ensure_parent_exists(path):\n    parent = os.path.dirname(path)\n    if not os.path.isdir(parent):\n        os.makedirs(parent)\n\n# Remove a file or dir if it exists.\n#\ndef remove_path(path):\n    if os.path.exists(path):\n        if os.path.isdir(path):\n            shutil.rmtree(path)\n        else:\n            os.remove(path)\n\n# Move a file or dir, replacing the destination if it exists.\n#\ndef move_file(src, dst):\n    if src == dst or not os.path.isfile(src):\n        return\n    log.info(\"Move %s to %s\" % (src, dst))\n    ensure_parent_exists(dst)\n    remove_path(dst)\n    shutil.move(src, dst)\n\n# Copy a file or dir, replacing the destination if it exists already.\n#\ndef copy_overwrite(src, dst):\n    if src != dst:\n        remove_path(dst)\n        ensure_parent_exists(dst)\n        shutil.copytree(src, dst, symlinks=True)\n\n# Attempt to symlink link_path -> link_to.\n# link_to must be a path relative to link_path's parent and must exist.\n# If link_path already exists, do nothing.\n#\ndef attempt_symlink(link_path, link_to):\n    # Only allow linking to an existing file\n    os.stat(os.path.abspath(os.path.join(link_path, \"..\", link_to)))\n\n    # Only make the link if it hasn't already been made\n    if not os.path.exists(link_path):\n        log.info(\"Symlink %s -> %s\" % (link_path, link_to))\n        os.symlink(link_to, link_path)\n\n# Takes the last entry in an array-based path and returns a normal path\n# relative to base_path.\n#\ndef top_level_file_path(base_path, path_list):\n    return os.path.join(base_path, os.path.split(path_list[-1])[-1])\n\n# Takes all entries in an array-based path and returns a normal path\n# relative to base_path.\n#\ndef full_file_path(base_path, path_list):\n    return os.path.join(*([base_path] + path_list))\n\n# Print a command before executing it.\n# Also print out all output from the command to STDOUT.\n#\ndef print_and_call(cmd):\n    log.info(\"Cmd \" + \" \".join(cmd))\n    p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\n    result = p.communicate()[0]\n    if len(result) > 0:\n        log.info(result)\n    if p.returncode != 0:\n        raise subprocess.CalledProcessError(p.returncode, cmd)\n\n# Special print-and-call command for the slave build that strips out\n# xcodebuild's spammy list of environment variables.\n#\ndef print_and_call_slave_build(cmd, other_platform):\n    separator = '=== BUILD NATIVE TARGET '\n    p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\n    result = p.communicate()[0].split(separator)\n    if len(result) == 1:\n        result = result[0]\n    else:\n        result = separator + result[1]\n    log.info(\"Cmd \" + \" \".join(cmd) + \"\\n\" + result)\n    if p.returncode != 0:\n        raise subprocess.CalledProcessError(p.returncode, cmd)\n\n# Issue a warning and record that a warning has been issued.\n#\ndef issue_warning(msg, *args, **kwargs):\n    global issued_warnings\n    issued_warnings = True\n    log.warn(msg, *args, **kwargs)\n\n\n\n##############################################################################\n#\n# Main Application\n#\n##############################################################################\n\n# Check if we are running as master.\n#\ndef is_master():\n    return os.environ.get('UFW_MASTER_PLATFORM', os.environ['PLATFORM_NAME']) == os.environ['PLATFORM_NAME']\n\n# DerivedData should almost never appear in any framework, library, or header\n# search paths. However, Xcode will sometimes add them in, so we check to make\n# sure.\n#\ndef check_for_derived_data_in_search_paths(project):\n    search_path_keys = [\"FRAMEWORK_SEARCH_PATHS\", \"LIBRARY_SEARCH_PATHS\", \"HEADER_SEARCH_PATHS\"]\n    build_configs = project.target['buildConfigurationList']['buildConfigurations']\n    build_settings = filter(lambda x: x['name'] == os.environ['CONFIGURATION'], build_configs)[0]['buildSettings']\n    \n    found_something = False\n    for path_key in filter(lambda x: x in build_settings, search_path_keys):\n        path = build_settings[path_key]\n        if \"DerivedData\" in path:\n            found_something = True\n            log.warn(\"Derived data in %s\" % path)\n            issue_warning(\"'%s' contains reference to 'DerivedData'.\" % path_key)\n    if found_something:\n        log.warn(\"Check your build settings and remove any entries that contain paths inside the DerivedData folder.\")\n        log.warn(\"Otherwise you can disable this warning by changing 'config_warn_derived_data' in this script.\")\n\n# Link local architectures into their respective archives.\n#\ndef link_local_archs(project):\n    for arch in project.local_architectures:\n        print_and_call(project.get_single_arch_link_command(arch))\n\n# Link only the local architectures into the final product, not the slave\n# architectures. For iphoneos, this will be armv6, armv7. For simulator, this\n# will be i386.\n#\ndef link_combine_local_archs(project):\n    print_and_call(project.get_local_archs_link_command())\n\n# Link all architectures into the final product.\n#\ndef link_combine_all_archs(project):\n    print_and_call(project.get_all_archs_link_command())\n\n# Check if we should open the build directory after a successful build.\n#\ndef should_open_build_dir():\n    env_setting = os.environ.get('UFW_OPEN_BUILD_DIR', None)\n    if env_setting is not None:\n        return env_setting\n\n    return config_open_build_dir\n\n# Open the build dir in Finder.\n#\ndef open_build_dir():\n    print_and_call(['open', os.environ['TARGET_BUILD_DIR']])\n\n# Check if the build was started by selecting \"Archive\" under \"Product\" in\n# Xcode.\n#\ndef is_archive_build():\n    # ACTION is always 'build', but perhaps Apple will fix this someday?\n    archive_build = os.environ['ACTION'] == 'archive'\n\n    if not archive_build:\n        # This can be passed in as an env variable when building from command line.\n        archive_build = os.environ.get('UFW_ACTION', None) == 'archive'\n\n    build_dir = splitpath(os.environ['BUILD_DIR'])\n    if not archive_build:\n        # This partial path is used when you select \"archive\" from within Xcode.\n        archive_build = 'ArchiveIntermediates' in build_dir\n\n    # It only counts as a full archive build if this target is being built into\n    # its own build dir (not being built as a dependency of another target)\n    if archive_build:\n        archive_build = os.environ['TARGET_NAME'] in build_dir\n    \n    return archive_build\n\n# Xcode by default throws all public headers into the top level directory.\n# This function moves them to their expected deep hierarchy.\n#\ndef build_deep_header_hierarchy(project):\n    header_path_top = config_deep_header_top\n    if not header_path_top:\n        header_path_top = os.path.commonprefix(project.header_paths)\n    else:\n        header_path_top = splitpath(header_path_top)\n\n    built_headers_path = os.path.join(os.environ['TARGET_BUILD_DIR'], os.environ['PUBLIC_HEADERS_FOLDER_PATH'])\n    movable_headers = project.movable_headers_relative_to(header_path_top)\n\n    # Remove subdirs if they only contain files that have been rebuilt\n    ignore_headers = filter(lambda x: not os.path.isfile(top_level_file_path(built_headers_path, x)), movable_headers)\n    remove_subdirs(built_headers_path, [file[0] for file in ignore_headers])\n\n    # Move rebuilt headers into their proper subdirs\n    for header in movable_headers:\n        move_file(top_level_file_path(built_headers_path, header), full_file_path(built_headers_path, header))\n\n# Add all symlinks needed to make a full framework structure:\n#\n# MyFramework.framework\n# |-- MyFramework -> Versions/Current/MyFramework\n# |-- Headers -> Versions/Current/Headers\n# |-- Resources -> Versions/Current/Resources\n# `-- Versions\n#     |-- A\n#     |   |-- MyFramework\n#     |   |-- Headers\n#     |   |   `-- MyFramework.h\n#     |   `-- Resources\n#     |       |-- Info.plist\n#     |       |-- MyViewController.nib\n#     |       `-- en.lproj\n#     |           `-- InfoPlist.strings\n#     `-- Current -> A\n#\ndef add_symlinks_to_framework(project):\n    base_dir = project.local_built_fw_path\n    attempt_symlink(os.path.join(base_dir, \"Versions\", \"Current\"), os.environ['FRAMEWORK_VERSION'])\n    if os.path.isdir(os.path.join(base_dir, \"Versions\", \"Current\", \"Headers\")):\n        attempt_symlink(os.path.join(base_dir, \"Headers\"), os.path.join(\"Versions\", \"Current\", \"Headers\"))\n    if os.path.isdir(os.path.join(base_dir, \"Versions\", \"Current\", \"Resources\")):\n        attempt_symlink(os.path.join(base_dir, \"Resources\"), os.path.join(\"Versions\", \"Current\", \"Resources\"))\n    attempt_symlink(os.path.join(base_dir, os.environ['EXECUTABLE_NAME']), os.path.join(\"Versions\", \"Current\", os.environ['EXECUTABLE_NAME']))\n\n# Build an embedded framework structure.\n# An embedded framework contains the actual framework, plus a \"Resources\"\n# directory containing symlinks to all resources found in the actual framework,\n# with the exception of \"Info.plist\" and anything ending in \".lproj\":\n#\n# MyFramework.embeddedframework\n# |-- MyFramework.framework\n# |   |-- MyFramework -> Versions/Current/MyFramework\n# |   |-- Headers -> Versions/Current/Headers\n# |   |-- Resources -> Versions/Current/Resources\n# |   `-- Versions\n# |       |-- A\n# |       |   |-- MyFramework\n# |       |   |-- Headers\n# |       |   |   `-- MyFramework.h\n# |       |   `-- Resources\n# |       |       |-- Info.plist\n# |       |       |-- MyViewController.nib\n# |       |       `-- en.lproj\n# |       |           `-- InfoPlist.strings\n# |       `-- Current -> A\n# `-- Resources\n#     `-- MyViewController.nib -> ../MyFramework.framework/Resources/MyViewController.nib\n#\ndef build_embedded_framework(project):\n    fw_path = project.local_built_fw_path\n    embedded_path = project.local_built_embedded_fw_path\n    fw_name = os.environ['WRAPPER_NAME']\n    remove_path(embedded_path)\n    ensure_path_exists(embedded_path)\n    copy_overwrite(fw_path, os.path.join(embedded_path, fw_name))\n    ensure_path_exists(os.path.join(embedded_path, \"Resources\"))\n    symlink_source = os.path.join(\"..\", fw_name, \"Resources\")\n    symlink_path = os.path.join(embedded_path, \"Resources\")\n    if os.path.isdir(os.path.join(fw_path, \"Resources\")):\n        for file in filter(lambda x: x != \"Info.plist\" and not x.endswith(\".lproj\"), os.listdir(os.path.join(fw_path, \"Resources\"))):\n            attempt_symlink(os.path.join(symlink_path, file), os.path.join(symlink_source, file))\n\n    # Remove the normal framework and replace it with a symlink to the copy\n    # in the embedded framework. This is needed because Xcode runs its strip\n    # phase AFTER the script runs.\n    embed_fw_wrapper = os.path.splitext(os.environ['WRAPPER_NAME'])[0] + \".embeddedframework\"\n    remove_path(fw_path)\n    attempt_symlink(fw_path, os.path.join(embed_fw_wrapper, os.environ['WRAPPER_NAME']))\n\n\n# Run the build process in slave mode to build the other configuration\n# (device/simulator).\n#\ndef run_slave_build(project):\n    print_and_call_slave_build(project.get_slave_project_build_command(), project.other_platform)\n\n# Run the build process.\n#\ndef run_build():\n    project = Project(os.path.join(os.environ['PROJECT_FILE_PATH'], \"project.pbxproj\"))\n\n    # Issue warnings only if we're master.\n    if is_master():\n        if len(project.compilable_sources) == 0:\n            raise Exception(\"No compilable sources found. Please add at least one source file to build target %s.\" % os.environ['TARGET_NAME'])\n\n        if config_warn_derived_data:\n            check_for_derived_data_in_search_paths(project)\n        if config_warn_no_public_headers and len(project.public_headers) == 0:\n            issue_warning('No headers in build target %s were marked public. Please move at least one header to \"Public\" in the \"Copy Headers\" build phase.' % os.environ['TARGET_NAME'])\n\n    # Only build slave if this is an archive build.\n    if is_archive_build():\n        if is_master():\n            log.debug(\"Building as MASTER\")\n            # The slave-side linker tries to include this (nonexistent) path as\n            # a library path.\n            ensure_path_exists(project.get_slave_environment()['BUILT_PRODUCTS_DIR'])\n            project.build_state.persist()\n            run_slave_build(project)\n            project.build_state.reload()\n        else:\n            log.debug(\"Building as SLAVE\")\n            project.build_state.reload()\n            project.build_state.set_slave_properties(project.local_architectures,\n                                                     project.local_linked_archive_paths,\n                                                     project.local_built_fw_path,\n                                                     project.local_built_embedded_fw_path)\n            project.build_state.persist()\n\n    link_local_archs(project)\n    \n    # Only do a universal binary when building an archive.\n    if is_archive_build() and is_master():\n        link_combine_all_archs(project)\n    else:\n        link_combine_local_archs(project)\n\n    if config_deep_header_hierarchy:\n        build_deep_header_hierarchy(project)\n\n    add_symlinks_to_framework(project)\n    \n    if is_master():\n        if config_framework_type == 'embeddedframework':\n            build_embedded_framework(project)\n        elif config_framework_type != 'framework':\n            raise Exception(\"%s: Unknown framework type for config_framework_type\" % config_framework_type)\n\n\nif __name__ == \"__main__\":\n    log_handler = logging.StreamHandler()\n    log_handler.setFormatter(logging.Formatter(\"%(name)s (\" + os.environ['PLATFORM_NAME'] + \"): %(levelname)s: %(message)s\"))\n    log.addHandler(log_handler)\n    log.setLevel(config_log_level)\n\n    error_code = 0\n    prefix = \"M\" if is_master() else \"S\"\n    log_handler.setFormatter(logging.Formatter(\"%(name)s (\" + prefix + \" \" + os.environ['PLATFORM_NAME'] + \"): %(levelname)s: %(message)s\"))\n\n    log.debug(\"Begin build process\")\n\n    if config_deep_header_top:\n        config_deep_header_top = string.Template(config_deep_header_top).substitute(os.environ)\n\n    try:\n        run_build()\n        if issued_warnings:\n            if config_fail_on_warnings:\n                error_code = 1\n            log.warn(\"Build completed with warnings\")\n        else:\n            log.info(\"Build completed\")\n        if not is_archive_build():\n            log.info(\"Note: This is *NOT* a universal framework build. To build as a universal framework, do an archive build.\")\n            log.info(\"To do an archive build from command line, use \\\"xcodebuild -configuration Release UFW_ACTION=archive clean build\\\"\")\n    except Exception:\n        traceback.print_exc(file=sys.stdout)\n        error_code = 1\n        log.error(\"Build failed\")\n    finally:\n        if error_code == 0 and is_archive_build() and is_master():\n            log.info(\"Built framework is in \" + os.environ['TARGET_BUILD_DIR'])\n            if should_open_build_dir():\n                open_build_dir()\n        sys.exit(error_code)\n";
		};
		CB775561169F40BD00EA90A5 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "${PROJECT_DIR}/XcodeCoverage/exportenv.sh";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		39DA35AE1618432E009EB332 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				39DA82C016184456001E7F79 /* KSCrash.m in Sources */,
				39DA82C616184456001E7F79 /* KSCrashReportStore.m in Sources */,
				39DA82E316184487001E7F79 /* KSCrashReportFilterSets.m in Sources */,
				39DA82E716184487001E7F79 /* KSCrashReportFilter.m in Sources */,
				39DA82EB16184487001E7F79 /* KSCrashReportFilterAlert.m in Sources */,
				39DA82EF16184487001E7F79 /* KSCrashReportFilterAppleFmt.m in Sources */,
				39DA82F316184487001E7F79 /* KSCrashReportFilterBasic.m in Sources */,
				39DA82F716184487001E7F79 /* KSCrashReportFilterGZip.m in Sources */,
				39DA82FB16184487001E7F79 /* KSCrashReportFilterJSON.m in Sources */,
				39DA82FF16184487001E7F79 /* KSCrashReportSinkConsole.m in Sources */,
				39DA830316184487001E7F79 /* KSCrashReportSinkEMail.m in Sources */,
				39DA830716184487001E7F79 /* KSCrashReportSinkQuincyHockey.m in Sources */,
				39DA830B16184487001E7F79 /* KSCrashReportSinkStandard.m in Sources */,
				39DA831C16184492001E7F79 /* Container+DeepSearch.m in Sources */,
				39DA832016184492001E7F79 /* KSHTTPMultipartPostBody.m in Sources */,
				39DA832416184492001E7F79 /* KSHTTPRequestSender.m in Sources */,
				39DA832816184492001E7F79 /* KSReachabilityKSCrash.m in Sources */,
				39DA832E16184492001E7F79 /* NSData+GZip.m in Sources */,
				39DA833216184492001E7F79 /* NSMutableData+AppendUTF8.m in Sources */,
				39DA835F161844FF001E7F79 /* KSBacktrace.c in Sources */,
				39DA8363161844FF001E7F79 /* KSFileUtils.c in Sources */,
				39DA8367161844FF001E7F79 /* KSJSONCodec.c in Sources */,
				39DA836D161844FF001E7F79 /* KSJSONCodecObjC.m in Sources */,
				39DA8373161844FF001E7F79 /* KSLogger.m in Sources */,
				39DA8375161844FF001E7F79 /* KSMach_Arm.c in Sources */,
				39DA8377161844FF001E7F79 /* KSMach_x86_32.c in Sources */,
				39DA8379161844FF001E7F79 /* KSMach_x86_64.c in Sources */,
				39DA837B161844FF001E7F79 /* KSMach.c in Sources */,
				39DA837F161844FF001E7F79 /* KSObjC.c in Sources */,
				39DA8385161844FF001E7F79 /* KSSafeCollections.m in Sources */,
				39DA8387161844FF001E7F79 /* KSSignalInfo.c in Sources */,
				39DA838B161844FF001E7F79 /* KSString.c in Sources */,
				39DA838F161844FF001E7F79 /* KSSysCtl.c in Sources */,
				39DA8395161844FF001E7F79 /* KSZombie.m in Sources */,
				39DA839B161844FF001E7F79 /* RFC3339DateTool.m in Sources */,
				39DA83B11618450A001E7F79 /* KSCrashC.c in Sources */,
				39DA83B71618450A001E7F79 /* KSCrashReport.c in Sources */,
				39DA83BD1618450A001E7F79 /* KSCrashSentry_MachException.c in Sources */,
				39DA83C31618450A001E7F79 /* KSCrashSentry_NSException.m in Sources */,
				39DA83C71618450A001E7F79 /* KSCrashSentry_Signal.c in Sources */,
				39DA83CB1618450A001E7F79 /* KSCrashSentry.c in Sources */,
				39DA83CF1618450A001E7F79 /* KSCrashState.c in Sources */,
				39DA83D51618450A001E7F79 /* KSSystemInfo.m in Sources */,
				39DA84F7161978D7001E7F79 /* NSDictionary+Merge.m in Sources */,
				394DCC72164F43C2008A4C50 /* KSCrashDoctor.m in Sources */,
				39D329DE16765AD500D989DC /* KSCrashSentry_Deadlock.m in Sources */,
				CB5A5B3E16C6650E00DC1D2D /* NSError+SimpleConstructor.m in Sources */,
				CB5A5B4616C718C500DC1D2D /* KSCrashCallCompletion.m in Sources */,
				CBE3D8E816C7A61400C4105E /* KSCrashInstallationQuincyHockey.m in Sources */,
				CB7C754616CD5F5F00227870 /* KSCrashInstallation.m in Sources */,
				CB1B377216D74F3C00FFFCEA /* KSCString.m in Sources */,
				CBF2D93C16DE86B00003AD7E /* KSCrashInstallationEmail.m in Sources */,
				CBF2D94216DEDCC10003AD7E /* KSCrashInstallationStandard.m in Sources */,
				2122BBD116F185120056D11C /* KSCrashReportSinkTakanashi.m in Sources */,
				2193ACC616F19D690016EA5F /* KSCrashInstallationTakanashi.m in Sources */,
				CBCED88D175E567F00BF56F0 /* KSCrashSentry_User.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		39DA35C216184338009EB332 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				39DA82C116184456001E7F79 /* KSCrash.m in Sources */,
				39DA82C716184456001E7F79 /* KSCrashReportStore.m in Sources */,
				39DA82E416184487001E7F79 /* KSCrashReportFilterSets.m in Sources */,
				39DA82E816184487001E7F79 /* KSCrashReportFilter.m in Sources */,
				39DA82EC16184487001E7F79 /* KSCrashReportFilterAlert.m in Sources */,
				39DA82F016184487001E7F79 /* KSCrashReportFilterAppleFmt.m in Sources */,
				39DA82F416184487001E7F79 /* KSCrashReportFilterBasic.m in Sources */,
				39DA82F816184487001E7F79 /* KSCrashReportFilterGZip.m in Sources */,
				39DA82FC16184487001E7F79 /* KSCrashReportFilterJSON.m in Sources */,
				39DA830016184487001E7F79 /* KSCrashReportSinkConsole.m in Sources */,
				39DA830416184487001E7F79 /* KSCrashReportSinkEMail.m in Sources */,
				39DA830816184487001E7F79 /* KSCrashReportSinkQuincyHockey.m in Sources */,
				39DA830C16184487001E7F79 /* KSCrashReportSinkStandard.m in Sources */,
				39DA831D16184492001E7F79 /* Container+DeepSearch.m in Sources */,
				39DA832116184492001E7F79 /* KSHTTPMultipartPostBody.m in Sources */,
				39DA832516184492001E7F79 /* KSHTTPRequestSender.m in Sources */,
				39DA832916184492001E7F79 /* KSReachabilityKSCrash.m in Sources */,
				39DA832F16184492001E7F79 /* NSData+GZip.m in Sources */,
				39DA833316184492001E7F79 /* NSMutableData+AppendUTF8.m in Sources */,
				39DA8360161844FF001E7F79 /* KSBacktrace.c in Sources */,
				39DA8364161844FF001E7F79 /* KSFileUtils.c in Sources */,
				39DA8368161844FF001E7F79 /* KSJSONCodec.c in Sources */,
				39DA836E161844FF001E7F79 /* KSJSONCodecObjC.m in Sources */,
				39DA8374161844FF001E7F79 /* KSLogger.m in Sources */,
				39DA8376161844FF001E7F79 /* KSMach_Arm.c in Sources */,
				39DA8378161844FF001E7F79 /* KSMach_x86_32.c in Sources */,
				39DA837A161844FF001E7F79 /* KSMach_x86_64.c in Sources */,
				39DA837C161844FF001E7F79 /* KSMach.c in Sources */,
				39DA8380161844FF001E7F79 /* KSObjC.c in Sources */,
				39DA8386161844FF001E7F79 /* KSSafeCollections.m in Sources */,
				39DA8388161844FF001E7F79 /* KSSignalInfo.c in Sources */,
				39DA838C161844FF001E7F79 /* KSString.c in Sources */,
				39DA8390161844FF001E7F79 /* KSSysCtl.c in Sources */,
				39DA8396161844FF001E7F79 /* KSZombie.m in Sources */,
				39DA839C161844FF001E7F79 /* RFC3339DateTool.m in Sources */,
				39DA83B21618450A001E7F79 /* KSCrashC.c in Sources */,
				39DA83B81618450A001E7F79 /* KSCrashReport.c in Sources */,
				39DA83BE1618450A001E7F79 /* KSCrashSentry_MachException.c in Sources */,
				39DA83C41618450A001E7F79 /* KSCrashSentry_NSException.m in Sources */,
				39DA83C81618450A001E7F79 /* KSCrashSentry_Signal.c in Sources */,
				39DA83CC1618450A001E7F79 /* KSCrashSentry.c in Sources */,
				39DA83D01618450A001E7F79 /* KSCrashState.c in Sources */,
				39DA83D61618450A001E7F79 /* KSSystemInfo.m in Sources */,
				39DA84F9161978DE001E7F79 /* NSDictionary+Merge.m in Sources */,
				394DCC74164F547E008A4C50 /* KSCrashDoctor.m in Sources */,
				39D329DF16765AD500D989DC /* KSCrashSentry_Deadlock.m in Sources */,
				CBC74E9E169FD6FC001A688D /* GCDAProfiling.c in Sources */,
				CB5A5B4016C6650E00DC1D2D /* NSError+SimpleConstructor.m in Sources */,
				CB5A5B4816C718C500DC1D2D /* KSCrashCallCompletion.m in Sources */,
				CBE3D8E916C7A61400C4105E /* KSCrashInstallationQuincyHockey.m in Sources */,
				CB7C754816CD5F5F00227870 /* KSCrashInstallation.m in Sources */,
				CB1B377416D74F3C00FFFCEA /* KSCString.m in Sources */,
				CBF2D93D16DE86B00003AD7E /* KSCrashInstallationEmail.m in Sources */,
				CBF2D94316DEDCC10003AD7E /* KSCrashInstallationStandard.m in Sources */,
				2122BBD216F185120056D11C /* KSCrashReportSinkTakanashi.m in Sources */,
				2193ACC716F19D690016EA5F /* KSCrashInstallationTakanashi.m in Sources */,
				CBCED88F175E567F00BF56F0 /* KSCrashSentry_User.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		39DA35CF16184338009EB332 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				39DA84331618D02F001E7F79 /* Container+DeepSearch_Tests.m in Sources */,
				39DA84351618D02F001E7F79 /* FileBasedTestCase.m in Sources */,
				39DA84361618D02F001E7F79 /* KSCrashReportConverter_Tests.m in Sources */,
				39DA84371618D02F001E7F79 /* KSCrashReportFilter_Tests.m in Sources */,
				39DA84381618D02F001E7F79 /* KSCrashReportStore_Tests.m in Sources */,
				39DA84391618D02F001E7F79 /* KSCrashState_Tests.m in Sources */,
				39DA843A1618D02F001E7F79 /* KSFileUtils_Tests.m in Sources */,
				39DA843B1618D02F001E7F79 /* KSJSONCodec_Tests.m in Sources */,
				39DA843C1618D02F001E7F79 /* KSMach_Tests.m in Sources */,
				39DA843E1618D02F001E7F79 /* KSObjC_Tests.m in Sources */,
				39DA843F1618D02F001E7F79 /* KSSignalInfo_Tests.m in Sources */,
				39DA84401618D02F001E7F79 /* NSData+Gzip_Tests.m in Sources */,
				39DA84411618D02F001E7F79 /* NSMutableData+AppendUTF8_Tests.m in Sources */,
				39DA84421618D02F001E7F79 /* RFC3339DateTool_Tests.m in Sources */,
				39DA84441618D02F001E7F79 /* SenTestCase+KSCrash.m in Sources */,
				39DA84FD16198753001E7F79 /* NSDictionary+Merge_Tests.m in Sources */,
				CB117DBF16B4402B00FA3F2A /* KSZombie_Tests.m in Sources */,
				CB117DC216B4465500FA3F2A /* KSSystemInfo_Tests.m in Sources */,
				CB117DC516B4488400FA3F2A /* KSSysCtl_Tests.m in Sources */,
				CB117DC816B44FC600FA3F2A /* KSString_Tests.m in Sources */,
				CB117DCB16B458FC00FA3F2A /* KSSafeCollections_Tests.m in Sources */,
				CB117DCF16B4990B00FA3F2A /* KSLogger_Tests.m in Sources */,
				CB117DD516B4C4C500FA3F2A /* KSCrashSentry_Deadlock_Tests.m in Sources */,
				CB117DD816B4C62000FA3F2A /* KSCrashSentry_NSException_Tests.m in Sources */,
				CB117DDB16B4C75E00FA3F2A /* KSCrashSentry_Signal_Tests.m in Sources */,
				CBF2D94616E256270003AD7E /* KSCString_Tests.m in Sources */,
				CBF2D94916E25E520003AD7E /* NSError+SimpleConstructor_Tests.m in Sources */,
				CBF2D94C16E260AB0003AD7E /* KSCrashSentry_Tests.m in Sources */,
				CBF2D94F16E27AD90003AD7E /* KSCrashReportFilterJSON_Tests.m in Sources */,
				CBF2D95216E27B300003AD7E /* KSCrashReportFilterGZip_Tests.m in Sources */,
				CBF2D95516E27BF60003AD7E /* KSCrashReportFilterAlert_Tests.m in Sources */,
				CBD9A64416E3E875007142EE /* KSCrashInstallationEmail_Tests.m in Sources */,
				CBD9A64716E3EC02007142EE /* KSCrashInstallationQuincyHockey_Tests.m in Sources */,
				CBD9A64A16E3F424007142EE /* KSCrashInstallationStandard_Tests.m in Sources */,
				21D6639E16F1AD1400654F31 /* KSCrashInstallationTakanashi_Tests.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		CB0AA0E8167EC43E006EAB99 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				CB0AA0FD167EC460006EAB99 /* KSCrashC.c in Sources */,
				CB0AA100167EC460006EAB99 /* KSCrashReport.c in Sources */,
				CB0AA104167EC460006EAB99 /* KSCrashState.c in Sources */,
				CB0AA107167EC460006EAB99 /* KSSystemInfo.m in Sources */,
				CB0AA109167EC465006EAB99 /* KSCrashSentry.c in Sources */,
				CB0AA10C167EC465006EAB99 /* KSCrashSentry_Deadlock.m in Sources */,
				CB0AA10E167EC465006EAB99 /* KSCrashSentry_MachException.c in Sources */,
				CB0AA111167EC465006EAB99 /* KSCrashSentry_NSException.m in Sources */,
				CB0AA112167EC465006EAB99 /* KSCrashSentry_Signal.c in Sources */,
				CB0AA117167EC470006EAB99 /* KSBacktrace.c in Sources */,
				CB0AA119167EC470006EAB99 /* KSFileUtils.c in Sources */,
				CB0AA11B167EC470006EAB99 /* KSJSONCodec.c in Sources */,
				CB0AA11E167EC470006EAB99 /* KSJSONCodecObjC.m in Sources */,
				CB0AA120167EC470006EAB99 /* KSLogger.m in Sources */,
				CB0AA121167EC470006EAB99 /* KSMach_Arm.c in Sources */,
				CB0AA122167EC470006EAB99 /* KSMach_x86_32.c in Sources */,
				CB0AA123167EC470006EAB99 /* KSMach_x86_64.c in Sources */,
				CB0AA124167EC470006EAB99 /* KSMach.c in Sources */,
				CB0AA126167EC470006EAB99 /* KSObjC.c in Sources */,
				CB0AA129167EC470006EAB99 /* KSSafeCollections.m in Sources */,
				CB0AA12A167EC470006EAB99 /* KSSignalInfo.c in Sources */,
				CB0AA12C167EC470006EAB99 /* KSString.c in Sources */,
				CB0AA12E167EC470006EAB99 /* KSSysCtl.c in Sources */,
				CB0AA131167EC470006EAB99 /* KSZombie.m in Sources */,
				CB0AA134167EC470006EAB99 /* RFC3339DateTool.m in Sources */,
				CB0AA136167EC477006EAB99 /* KSCrashDoctor.m in Sources */,
				CB0AA138167EC477006EAB99 /* KSCrashReportStore.m in Sources */,
				CB0AA13A167EC480006EAB99 /* KSCrashReportFilter.m in Sources */,
				CB0AA13E167EC480006EAB99 /* KSCrashReportFilterAlert.m in Sources */,
				CB0AA140167EC480006EAB99 /* KSCrashReportFilterAppleFmt.m in Sources */,
				CB0AA142167EC480006EAB99 /* KSCrashReportFilterBasic.m in Sources */,
				CB0AA144167EC485006EAB99 /* KSCrashReportFilterJSON.m in Sources */,
				CB0AA146167EC485006EAB99 /* KSCrashReportSinkConsole.m in Sources */,
				CB0AA14A167EC4AD006EAB99 /* Container+DeepSearch.m in Sources */,
				CB0AA14C167EC4AD006EAB99 /* KSHTTPMultipartPostBody.m in Sources */,
				CB0AA14E167EC4AD006EAB99 /* KSHTTPRequestSender.m in Sources */,
				CB0AA150167EC4AD006EAB99 /* KSReachabilityKSCrash.m in Sources */,
				CB0AA153167EC4B1006EAB99 /* NSDictionary+Merge.m in Sources */,
				CB0AA155167EC4B1006EAB99 /* NSMutableData+AppendUTF8.m in Sources */,
				CB0AA157167EC4B5006EAB99 /* KSCrash.m in Sources */,
				CB5A5B3F16C6650E00DC1D2D /* NSError+SimpleConstructor.m in Sources */,
				CB5A5B4716C718C500DC1D2D /* KSCrashCallCompletion.m in Sources */,
				CB7C754716CD5F5F00227870 /* KSCrashInstallation.m in Sources */,
				CB1B377316D74F3C00FFFCEA /* KSCString.m in Sources */,
				CBCED88E175E567F00BF56F0 /* KSCrashSentry_User.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		39DA35DB16184338009EB332 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 39DA35C516184338009EB332 /* KSCrashLib */;
			targetProxy = 39DA35DA16184338009EB332 /* PBXContainerItemProxy */;
		};
		39DA844E1618D2F5001E7F79 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 39DA35B31618432E009EB332 /* KSCrash */;
			targetProxy = 39DA844D1618D2F5001E7F79 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin PBXVariantGroup section */
		39DA35B81618432E009EB332 /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				39DA35B91618432E009EB332 /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
		39DA35E016184338009EB332 /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				39DA35E116184338009EB332 /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
		CB0AA0F2167EC43E006EAB99 /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				CB0AA0F3167EC43E006EAB99 /* en */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
/* End PBXVariantGroup section */

/* Begin XCBuildConfiguration section */
		39DA35A91618430D009EB332 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_SECURITY_FLOATLOOPCOUNTER = YES;
				CLANG_ANALYZER_SECURITY_INSECUREAPI_RAND = YES;
				CLANG_ANALYZER_SECURITY_INSECUREAPI_STRCPY = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CXX0X_EXTENSIONS = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_IMPLICIT_SIGN_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_ATOMIC_PROPERTIES = YES;
				CLANG_WARN_OBJC_MISSING_PROPERTY_SYNTHESIS = YES;
				CLANG_WARN_OBJC_RECEIVER_WEAK = YES;
				CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				CLANG_WARN__EXIT_TIME_DESTRUCTORS = YES;
				COPY_PHASE_STRIP = NO;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_MISSING_NEWLINE = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_FOUR_CHARACTER_CONSTANTS = YES;
				GCC_WARN_HIDDEN_VIRTUAL_FUNCTIONS = YES;
				GCC_WARN_INITIALIZER_NOT_FULLY_BRACKETED = YES;
				GCC_WARN_NON_VIRTUAL_DESTRUCTOR = YES;
				GCC_WARN_SHADOW = YES;
				GCC_WARN_SIGN_COMPARE = YES;
				GCC_WARN_STRICT_SELECTOR_MATCH = YES;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNKNOWN_PRAGMAS = YES;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_LABEL = YES;
				GCC_WARN_UNUSED_PARAMETER = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 4.3;
				SDKROOT = iphoneos;
				STRIP_STYLE = debugging;
			};
			name = Debug;
		};
		39DA35AA1618430D009EB332 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_SECURITY_FLOATLOOPCOUNTER = YES;
				CLANG_ANALYZER_SECURITY_INSECUREAPI_RAND = YES;
				CLANG_ANALYZER_SECURITY_INSECUREAPI_STRCPY = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_CXX0X_EXTENSIONS = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_IMPLICIT_SIGN_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_ATOMIC_PROPERTIES = YES;
				CLANG_WARN_OBJC_MISSING_PROPERTY_SYNTHESIS = YES;
				CLANG_WARN_OBJC_RECEIVER_WEAK = YES;
				CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				CLANG_WARN__EXIT_TIME_DESTRUCTORS = YES;
				COPY_PHASE_STRIP = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_MISSING_NEWLINE = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_FOUR_CHARACTER_CONSTANTS = YES;
				GCC_WARN_HIDDEN_VIRTUAL_FUNCTIONS = YES;
				GCC_WARN_INITIALIZER_NOT_FULLY_BRACKETED = YES;
				GCC_WARN_NON_VIRTUAL_DESTRUCTOR = YES;
				GCC_WARN_SHADOW = YES;
				GCC_WARN_SIGN_COMPARE = YES;
				GCC_WARN_STRICT_SELECTOR_MATCH = YES;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNKNOWN_PRAGMAS = YES;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_LABEL = YES;
				GCC_WARN_UNUSED_PARAMETER = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 4.3;
				SDKROOT = iphoneos;
				STRIP_STYLE = debugging;
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
		39DA35C01618432E009EB332 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = NO;
				CONTENTS_FOLDER_PATH = "$(WRAPPER_NAME)/Versions/$(FRAMEWORK_VERSION)";
				DEAD_CODE_STRIPPING = NO;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "KSCrash/KSCrash-Prefix.pch";
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				INFOPLIST_FILE = "KSCrash/KSCrash-Info.plist";
				INFOPLIST_PATH = "$(UNLOCALIZED_RESOURCES_FOLDER_PATH)/Info.plist";
				INSTALL_PATH = "$(BUILT_PRODUCTS_DIR)";
				LINK_WITH_STANDARD_LIBRARIES = NO;
				MACH_O_TYPE = mh_object;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SKIP_INSTALL = YES;
				UNLOCALIZED_RESOURCES_FOLDER_PATH = "$(CONTENTS_FOLDER_PATH)/Resources";
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		39DA35C11618432E009EB332 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = NO;
				CONTENTS_FOLDER_PATH = "$(WRAPPER_NAME)/Versions/$(FRAMEWORK_VERSION)";
				DEAD_CODE_STRIPPING = NO;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "KSCrash/KSCrash-Prefix.pch";
				INFOPLIST_FILE = "KSCrash/KSCrash-Info.plist";
				INFOPLIST_PATH = "$(UNLOCALIZED_RESOURCES_FOLDER_PATH)/Info.plist";
				INSTALL_PATH = "$(BUILT_PRODUCTS_DIR)";
				LINK_WITH_STANDARD_LIBRARIES = NO;
				MACH_O_TYPE = mh_object;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SKIP_INSTALL = YES;
				UNLOCALIZED_RESOURCES_FOLDER_PATH = "$(CONTENTS_FOLDER_PATH)/Resources";
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
		39DA35E716184338009EB332 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = NO;
				DSTROOT = /tmp/KSCrashLib.dst;
				GCC_GENERATE_TEST_COVERAGE_FILES = YES;
				GCC_INSTRUMENT_PROGRAM_FLOW_ARCS = YES;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "KSCrashLib/KSCrashLib-Prefix.pch";
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				OTHER_LDFLAGS = "-ObjC";
				PRIVATE_HEADERS_FOLDER_PATH = "include/$(TARGET_NAME)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				PUBLIC_HEADERS_FOLDER_PATH = "include/$(TARGET_NAME)";
				SKIP_INSTALL = YES;
			};
			name = Debug;
		};
		39DA35E816184338009EB332 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = NO;
				DSTROOT = /tmp/KSCrashLib.dst;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "KSCrashLib/KSCrashLib-Prefix.pch";
				OTHER_LDFLAGS = "-ObjC";
				PRIVATE_HEADERS_FOLDER_PATH = "include/$(TARGET_NAME)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				PUBLIC_HEADERS_FOLDER_PATH = "include/$(TARGET_NAME)";
				SKIP_INSTALL = YES;
			};
			name = Release;
		};
		39DA35EA16184338009EB332 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"\"$(SDKROOT)/Developer/Library/Frameworks\"",
					"\"$(DEVELOPER_LIBRARY_DIR)/Frameworks\"",
				);
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "KSCrashLib/KSCrashLib-Prefix.pch";
				INFOPLIST_FILE = "KSCrashTests/KSCrashTests-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 5.0;
				OTHER_LDFLAGS = "-ObjC";
				PRODUCT_NAME = "$(TARGET_NAME)";
				WRAPPER_EXTENSION = octest;
			};
			name = Debug;
		};
		39DA35EB16184338009EB332 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"\"$(SDKROOT)/Developer/Library/Frameworks\"",
					"\"$(DEVELOPER_LIBRARY_DIR)/Frameworks\"",
				);
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "KSCrashLib/KSCrashLib-Prefix.pch";
				INFOPLIST_FILE = "KSCrashTests/KSCrashTests-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 5.0;
				OTHER_LDFLAGS = "-ObjC";
				PRODUCT_NAME = "$(TARGET_NAME)";
				WRAPPER_EXTENSION = octest;
			};
			name = Release;
		};
		CB0AA0F9167EC43E006EAB99 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = (
					armv6,
					"$(ARCHS_STANDARD_32_BIT)",
				);
				CLANG_ENABLE_OBJC_ARC = NO;
				CONTENTS_FOLDER_PATH = "$(WRAPPER_NAME)/Versions/$(FRAMEWORK_VERSION)";
				DEAD_CODE_STRIPPING = NO;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "KSCrashLite/KSCrashLite-Prefix.pch";
				GCC_THUMB_SUPPORT = NO;
				INFOPLIST_FILE = "KSCrashLite/KSCrashLite-Info.plist";
				INFOPLIST_PATH = "$(UNLOCALIZED_RESOURCES_FOLDER_PATH)/Info.plist";
				INSTALL_PATH = "$(BUILT_PRODUCTS_DIR)";
				LINK_WITH_STANDARD_LIBRARIES = NO;
				MACH_O_TYPE = mh_object;
				ONLY_ACTIVE_ARCH = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SKIP_INSTALL = YES;
				UNLOCALIZED_RESOURCES_FOLDER_PATH = "$(CONTENTS_FOLDER_PATH)/Resources";
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		CB0AA0FA167EC43E006EAB99 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = (
					armv6,
					"$(ARCHS_STANDARD_32_BIT)",
				);
				CLANG_ENABLE_OBJC_ARC = NO;
				CONTENTS_FOLDER_PATH = "$(WRAPPER_NAME)/Versions/$(FRAMEWORK_VERSION)";
				DEAD_CODE_STRIPPING = NO;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				FRAMEWORK_VERSION = A;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = "KSCrashLite/KSCrashLite-Prefix.pch";
				GCC_THUMB_SUPPORT = NO;
				INFOPLIST_FILE = "KSCrashLite/KSCrashLite-Info.plist";
				INFOPLIST_PATH = "$(UNLOCALIZED_RESOURCES_FOLDER_PATH)/Info.plist";
				INSTALL_PATH = "$(BUILT_PRODUCTS_DIR)";
				LINK_WITH_STANDARD_LIBRARIES = NO;
				MACH_O_TYPE = mh_object;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SKIP_INSTALL = YES;
				UNLOCALIZED_RESOURCES_FOLDER_PATH = "$(CONTENTS_FOLDER_PATH)/Resources";
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		39DA35971618430C009EB332 /* Build configuration list for PBXProject "KSCrash" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				39DA35A91618430D009EB332 /* Debug */,
				39DA35AA1618430D009EB332 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		39DA35BF1618432E009EB332 /* Build configuration list for PBXNativeTarget "KSCrash" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				39DA35C01618432E009EB332 /* Debug */,
				39DA35C11618432E009EB332 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		39DA35E616184338009EB332 /* Build configuration list for PBXNativeTarget "KSCrashLib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				39DA35E716184338009EB332 /* Debug */,
				39DA35E816184338009EB332 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		39DA35E916184338009EB332 /* Build configuration list for PBXNativeTarget "KSCrashTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				39DA35EA16184338009EB332 /* Debug */,
				39DA35EB16184338009EB332 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		CB0AA0FB167EC43E006EAB99 /* Build configuration list for PBXNativeTarget "KSCrashLite" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				CB0AA0F9167EC43E006EAB99 /* Debug */,
				CB0AA0FA167EC43E006EAB99 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 39DA35941618430C009EB332 /* Project object */;
}
